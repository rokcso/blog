<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rokcso&#39;s blog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Rokcso&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright © 2024, Rokcso.</copyright>
    <lastBuildDate>Mon, 09 Sep 2024 00:00:00 +0000</lastBuildDate>
    <follow_challenge>
        <feedId>55587008227934208</feedId>
        <userId>41373547352712192</userId>
    </follow_challenge>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Follow 中如何 Claim 自己的博客</title>
      <link>http://localhost:1313/p/follow-claim-feed/</link>
      <pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/follow-claim-feed/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/RSSNext/Follow&#34;&gt;Follow&lt;/a&gt; 是一个 RSS 阅读器，除了提供绝大多数 RSS 阅读器都具备的功能之外，Follow 还做了一件非常划时代的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;power&#34;&gt;$POWER&lt;/h2&gt;&#xA;&lt;p&gt;Power 是 &lt;a href=&#34;https://scan.rss3.io/token/0xE06Af68F0c9e819513a6CD083EF6848E76C28CD8&#34;&gt;VSL 区块链&lt;/a&gt; 上的 ERC-20 代币。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Power 有两种类型：&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Daily Power&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;来源：每天可以免费领取 2 个 Daily Power&lt;/li&gt;&#xA;&lt;li&gt;用处：只能用于打赏&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cashable Power&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;来源：用户充值或收到打赏&lt;/li&gt;&#xA;&lt;li&gt;用处：用于打赏或者提取到钱包中进行交易&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Follow 用户可以通过 Power 对订阅的 RSS Feed 进行打赏，而 RSS Feed 的创作者所获得的 Power 打赏将变成 Cashable Power 成为创作者实实在在的收益。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Foolow 创造了一种全新的（我不确定，但我之前没见过）内容消费和创作者收益模式。如果你是一名内容创作者，你可以通过在 Follow Claim 自己的 Feed 以领取别人给你打赏的 Power。&lt;/p&gt;&#xA;&lt;p&gt;如果你没有 Claim 你的 Feed，该 Feed 所收到的所有 Power 打赏都将被安全地保存在区块链合同中，直到 Feed 被 Claim。&lt;/p&gt;&#xA;&lt;h2 id=&#34;feed-claim&#34;&gt;Feed Claim&lt;/h2&gt;&#xA;&lt;p&gt;Follow 提供了 3 种 Feed Claim 验证方案，三种方案异曲同工，都是将 feedId 和 userId 添加到 Feed 的 RSS 代码中。选择其中一种即可。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Content&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;通过发布一篇带有 feedId 和 userId 的文章，内容可以使用 Follow 提供的：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;This message is used to verify that this feed (feedId:00000000000000000) belongs to me (userId:00000000000000000). Join me in enjoying RSS on the next generation information browser https://follow.is.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意要保证这篇文章能够被渲染到最终生成的 RSS 文件中（可以通过检查最终生成的 RSS 文件内容来确定），所以最好不要将这篇文章隐藏。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;直接把 feedId 和 userId 加入到 RSS 代码的 &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; 标签中，RSS 代码中的 &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; 标签包含的内容一般是 Feed 正文内容，所以本质上还是在发布的内容中添加 feedId 和 userId（类似 Content 方案）。&lt;/p&gt;&#xA;&lt;p&gt;比如可以直接在发布的文章内容末尾加上：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;feedId:00000000000000000+userId:00000000000000000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于大多数博客来说，RSS 文件一般是自动生成的（即使修改后下次部署依然会重新生成覆盖），或者不希望将 feedId 和 userId 直接暴露在博客前端页面中。&lt;/p&gt;&#xA;&lt;p&gt;所以建议采取第 3 种方式，直接修改 RSS 生成器，保证每次博客内容更新生成的 RSS 文件中都带有 feedId 和 userId。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;RSS Tag&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;我的博客使用 &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; 框架搭建，所以本文以此为例。&lt;/p&gt;&#xA;&lt;p&gt;建议先查看 Hugo 对于其 &lt;a href=&#34;https://gohugo.io/templates/rss/&#34;&gt;RSS templates&lt;/a&gt; 的说明，使用 Hugo 搭建的博客的 RSS 生成依赖于该 Template 代码。&lt;/p&gt;&#xA;&lt;p&gt;在自己 Hugo 博客源代码的 &lt;code&gt;layouts/_default&lt;/code&gt; 文件夹下创建一个 &lt;code&gt;rss.xml&lt;/code&gt;，将 Hugo 提供的 &lt;a href=&#34;https://github.com/gohugoio/hugo/blob/master/tpl/tplimpl/embedded/templates/_default/rss.xml&#34;&gt;RSS Template 代码&lt;/a&gt; 复制粘贴进去，在 &lt;code&gt;&amp;lt;channel&amp;gt;&lt;/code&gt; 标签中添加 Follow 提供的 XML 代码即可。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;follow_challenge&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;feedId&amp;gt;&lt;/span&gt;00000000000000000&lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;/feedId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;userId&amp;gt;&lt;/span&gt;00000000000000000&lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;/userId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;/follow_challenge&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其实也可以添加在 &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; 标签中，相当于给每篇文章都添加了 feedId 和 userId，而添加到 &lt;code&gt;&amp;lt;channel&amp;gt;&lt;/code&gt; 则相当于对整个站点进行添加。&lt;/p&gt;&#xA;&lt;p&gt;注意：如果使用的 Hugo 主题已经提供了 &lt;code&gt;rss.xml&lt;/code&gt; 就直接修改主题的 &lt;code&gt;rss.xml&lt;/code&gt;，以免发生冲突。&lt;/p&gt;&#xA;&lt;p&gt;最后重新部署 Hugo，检查 &lt;code&gt;public&lt;/code&gt; 文件夹下的 &lt;code&gt;index.xml&lt;/code&gt; 可以发现 feedId 和 userId 已经正确的出现在最终生成的 RSS 代码中了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;注意：如果你使用 Hugo 官方提供的 RSS Template 代码，请务必注意其对于 Hugo 版本的最低要求。&lt;/p&gt;&#xA;&lt;p&gt;我在使用了 Hugo 官方提供的 RSS Template 代码后重新部署博客，在本地测试正常，部署到 Cloudflare Pages 就报错提示 &lt;code&gt;transform.XMLEscape&lt;/code&gt; 方法异常，检查了 &lt;a href=&#34;https://gohugo.io/functions/&#34;&gt;Hugo Functions 说明文档&lt;/a&gt; 后发现 &lt;code&gt;transform.XMLEscape&lt;/code&gt; 方法在 &lt;code&gt;v0.121.0&lt;/code&gt; 版本进行了更新。&lt;/p&gt;&#xA;&lt;p&gt;而我部署在 Cloudflare Pages 上使用的 Hugo 版本为 &lt;code&gt;v0.118.0&lt;/code&gt;，在 Cloudflare Pages 项目设置中添加一个 &lt;code&gt;HUGO_VERSION&lt;/code&gt; 的环境变量即可解决。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>译&gt; 创始人模式</title>
      <link>http://localhost:1313/p/founder-mode/</link>
      <pubDate>Tue, 03 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/founder-mode/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文由 AI 翻译，人工修正。&lt;/p&gt;&#xA;&lt;p&gt;原文链接：&lt;a href=&#34;https://paulgraham.com/foundermode.html&#34;&gt;https://paulgraham.com/foundermode.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;At a YC event last week Brian Chesky gave a talk that everyone who was there will remember. Most founders I talked to afterward said it was the best they&amp;rsquo;d ever heard. Ron Conway, for the first time in his life, forgot to take notes. I&amp;rsquo;m not going to try to reproduce it here. Instead I want to talk about a question it raised.&lt;/p&gt;&#xA;&lt;p&gt;在上周 Y Combinator（YC）的活动中，Airbnb 的创始人 Brian Chesky 发表了一次演讲，让所有出席者都难以忘怀。与我交流的创始人们纷纷表示，这是他们所听过的最佳演讲。甚至 Ron Conway 在他一生中第一次忘了做笔记。我并不打算在这里复述他的演讲内容。相反，我想探讨它引出的一个问题。&lt;/p&gt;&#xA;&lt;p&gt;The theme of Brian&amp;rsquo;s talk was that the conventional wisdom about how to run larger companies is mistaken. As Airbnb grew, well-meaning people advised him that he had to run the company in a certain way for it to scale. Their advice could be optimistically summarized as &amp;ldquo;hire good people and give them room to do their jobs.&amp;rdquo; He followed this advice and the results were disastrous. So he had to figure out a better way on his own, which he did partly by studying how Steve Jobs ran Apple. So far it seems to be working. Airbnb&amp;rsquo;s free cash flow margin is now among the best in Silicon Valley.&lt;/p&gt;&#xA;&lt;p&gt;Brian Chesky 在演讲中提出，人们对于如何管理大型公司的普遍看法存在误区。Airbnb 在发展过程中，许多好心人建议他，为了实现公司的规模化，必须按照某种特定方式来经营。这些建议可以被简单地概括为「聘用优秀人才，并为他们提供足够的空间去大展拳脚」。然而，当他按照这些建议行事时，结果却是灾难性的。因此，他不得不自己去探索出一条更有效的管理途径，这部分是通过学习 Steve Jobs 如何管理苹果公司来实现的。到目前为止，这种方法到目前为止是成功的。Airbnb 的自由现金流目前在硅谷位列前茅。&lt;/p&gt;&#xA;&lt;p&gt;The audience at this event included a lot of the most successful founders we&amp;rsquo;ve funded, and one after another said that the same thing had happened to them. They&amp;rsquo;d been given the same advice about how to run their companies as they grew, but instead of helping their companies, it had damaged them.&lt;/p&gt;&#xA;&lt;p&gt;在这次活动中，许多极为成功的创始人也在场，他们纷纷表示自己也有类似的经历。随着各自公司规模的扩大，他们收到了相同的运营建议，但这些建议并没有促进公司的发展，反而带来了负面影响。&lt;/p&gt;&#xA;&lt;p&gt;Why was everyone telling these founders the wrong thing? That was the big mystery to me. And after mulling it over for a bit I figured out the answer: what they were being told was how to run a company you hadn&amp;rsquo;t founded — how to run a company if you&amp;rsquo;re merely a professional manager. But this m.o. is so much less effective that to founders it feels broken. There are things founders can do that managers can&amp;rsquo;t, and not doing them feels wrong to founders, because it is.&lt;/p&gt;&#xA;&lt;p&gt;为何许多人都向这些创始人提供了错误的建议？这对我来说一直是个不解之谜。经过一番思考，我找到了答案：他们所接受的建议是如何管理一个并非由你创立的公司。即：如果你仅仅是一个职业经理，该如何去运营公司。但这种运营模式的效果远远不及创始人亲自管理，以至于创始人感觉它行不通。有些只有创始人能做到的事情，职业经理人却做不到，而创始人如果不做去这些事情，他们会感到不对劲，事实确实如此。&lt;/p&gt;&#xA;&lt;p&gt;In effect there are two different ways to run a company: founder mode and manager mode. Till now most people even in Silicon Valley have implicitly assumed that scaling a startup meant switching to manager mode. But we can infer the existence of another mode from the dismay of founders who&amp;rsquo;ve tried it, and the success of their attempts to escape from it.&lt;/p&gt;&#xA;&lt;p&gt;实际上，有两种截然不同的公司经营方式：创始人模式和管理人模式。到目前为止，甚至在硅谷，大多数人的共识都是，初创公司要扩大规模，就需要转向管理人模式。然而，从那些尝试过这种模式并感到失望的创始人身上，以及他们努力摆脱这种模式并取得成功的案例中，我们可以推断出还存在另一种模式。&lt;/p&gt;&#xA;&lt;p&gt;There are as far as I know no books specifically about founder mode. Business schools don&amp;rsquo;t know it exists. All we have so far are the experiments of individual founders who&amp;rsquo;ve been figuring it out for themselves. But now that we know what we&amp;rsquo;re looking for, we can search for it. I hope in a few years founder mode will be as well understood as manager mode. We can already guess at some of the ways it will differ.&lt;/p&gt;&#xA;&lt;p&gt;据我所知，目前市面上还没有专门探讨创始人模式的书籍。传统的商学院教育也没有涵盖这一概念。到目前为止，我们所依赖的都是个别创始人的个人实践和自我探索。但现在，既然我们已经明确了探索的方向，我们就可以更有目的地去寻找和学习。我希望在未来几年内，创始人模式能够像管理人模式一样，被人们所熟知和理解。我们甚至可以预测，创始人模式在某些方面将与现有的管理人模式有何不同。&lt;/p&gt;&#xA;&lt;p&gt;The way managers are taught to run companies seems to be like modular design in the sense that you treat subtrees of the org chart as black boxes. You tell your direct reports what to do, and it&amp;rsquo;s up to them to figure out how. But you don&amp;rsquo;t get involved in the details of what they do. That would be micromanaging them, which is bad.&lt;/p&gt;&#xA;&lt;p&gt;管理人在运营公司时所采用的方法，类似于模块化设计的概念，即将组织结构中的各个分支视为独立的黑匣子。向直接下属指派任务，并由他们想办法完成。管理人不会介入他们具体的工作细节，因为那样会被视为过度管理，这通常被认为是一种不良的管理方式。&lt;/p&gt;&#xA;&lt;p&gt;Hire good people and give them room to do their jobs. Sounds great when it&amp;rsquo;s described that way, doesn&amp;rsquo;t it? Except in practice, judging from the report of founder after founder, what this often turns out to mean is: hire professional fakers and let them drive the company into the ground.&lt;/p&gt;&#xA;&lt;p&gt;招聘优秀人才并给予他们足够的自由去大展拳脚，听起来这是一个不错的主意，对吧？然而，根据许多创始人的反馈，实际情况往往并非如此。这种做法的潜台词是：招募那些只会表面工作的人，并任由他们将公司带向失败。&lt;/p&gt;&#xA;&lt;p&gt;One theme I noticed both in Brian&amp;rsquo;s talk and when talking to founders afterward was the idea of being gaslit. Founders feel like they&amp;rsquo;re being gaslit from both sides — by the people telling them they have to run their companies like managers, and by the people working for them when they do. Usually when everyone around you disagrees with you, your default assumption should be that you&amp;rsquo;re mistaken. But this is one of the rare exceptions. VCs who haven&amp;rsquo;t been founders themselves don&amp;rsquo;t know how founders should run companies, and C-level execs, as a class, include some of the most skillful liars in the world. [1]&lt;/p&gt;&#xA;&lt;p&gt;在 Brian 的演讲和与创始人的后续对话中，我注意到了一个共同的信息，那就是创始人感到自己被两边的人操纵 —— 一边是那些告诉他们必须以管理人模式运营公司的人，另一边是当他们尝试这样做时，为他们工作的员工。通常，当你周围的人都与你持相反意见时，你通常会默认认为自己可能错了。但在这种情况下，情况并非如此。没有创业经验的风险投资家实际上并不清楚创始人应该如何管理公司，而且作为一群顶着 CxO 头衔的高管，他们已经在另一个阶层了，并且他们中有些人是世界上最擅长说谎的人。[1]&lt;/p&gt;&#xA;&lt;p&gt;Whatever founder mode consists of, it&amp;rsquo;s pretty clear that it&amp;rsquo;s going to break the principle that the CEO should engage with the company only via his or her direct reports. &amp;ldquo;Skip-level&amp;rdquo; meetings will become the norm instead of a practice so unusual that there&amp;rsquo;s a name for it. And once you abandon that constraint there are a huge number of permutations to choose from.&lt;/p&gt;&#xA;&lt;p&gt;创始人模式无论包含哪些要素，它显然将违背传统的 CEO 仅通过直接下属与公司互动的原则。相反，「跨级」会议将变得司空见惯，而不是一种罕见到需要特别强调的事情。一旦放弃了这些约束，你将有众多可以选择的管理方式。&lt;/p&gt;&#xA;&lt;p&gt;For example, Steve Jobs used to run an annual retreat for what he considered the 100 most important people at Apple, and these were not the 100 people highest on the org chart. Can you imagine the force of will it would take to do this at the average company? And yet imagine how useful such a thing could be. It could make a big company feel like a startup. Steve presumably wouldn&amp;rsquo;t have kept having these retreats if they didn&amp;rsquo;t work. But I&amp;rsquo;ve never heard of another company doing this. So is it a good idea, or a bad one? We still don&amp;rsquo;t know. That&amp;rsquo;s how little we know about founder mode. [2]&lt;/p&gt;&#xA;&lt;p&gt;比如，Steve Jobs 曾为他认为对苹果公司最重要的 100 人举办年度静思会，而这 100 人并不是在公司组织结构中级别最高的。你能想象在一般公司中做这样的事情需要多大的决心和意志吗？但想象一下，这样的活动可能带来多大的好处。它能让一家大公司保持初创公司的氛围。如果这些静思会效果不佳，Steve Jobs 就不可能会持续举办它们。然而，我从未听说过其他公司采取类似的做法。这是一个好主意还是坏主意？我们目前还无法确定。这也正是我们对创始人模式所知甚少的一个例证。[2]&lt;/p&gt;&#xA;&lt;p&gt;Obviously founders can&amp;rsquo;t keep running a 2000 person company the way they ran it when it had 20. There&amp;rsquo;s going to have to be some amount of delegation. Where the borders of autonomy end up, and how sharp they are, will probably vary from company to company. They&amp;rsquo;ll even vary from time to time within the same company, as managers earn trust. So founder mode will be more complicated than manager mode. But it will also work better. We already know that from the examples of individual founders groping their way toward it.&lt;/p&gt;&#xA;&lt;p&gt;显然，随着公司规模的扩大，创始人不可能像管理一个 20 人的小团队那样去管理一个 2000 人的公司。一定程度的权力下放是必要的。但下放的边界，以及这些边界的明确程度，可能会因公司而异。甚至在同一公司内部，这些边界也会因管理人获得信任而变化。所以，创始人模式将比管理人模式更为复杂。但它也许会更为有效。我们已经从一些创始人的个人探索中看到了这一点。&lt;/p&gt;&#xA;&lt;p&gt;Indeed, another prediction I&amp;rsquo;ll make about founder mode is that once we figure out what it is, we&amp;rsquo;ll find that a number of individual founders were already most of the way there — except that in doing what they did they were regarded by many as eccentric or worse. [3]&lt;/p&gt;&#xA;&lt;p&gt;事实上，我对创始人模式的另一个预测是，一旦我们理解了它是什么，我们可能就会发现许多创始人其实已经在很大程度上实现了这一模式 —— 尽管他们在这个过程中被许多人视为离经叛道。[3]&lt;/p&gt;&#xA;&lt;p&gt;Curiously enough it&amp;rsquo;s an encouraging thought that we still know so little about founder mode. Look at what founders have achieved already, and yet they&amp;rsquo;ve achieved this against a headwind of bad advice. Imagine what they&amp;rsquo;ll do once we can tell them how to run their companies like Steve Jobs instead of John Sculley.&lt;/p&gt;&#xA;&lt;p&gt;我们对创始人模式的了解仍然如此有限，这确实令人好奇且鼓舞人心。看看那些创始人们至今已经取得的成就，他们可是在众多不佳建议的逆流中实现这些的啊！想象一下，如果未来我们能够指导他们如何像 Steve Jobs 而不是像 John Sculley 那样去管理公司，他们会怎么做。&lt;/p&gt;&#xA;&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;&#xA;&lt;p&gt;[1] The more diplomatic way of phrasing this statement would be to say that experienced C-level execs are often very skilled at managing up. And I don&amp;rsquo;t think anyone with knowledge of this world would dispute that.&lt;/p&gt;&#xA;&lt;p&gt;[1] 用更委婉的方式来表达这个观点，可以说，资深的 CxO 高管往往在向上管理方面拥有高超的技巧。对于这一点，任何熟悉职场的人应该都不会否认。&lt;/p&gt;&#xA;&lt;p&gt;[2] If the practice of having such retreats became so widespread that even mature companies dominated by politics started to do it, we could quantify the senescence of companies by the average depth on the org chart of those invited.&lt;/p&gt;&#xA;&lt;p&gt;[2] 如果举办此类静思会的做法变得非常普及，以至于那些充满政治色彩的成熟公司也开始采纳，我们或许可以通过参与这些活动的员工在组织结构中的平均层级来衡量公司的僵化程度。&lt;/p&gt;&#xA;&lt;p&gt;[3] I also have another less optimistic prediction: as soon as the concept of founder mode becomes established, people will start misusing it. Founders who are unable to delegate even things they should will use founder mode as the excuse. Or managers who aren&amp;rsquo;t founders will decide they should try to act like founders. That may even work, to some extent, but the results will be messy when it doesn&amp;rsquo;t; the modular approach does at least limit the damage a bad CEO can do.&lt;/p&gt;&#xA;&lt;p&gt;[3] 我还有一个不那么乐观的预测：一旦创始人模式的概念被广泛接受，人们可能会开始滥用这一概念。一些本应做好指派任务却未能做到的创始人可能会以创始人模式为由来为自己辩护。或者，并非创始人的管理人可能会开始模仿创始人的行为。这种做法在某种程度上可能有效，但如果不奏效，结果可能会很混乱；至少模块化的方法能够减轻一个不称职的 CEO 可能造成的损害。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>译&gt; 重构 UI</title>
      <link>http://localhost:1313/p/refactoring-ui/</link>
      <pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/refactoring-ui/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文由 AI 翻译，人工修正。&lt;/p&gt;&#xA;&lt;p&gt;原文链接：&lt;a href=&#34;https://www.refactoringui.com/&#34;&gt;https://www.refactoringui.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;starting-from-scratch--从零开始&#34;&gt;Starting from Scratch / 从零开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;start-with-a-feature-not-a-layout--始于功能而非布局&#34;&gt;Start with a feature, not a layout / 始于功能，而非布局&lt;/h3&gt;&#xA;&lt;p&gt;When you start the design for a new app idea, what do you design first? If it&amp;rsquo;s the navigation bar at the top of the page, you&amp;rsquo;re making a mistake.&lt;/p&gt;&#xA;&lt;p&gt;在开始设计一个新应用时，如果你首先着手于页面顶部的导航栏，这其实是一个误区。&lt;/p&gt;&#xA;&lt;p&gt;The easiest way to find yourself frustrated and stuck when working on a new design is to start by trying to “design the app.” When most people think about “designing the app”, they’re thinking about the shell.&lt;/p&gt;&#xA;&lt;p&gt;在着手新设计项目时，一个常见的陷阱是直接尝试去构建应用的整体外观。实际上，许多人在谈论「设计应用」时，他们实际上在考虑的是应用的框架或外壳。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;Should it have a top nav, or a sidebar?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Should the navigation items be on the left, or on the right?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Should the page content be in a container, or should it be full-width?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Where should the logo go?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;是否应该设置顶部导航栏或侧边栏？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;导航项应该置于左侧还是右侧？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;页面内容是否应该限制在容器内，或者应该采用全宽布局？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Logo 应放置于何处？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The thing is, an “app” is actually a collection of features. Before you’ve designed a few features, you don’t even have the information you need to make a decision about how the navigation should work. No wonder it’s frustrating!&lt;/p&gt;&#xA;&lt;p&gt;实际上，一个「应用」是由多个功能组成的。在设计了一些功能之前，我们并没有足够的信息来决定导航的最佳方式。这正是让人感到挫败的原因。&lt;/p&gt;&#xA;&lt;p&gt;Instead of starting with the shell, start with a piece of actual functionality.&lt;/p&gt;&#xA;&lt;p&gt;与其从应用的框架和外壳着手，不如先从具体的功能点开始设计。&lt;/p&gt;&#xA;&lt;p&gt;For example, say you’re building a flight booking service. You could start with a feature like “searching for a flight”.&lt;/p&gt;&#xA;&lt;p&gt;以构建航班预订服务为例，你可以首先着手开发「搜索航班」的功能。&lt;/p&gt;&#xA;&lt;p&gt;Your interface will need:&lt;/p&gt;&#xA;&lt;p&gt;你的用户界面应当包含以下元素：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A field for the departure city&lt;/li&gt;&#xA;&lt;li&gt;A field for the destination city&lt;/li&gt;&#xA;&lt;li&gt;A field for the departure date&lt;/li&gt;&#xA;&lt;li&gt;A field for the return date&lt;/li&gt;&#xA;&lt;li&gt;A button to perform the search&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;出发城市的输入框&lt;/li&gt;&#xA;&lt;li&gt;目的地城市的输入框&lt;/li&gt;&#xA;&lt;li&gt;出发日期的输入框&lt;/li&gt;&#xA;&lt;li&gt;返回日期的输入框&lt;/li&gt;&#xA;&lt;li&gt;搜索按钮&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Start with that.&lt;/p&gt;&#xA;&lt;p&gt;就从这里着手。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Hell, you might not even need that other stuff anyways — it worked for Google.&lt;/p&gt;&#xA;&lt;p&gt;事实上，你或许根本无需那些额外的功能 —— 正如 Google 所证明的那样，它已经足够有效了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;details-comes-later--细节可以稍后再考虑&#34;&gt;Details comes later / 细节可以稍后再考虑。&lt;/h3&gt;&#xA;&lt;p&gt;In the earliest stages of designing a new feature, it’s important that you don’t get hung up making low-level decisions about things like typefaces, shadows, icons, etc.&lt;/p&gt;&#xA;&lt;p&gt;在设计新功能之初，重要的是不要过早深入到字体选择、阴影效果、图标设计等细节层面的决策中。&lt;/p&gt;&#xA;&lt;p&gt;That stuff will all matter eventually, but it doesn’t matter right now.&lt;/p&gt;&#xA;&lt;p&gt;这些细节最终会显得重要，但目前并不是关注的重点。&lt;/p&gt;&#xA;&lt;p&gt;If you have trouble ignoring the details when working in a high fidelity environment like the browser or your favorite design tool, one trick Jason Fried of Basecamp likes to use is to design on paper using a thick Sharpie.&lt;/p&gt;&#xA;&lt;p&gt;如果你在高保真环境，比如浏览器或你偏爱的设计软件中工作时，难以忽视细节，Basecamp 的 Jason Fried 推荐的一个方法是使用粗记号笔在纸上进行设计。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Obsessing over little details just isn’t possible with a Sharpie, so it can be a great way to quickly explore a bunch of different layout ideas.&lt;/p&gt;&#xA;&lt;p&gt;由于使用记号笔难以专注于小细节，这成为了一种快速探索多种布局概念的有效方法。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Hold the color / 暂不考虑颜色&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Even when you’re ready to refine an idea in higher fidelity, resist the temptation to introduce color right away.&lt;/p&gt;&#xA;&lt;p&gt;即便你已经准备好在更高保真度下对想法进行细化，也要避免立即引入颜色。&lt;/p&gt;&#xA;&lt;p&gt;By designing in grayscale, you’re forced to use spacing, contrast, and size to do all of the heavy lifting.&lt;/p&gt;&#xA;&lt;p&gt;采用灰度色彩进行设计，你将不得不依赖于空间、对比度和尺寸来承担所有关键的视觉任务。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It’s a little more challenging, but you’ll end up with a clearer interface with a strong hierarchy that’s easy to enhance with color later.&lt;/p&gt;&#xA;&lt;p&gt;这种方法虽然更具挑战性，但最终能够创造出一个结构清晰、层级分明的界面，这在稍后用颜色进行美化时会变得更加容易。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Dont&amp;rsquo;t over-invest / 不要过度投资&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The whole point of designing in low-fidelity is to be able to move fast, so you can start building the real thing as soon as possible.&lt;/p&gt;&#xA;&lt;p&gt;采用低保真度设计的核心在于能够迅速推进，以便尽早开始构建实际的产品。&lt;/p&gt;&#xA;&lt;p&gt;Sketches and wireframes are disposable — users can’t do anything with static mockups. Use them to explore your ideas, and leave them behind when you’ve made a decision.&lt;/p&gt;&#xA;&lt;p&gt;草图和线框图是临时的，用户无法与静态原型互动。但你可以利用它们来探索你的概念，并在决策确定后将它们搁置一旁。&lt;/p&gt;&#xA;&lt;h3 id=&#34;dontt-design-too-much--不要过度设计&#34;&gt;Dont&amp;rsquo;t design too much / 不要过度设计&lt;/h3&gt;&#xA;&lt;p&gt;You don’t need to design every single feature in an app before you move on to implementation; in fact, it’s better if you don’t.&lt;/p&gt;&#xA;&lt;p&gt;在进入实现阶段之前，没有必要设计出应用中的每一个功能；实际上，不这么做反而更有利。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Figuring out how every feature in a product should interact and how every edge case should look is really hard, especially in the abstract.&lt;/p&gt;&#xA;&lt;p&gt;确定产品中每个功能之间的交互方式以及每个特殊情况的呈现形式是一项极具挑战性的任务，尤其是在缺乏具体情境的抽象阶段。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;How should this screen look if the user has 2000 contacts?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Where should the error message go in this form?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;How should this calendar look when there are two events scheduled at the same time?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;用户联系人达到 2000 个时，这个界面应如何设计？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;在表单中，错误提示应该放置在什么位置？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;当有两个事件被安排在同一时间时，日历界面中应如何展示？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You’re setting yourself up for frustration by trying to figure this stuff out using only a design tool and your imagination.&lt;/p&gt;&#xA;&lt;p&gt;如果只依靠设计工具和你自己的想象来解决这些问题，你很可能会陷入挫败。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Work in cycles / 持续迭代&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Instead of designing everything up front, work in short cycles. Start by designing a simple version of the next feature you want to build.&lt;/p&gt;&#xA;&lt;p&gt;与其一开始就设计所有内容，不如持续迭代。首先，从设计你接下来想要开发的功能的简化版开始。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Once you’re happy with the basic design, &lt;em&gt;make it real&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;当你对基础设计感到满意时，&lt;em&gt;就将其实现出来&lt;/em&gt;。&lt;/p&gt;&#xA;&lt;p&gt;You’ll probably run into some unexpected complexity along the way, but that’s the point — it’s a lot easier to fix design problems in an interface you can actually use than it is to imagine every edge case in advance.&lt;/p&gt;&#xA;&lt;p&gt;在实现过程中，你可能会遇到一些未预见的复杂情况，但这正是关键所在 —— 与提前设想所有可能的特殊情况相比，在实际可用的界面中解决设计问题要简单得多。&lt;/p&gt;&#xA;&lt;p&gt;Iterate on the working design until there are no more problems left to solve, then jump back into design mode and start working on the next feature.&lt;/p&gt;&#xA;&lt;p&gt;对现行设计进行迭代改进，直至所有问题都得到解决。之后，再切换回设计模式，着手下一个功能。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Don’t get overwhelmed working in the abstract. Build the real thing as early as possible so your imagination doesn’t have to do all the heavy lifting.&lt;/p&gt;&#xA;&lt;p&gt;避免在抽象概念的工作中感到压力过大。尽可能早地构建实际产品，让你的想象力不再承担所有重任。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Be a pessimist / 做个悲观主义者&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Don’t imply functionality in your designs that you aren’t ready to build.&lt;/p&gt;&#xA;&lt;p&gt;避免在设计中展示那些你尚未准备好实现的功能。&lt;/p&gt;&#xA;&lt;p&gt;For example, say you’re working on a comment system for a project management tool. You know that one day, you’d like users to be able to attach files to their comments, so you include an attachments section in your design.&lt;/p&gt;&#xA;&lt;p&gt;以项目管理工具中的评论系统为例，你设想未来用户可以在评论中附上文件，因此你在设计中加入了附件区域。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You get deep into implementation only to discover that supporting attachments is going to be a lot more work than you anticipated. There’s no way you have time to finish it right now, so the whole commenting system sits on the backburner while you take care of other priorities.&lt;/p&gt;&#xA;&lt;p&gt;当你深入实现阶段，才意识到添加附件支持的工作量远超预期。你目前肯定没有足够的时间来完成这项工作，导致整个评论系统不得不暂时搁置，转而处理其他更紧急的任务。&lt;/p&gt;&#xA;&lt;p&gt;The thing is, a comment system with no attachments would still have been better than no comment system at all, but because you planned to include it from day one you’ve got nothing you can ship.&lt;/p&gt;&#xA;&lt;p&gt;实际上，即使是一个不能附加文件的评论系统，也比没有评论系统要好。但由于你最初就计划要加入这个功能，结果导致你现在无法发布任何可用的版本。&lt;/p&gt;&#xA;&lt;p&gt;When you’re designing a new feature, &lt;strong&gt;expect it to be hard to build.&lt;/strong&gt; Designing the smallest useful version you can ship reduces that risk considerably.&lt;/p&gt;&#xA;&lt;p&gt;在设计新功能时，&lt;strong&gt;应预料到构建过程的困难&lt;/strong&gt;。通过设计一个能够发布且功能最小的版本，你可以显著降低开发过程中的风险。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If part of a feature is a “nice-to-have”, &lt;strong&gt;design it later&lt;/strong&gt;. Build the simple version first and you’ll always have something to fall back on.&lt;/p&gt;&#xA;&lt;p&gt;对于那些属于「锦上添花」的功能部分，&lt;strong&gt;应选择稍后设计&lt;/strong&gt;。首先开发一个基础版本，这样你就永远有一个可靠的退路。&lt;/p&gt;&#xA;&lt;h3 id=&#34;choose-a-personality--确定个性&#34;&gt;Choose a personality / 确定个性&lt;/h3&gt;&#xA;&lt;p&gt;Every design has some sort of personality. A banking site might try to communicate secure and professional, while a trendy new startup might have a design that feels fun and playful.&lt;/p&gt;&#xA;&lt;p&gt;每个设计都蕴含着特定的个性。例如，银行网站通常会传达出一种安全和专业的形象，而一些时尚的新创企业则可能拥有一种让人感觉轻松愉快和有趣的设计风格。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/12.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;On the surface, giving a design a particular personality might sound abstract and handwavy, but a lot of it is determined by a few solid, concrete factors.&lt;/p&gt;&#xA;&lt;p&gt;虽然在表面上，为设计赋予特定的个性似乎是一个抽象且难以捉摸的概念，但其实这种个性很大程度上是由一些明确而具体的要素所决定的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Font choice / 字体&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Typography plays a huge part in determining how a design feels.&lt;/p&gt;&#xA;&lt;p&gt;排版对于塑造设计的氛围和感觉扮演着至关重要的角色。&lt;/p&gt;&#xA;&lt;p&gt;If you want an elegant or classic look, you might want to incorporate a serif typeface in your design:&lt;/p&gt;&#xA;&lt;p&gt;若要营造一种优雅或古典的风格，你可以考虑在设计中使用衬线字体：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/13.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;For a playful look, you could use a rounded sans serif:&lt;/p&gt;&#xA;&lt;p&gt;若要设计出一种活泼的风格，你可以选择使用圆角的无衬线字体：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/14.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re going for a plainer look, or want to rely on other elements to provide the personality, a neutral sans serif works great:&lt;/p&gt;&#xA;&lt;p&gt;若要实现更为朴素的外观，或打算依靠其他设计元素来表现个性，中性风格的无衬线字体将非常适用：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/15.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Color / 颜色&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;There’s a lot of science out there on the psychology of color, but in practice, you really just need to pay attention to how different colors feel to you.&lt;/p&gt;&#xA;&lt;p&gt;尽管有关颜色心理学的学问颇为深奥，实际上，你只需关注不同颜色对你个人情感的影响。&lt;/p&gt;&#xA;&lt;p&gt;Blue is safe and familiar — nobody ever complains about blue:&lt;/p&gt;&#xA;&lt;p&gt;蓝色给人以安全感和亲切感 —— 通常没有人会对使用蓝色的设计提出异议：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/16.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Gold might say “expensive” and “sophisticated”:&lt;/p&gt;&#xA;&lt;p&gt;金色通常给人以「奢华」和「精致」的印象：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/17.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Pink is a bit more fun, and not so serious:&lt;/p&gt;&#xA;&lt;p&gt;粉色给人一种更加轻松愉快的感觉，不那么正式：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/18.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;While trying to choose colors using only psychology isn’t super practical — a lot of it is just about what looks good to you — it can be helpful to think about when you’re trying to understand why you think a color is the right fit.&lt;/p&gt;&#xA;&lt;p&gt;尽管仅根据心理学来挑选颜色并不十分实用 —— 毕竟很多选择还是基于你个人的审美 —— 但在你努力理解为何某种颜色适合你的设计时，这些心理学因素可以提供一些帮助。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Border radius / 边框圆角&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;As small of a detail as it sounds, if and how much you round the corners in your design can have a big impact on the overall feel.&lt;/p&gt;&#xA;&lt;p&gt;尽管听起来似乎微不足道，但设计中圆角的使用及其程度实际上对整体氛围有着显著的影响。&lt;/p&gt;&#xA;&lt;p&gt;A small border radius is pretty neutral, and doesn’t really communicate much of a personality on its own:&lt;/p&gt;&#xA;&lt;p&gt;边框圆角较小时，其表现相当中立，并不单独传达出鲜明的个性特征：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/19.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A large border radius starts to feel more playful:&lt;/p&gt;&#xA;&lt;p&gt;当边框圆角较大时，设计会显得更加生动有趣：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/20.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;while no border radius at all feels a lot more serious or formal:&lt;/p&gt;&#xA;&lt;p&gt;完全没有圆角的边框设计则显得更为严肃和正式：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/21.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Whatever you choose, it’s important to stay consistent. Mixing square corners with rounded corners in the same interface almost always looks worse than sticking with one or the other.&lt;/p&gt;&#xA;&lt;p&gt;无论你做出何种选择，保持设计风格的一致性至关重要。在同一用户界面中同时使用直角和圆角边框，其效果几乎总是不如坚持单一风格的协调。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Language / 语言&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;While not a visual design technique per se, the words you use in an interface have a massive influence on the overall personality.&lt;/p&gt;&#xA;&lt;p&gt;尽管这并非直接的视觉设计手法，但界面中所用的措辞对整体风格和个性有着极大的影响。&lt;/p&gt;&#xA;&lt;p&gt;Using a less personal tone might feel more official or professional:&lt;/p&gt;&#xA;&lt;p&gt;采用不那么个人化的语气可以营造出更加正式或专业的氛围：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/22.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;while using friendlier, more casual language makes a site feel, well, friendlier:&lt;/p&gt;&#xA;&lt;p&gt;使用更亲切、更轻松的语言，则会让网站显得更加亲切：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/23.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Words are everywhere in a user interface, and choosing the right ones is just as (if not more) important than choosing the right color or typeface.&lt;/p&gt;&#xA;&lt;p&gt;在用户界面中，文字无处不在，恰当的措辞选择与颜色或字体的选择同等重要，甚至可能更为关键。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Deciding what you actually want / 确定你真正想要的东西&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;A lot of the time you’ll probably just have a gut feeling for the personality you’re going for. But if you don’t, a great way to simplify the decision is to take a look at other sites used by the people you want to reach.&lt;/p&gt;&#xA;&lt;p&gt;通常，你可能会根据自己的直觉来把握所追求的个性。如果你还没有明确的方向，一个有效的简化决策的方法是观察你想要吸引的用户群体所使用的其他网站。&lt;/p&gt;&#xA;&lt;p&gt;If they are mostly pretty “serious business”, maybe that’s how your site should look too. If they are more playful with a bit of humor, maybe that’s a better direction to take.&lt;/p&gt;&#xA;&lt;p&gt;如果目标用户群体主要使用的是典型的「严肃商务」风格网站，那么你的网站设计可能也应该体现出类似的风格。如果这些用户更倾向于活泼且带有幽默感的网站，那么在设计上融入这些元素可能是一个更佳的选择。&lt;/p&gt;&#xA;&lt;p&gt;Just try not to borrow too much from direct competitors, you don’t want to look like a second-rate version of something else.&lt;/p&gt;&#xA;&lt;p&gt;尽量避免从直接竞争对手那里过度借鉴，以免你的设计看起来像是其他产品的二流版本。&lt;/p&gt;&#xA;&lt;h3 id=&#34;limit-your-choices--缩小选择范围&#34;&gt;Limit your choices / 缩小选择范围&lt;/h3&gt;&#xA;&lt;p&gt;Having millions of colors and thousands of fonts to choose from might sound nice in theory, but in practice it’s usually a paralyzing curse.&lt;/p&gt;&#xA;&lt;p&gt;虽然理论上拥有数百万种颜色和数千种字体可供选择似乎很有吸引力，但实际上这种情况往往会使人陷入选择困难。&lt;/p&gt;&#xA;&lt;p&gt;And it’s not just fonts and colors, either — you can easily waste time agonizing over almost any minor design decision.&lt;/p&gt;&#xA;&lt;p&gt;问题不仅限于字体和颜色 —— 在许多小的设计决策上，人们往往容易耗费时间，陷入过度纠结。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;Should this text be 12px or 13px?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Should this box shadow have a 10% opacity or a 15% opacity?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Should this avatar be 24px or 25px tall?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Should I use a medium font weight for this button or semibold?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Should this headline have a bottom margin of 18px or 20px?&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;文字大小是选择 12px 还是 13px？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;阴影的不透明度是设为 10% 还是 15%？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;头像的高度是 24px 还是 25px？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;按钮的字体粗细是用中等还是半粗体？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;标题的底部边距是设为 18px 还是 20px？&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;When you’re designing without constraints, decision-making is torture because there’s always going to be more than one right choice.&lt;/p&gt;&#xA;&lt;p&gt;在没有限制的设计过程中，做出决策是一项挑战，因为往往存在多种正确的选项。&lt;/p&gt;&#xA;&lt;p&gt;For example, these buttons all have different background colors, but it’s almost impossible to tell the difference between them by just looking at them.&lt;/p&gt;&#xA;&lt;p&gt;以这些按钮为例，尽管它们各自拥有不同的背景色彩，但仅通过视觉却几乎无法辨认出它们之间的差别。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/24.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;How are you supposed to make a confident decision if none of these would really be bad choices?&lt;/p&gt;&#xA;&lt;p&gt;当所有这些选项都不会导致不良结果时，你该如何自信地做出决策呢？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Define systems in advance / 事先建立体系&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Instead of hand-picking values from a limitless pool any time you need to make a decision, start with a smaller set of options.&lt;/p&gt;&#xA;&lt;p&gt;与其在每次决策时从无限的选择中手工挑选，不如一开始就限定在一个较小的选项集中进行选择。&lt;/p&gt;&#xA;&lt;p&gt;Don’t reach for the color picker every time you need to pick a new shade of blue — choose from a set of 8-10 shades picked out ahead of time.&lt;/p&gt;&#xA;&lt;p&gt;在挑选新蓝色调时，无需每次都使用颜色选择器。相反，应该从预先选定的 8 至 10 种颜色中选取。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/25.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Similarly, don’t tweak a font size one pixel at a time until it looks perfect. Define a restrictive type scale in advance and use that to make any future font size decisions.&lt;/p&gt;&#xA;&lt;p&gt;同样，不要通过逐像素微调来追求完美的字体大小。应该提前设定一个具有限制性的字体比例表，并依据此表来决定所有未来的字体大小选择。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/26.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When you build systems like this, you only have to do the hard work of picking the initial values once instead of every time you’re designing a new piece of UI. It’s a bit more work up front, but it’s worth it — it’ll save you a ton of decision fatigue down the road.&lt;/p&gt;&#xA;&lt;p&gt;通过构建此类体系，你只需一次性完成选择初始值的艰巨工作，而不必在每次设计新的用户界面元素时重复这一过程。虽然前期可能需要更多的努力，但这是非常值得的 —— 它将在未来缓解你大量的决策疲劳。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Designing by process of elimination / 利用排除法进行设计&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;When you’re designing using a constrained set of values, decision-making is a lot easier because there are a lot fewer “right” choices.&lt;/p&gt;&#xA;&lt;p&gt;使用一组限定的值进行设计时，做出决策会更加简单，因为可选的「正确」选项数量大幅减少。&lt;/p&gt;&#xA;&lt;p&gt;For example, say you’re trying to choose a size for an icon. You’ve defined a sizing scale in advance where your only small-to-medium sized options are 12px, 16px, 24px, and 32px.&lt;/p&gt;&#xA;&lt;p&gt;以图标大小的选择为例。如果你已经事先设定了一个尺寸比例，那么你在小尺寸到中等尺寸的选项中，仅有的选择可能是 12px、16px、24px 和 32px。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/27.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;To pick the best option, start by taking a guess at which one will look best, maybe 16px. Then try the values on either side (12px and 24px) for comparison.&lt;/p&gt;&#xA;&lt;p&gt;要挑选最佳选项，你可以先猜测哪个尺寸看起来最合适，比如 16px。接着，尝试使用它左右两边的尺寸（即 12px 和 24px）来做出对比。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/28.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Chances are, two of those options will seem like obviously bad choices. If it’s the options on the outside, you’re done — the middle option is the only good choice.&lt;/p&gt;&#xA;&lt;p&gt;通常情况下，这些选项中有两个会明显不是好的选择。如果这两个是边缘选项，那么你的决策就简单了 —— 中间的选项自然成为了最佳选择。&lt;/p&gt;&#xA;&lt;p&gt;If one of the outer options looks best, do another comparison using that option as the “middle” value and make sure there’s not a better choice.&lt;/p&gt;&#xA;&lt;p&gt;如果发现其中一个边缘选项实际上是最佳选择，那么应该以该选项为「中心」再次进行比较，以确保没有遗漏更佳的选择。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/29.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This approach works for anything where you’ve defined a system. When you’re limited to a set of options that all look noticeably different, picking the best one is a piece of cake.&lt;/p&gt;&#xA;&lt;p&gt;当你在一个你已经建立体系的领域内工作时，这种方法非常有效。如果你的选择范围被限定在一组明显有区别的选项之内，那么选出最佳选项就会变得易如反掌。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Systematize everything / 体系化一切&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The more systems you have in place, the faster you’ll be able to work and the less you’ll second guess your own decisions.&lt;/p&gt;&#xA;&lt;p&gt;随着你建立的体系越来越多，你的工作效率将大幅提升，同时也会减少对自己决策的犹豫和怀疑。&lt;/p&gt;&#xA;&lt;p&gt;You’ll want systems for things like:&lt;/p&gt;&#xA;&lt;p&gt;你应该为以下方面建立体系：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Font size&lt;/li&gt;&#xA;&lt;li&gt;Font weight&lt;/li&gt;&#xA;&lt;li&gt;Line height&lt;/li&gt;&#xA;&lt;li&gt;Color&lt;/li&gt;&#xA;&lt;li&gt;Margin&lt;/li&gt;&#xA;&lt;li&gt;Padding&lt;/li&gt;&#xA;&lt;li&gt;Width&lt;/li&gt;&#xA;&lt;li&gt;Height&lt;/li&gt;&#xA;&lt;li&gt;Box shadows&lt;/li&gt;&#xA;&lt;li&gt;Border radius&lt;/li&gt;&#xA;&lt;li&gt;Border width&lt;/li&gt;&#xA;&lt;li&gt;Opacity&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字体大小&lt;/li&gt;&#xA;&lt;li&gt;字体粗细&lt;/li&gt;&#xA;&lt;li&gt;行高&lt;/li&gt;&#xA;&lt;li&gt;颜色&lt;/li&gt;&#xA;&lt;li&gt;外边距&lt;/li&gt;&#xA;&lt;li&gt;内边距&lt;/li&gt;&#xA;&lt;li&gt;宽度&lt;/li&gt;&#xA;&lt;li&gt;高度&lt;/li&gt;&#xA;&lt;li&gt;阴影&lt;/li&gt;&#xA;&lt;li&gt;边框圆角&lt;/li&gt;&#xA;&lt;li&gt;边框宽度&lt;/li&gt;&#xA;&lt;li&gt;不透明度&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;hellip;and anything else you run into where it feels like you’re laboring over a low-level design decision.&lt;/p&gt;&#xA;&lt;p&gt;以及任何其他你在设计过程中遇到的，需要在细节上花费大量精力的低层次决策问题。&lt;/p&gt;&#xA;&lt;p&gt;You don’t have to define all of this stuff ahead of time, just make sure you’re approaching design with a system-focused mindset. Look for opportunities to introduce new systems as you make new decisions, and try to avoid having to make the same minor decision twice.&lt;/p&gt;&#xA;&lt;p&gt;你无需一开始就定义所有这些元素，关键是要以体系化的思维方式来处理设计问题。在制定新决策时，寻找机会建立新的体系，并努力避免重复进行相同的小决策。&lt;/p&gt;&#xA;&lt;p&gt;Designing with systems is going to be a recurring theme throughout this book, and in later chapters we’ll talk about building a lot of these systems in finer detail.&lt;/p&gt;&#xA;&lt;p&gt;体系化设计是本书的一个核心议题，而在后续章节，我们会详细探讨这些体系构建的诸多细节。&lt;/p&gt;&#xA;&lt;h2 id=&#34;hierarchy-is-everything--层次结构是一切&#34;&gt;Hierarchy is Everything / 层次结构是一切&lt;/h2&gt;&#xA;&lt;h3 id=&#34;not-all-elements-are-equal--元素之间并非平等&#34;&gt;Not all elements are equal / 元素之间并非平等&lt;/h3&gt;&#xA;&lt;p&gt;When you think of visual design as “styling things so they look good”, it’s easy to see why it might feel hard to achieve without innate artistic talent. But it turns out that one of the biggest factors in making something “look good” has nothing to do with superficial styling at all.&lt;/p&gt;&#xA;&lt;p&gt;人们常将视觉设计理解为「美化事物」，这使得没有天赋的艺术家觉得难以达成。然而，事实证明，让事物「看起来好看」的一个关键因素实际上与表面的装饰无关。&lt;/p&gt;&#xA;&lt;p&gt;Visual hierarchy refers to how important the elements in an interface appear in relation to one another, and it’s the most effective tool you have for making something feel “designed”.&lt;/p&gt;&#xA;&lt;p&gt;视觉层级是指界面元素根据其重要性相互之间的呈现关系，它是使你的作品具有「设计感」的最有效手段。&lt;/p&gt;&#xA;&lt;p&gt;When everything in an interface is competing for attention, it feels noisy and chaotic, like one big wall of content where it’s not clear what actually matters:&lt;/p&gt;&#xA;&lt;p&gt;如果用户界面中的每个元素都在争夺用户的注意力，那么它将显得喧闹和混乱，仿佛是一整面内容繁杂的墙，让人难以辨识出哪些信息才是真正关键的：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/30.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When you deliberately de-emphasize secondary and tertiary information, and make an effort to highlight the elements that are most important, the result is immediately more pleasing, even though the color scheme, font choice, and layout haven’t changed:&lt;/p&gt;&#xA;&lt;p&gt;通过刻意减少对次要和第三重要信息的强调，并着力突出最关键的元素，即便在配色、字体和布局保持不变的情况下，整体效果也会立刻变得更加赏心悦目：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/31.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;So how do you actually make this happen? In the following chapters, we’ll cover a number of specific strategies you can use to introduce hierarchy into your designs.&lt;/p&gt;&#xA;&lt;p&gt;要实现这一点，具体应该怎么做呢？在随后的章节里，我们会详细讨论多种特定策略，这些策略可以用来在你的设计中建立层级关系。&lt;/p&gt;&#xA;&lt;h3 id=&#34;size-isnt-everything--尺寸不是一切&#34;&gt;Size isn’t everything / 尺寸不是一切&lt;/h3&gt;&#xA;&lt;p&gt;Relying too much on font size to control your hierarchy is a mistake — it often leads to primary content that’s too large, and secondary content that’s too small.&lt;/p&gt;&#xA;&lt;p&gt;过分依赖字体大小来建立视觉层级是一个常见的误区，可能会导致主要内容显得过大，而次要内容则显得过小。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/32.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Instead of leaving all of the heavy lifting to font size alone, try using font weight or color to do the same job.&lt;/p&gt;&#xA;&lt;p&gt;与其完全依赖字体大小来建立视觉层级，不如尝试利用字体的粗细或颜色来达到相同的目的。&lt;/p&gt;&#xA;&lt;p&gt;For example, making a primary element bolder lets you use a more reasonable font size, and often does a better job at communicating its importance anyways:&lt;/p&gt;&#xA;&lt;p&gt;例如，将主要元素的字体加粗，不仅可以让你采用更为适中的字体大小，而且在传达其重要性时往往更为有效：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/33.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Similarly, using a softer color for supporting text instead of a tiny font size makes it clear that the text is secondary while sacrificing less on readability:&lt;/p&gt;&#xA;&lt;p&gt;类似地，使用较柔和的颜色来呈现辅助文本，而不是采用过小的字体大小，这样做在降低文本的主导性的同时，对可读性的影响较小：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/34.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Try and stick to two or three colors:&lt;/p&gt;&#xA;&lt;p&gt;尝试限制你的配色方案在两种或三种颜色之内：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A dark color for primary content (like the headline of an article)&lt;/li&gt;&#xA;&lt;li&gt;A grey for secondary content (like the date an article was published)&lt;/li&gt;&#xA;&lt;li&gt;A lighter grey for tertiary content (maybe the copyright notice in a footer)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对于主要内容，选择一种深色（例如文章标题）&lt;/li&gt;&#xA;&lt;li&gt;对于次要内容，采用灰色（例如文章发布日期）&lt;/li&gt;&#xA;&lt;li&gt;对于第三级内容，使用更浅的灰色（如页脚的版权声明）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Similarly, two font weights are usually enough for UI work:&lt;/p&gt;&#xA;&lt;p&gt;在用户界面设计中，通常使用两种不同的字体粗细就足够区分内容的层级：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A normal font weight (400 or 500 depending on the font) for most text&lt;/li&gt;&#xA;&lt;li&gt;A heavier font weight (600 or 700) for text you want to emphasize&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对于大部分文本内容，选择标准字体粗细（如 400 或 500，具体取决于所使用的字体）&lt;/li&gt;&#xA;&lt;li&gt;对于需要突出显示的文本，采用更粗的字体（如 600 或 700）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/35.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Stay away from font weights under 400 for UI work — they can work for large headings but are too hard to read at smaller sizes. If you’re considering using a lighter weight to de-emphasize some text, use a lighter color or smaller font size instead.&lt;/p&gt;&#xA;&lt;p&gt;在用户界面设计工作中，应避免采用 400 以下的字体粗细，因为虽然它们适合用于大标题，但在较小尺寸时阅读性较差。如果你想通过使用较轻的字体粗细来降低某些文本的视觉重要性，可以考虑改用较浅的颜色或选择较小的字体大小来实现这一目的。&lt;/p&gt;&#xA;&lt;h3 id=&#34;dont-use-grey-text-on-colored-backgrounds--不要在彩色背景上使用灰色文本&#34;&gt;Don’t use grey text on colored backgrounds / 不要在彩色背景上使用灰色文本&lt;/h3&gt;&#xA;&lt;p&gt;Making text a lighter grey is a great way to de-emphasize it on white backgrounds, but it doesn’t look so great on colored backgrounds.&lt;/p&gt;&#xA;&lt;p&gt;在白色背景上，使用浅灰色文本是一种有效的降低其视觉重要性的策略，然而，这种方法在彩色背景上可能效果不佳。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/36.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;That’s because the effect we’re actually seeing with grey on white is reduced contrast.&lt;/p&gt;&#xA;&lt;p&gt;实际上，灰色文本在白色背景上产生的效果是降低了对比度，这有会减少文本的视觉强调。&lt;/p&gt;&#xA;&lt;p&gt;Making the text closer to the background color is what actually helps create hierarchy, not making it light grey.&lt;/p&gt;&#xA;&lt;p&gt;但是通过使文本颜色更接近背景色更有助于帮助建立视觉层级，而不是简单地将其变为浅灰色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/37.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You might think that the easiest way to achieve this is to use white text and reduce the opacity:&lt;/p&gt;&#xA;&lt;p&gt;你可能认为，通过使用白色文字并调低其不透明度是最直接方式：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/38.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;While this does reduce the contrast, it often results in text that looks dull, washed out, and sometimes even disabled.&lt;/p&gt;&#xA;&lt;p&gt;降低不透明度确实能够减少文字的视觉对比，但这种方法往往会使文字显得单调、没有生气，甚至给人一种不可点击或不可用的错觉。&lt;/p&gt;&#xA;&lt;p&gt;Even worse, using this approach on top of an image or pattern means the background will show through the text:&lt;/p&gt;&#xA;&lt;p&gt;更糟糕的是，将此方法应用于图像或图案之上，将导致背景透过文字显现，影响文字的可读性：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/39.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A better approach is to hand-pick a new color, based on the background color.&lt;/p&gt;&#xA;&lt;p&gt;更优的方法是依据背景色彩，手动选择一种合适的新颜色。&lt;/p&gt;&#xA;&lt;p&gt;Choose a color with the same hue, and adjust the saturation and lightness until it looks right to you:&lt;/p&gt;&#xA;&lt;p&gt;选择一个与背景色相匹配的色相，并调整其饱和度和亮度，直至达到你满意的视觉效果：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/40.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Hand-picking a color this way makes it easy to reduce the contrast without the text looking faded.&lt;/p&gt;&#xA;&lt;p&gt;采用这种手工挑选颜色的方法，可以在不使文字显得褪色的情况下，轻松实现对比度的降低。&lt;/p&gt;&#xA;&lt;h3 id=&#34;emphasize-by-de-emphasizing--通过弱化来强调&#34;&gt;Emphasize by de-emphasizing / 通过弱化来强调&lt;/h3&gt;&#xA;&lt;p&gt;Sometimes you’ll run into a situation where the main element of an interface isn’t standing out enough, but there’s nothing you can add to it to give it the emphasis it needs.&lt;/p&gt;&#xA;&lt;p&gt;在某些情况下，你可能会发现用户界面中的核心元素并不如预期那样醒目，同时你也无法通过添加新元素来增加其视觉强调。&lt;/p&gt;&#xA;&lt;p&gt;For example, despite trying to make this active nav item “pop” by giving it a different color, it still doesn’t really stand out compared to the inactive items:&lt;/p&gt;&#xA;&lt;p&gt;以活动的导航项为例，即使我们尝试通过改变颜色让它更加「醒目」，但如果与非活动项相比较，它看起来仍然不够突出：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/41.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When you run into situations like this, instead of trying to further emphasize the element you want to draw attention to, figure out how you can de-emphasize the elements that are competing with it.&lt;/p&gt;&#xA;&lt;p&gt;面对这种情况，与其继续尝试强化你希望引人注目的元素，不如考虑如何弱化那些与其争夺注意力的元素。&lt;/p&gt;&#xA;&lt;p&gt;In this example, you could do that by giving the inactive items a softer color so they sit more in the background:&lt;/p&gt;&#xA;&lt;p&gt;以这个例子来说，可以通过为非活动项选择一种更柔和的颜色，使它们在视觉上更靠后，从而让它们更加融入背景：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/42.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You can apply this thinking to bigger pieces of an interface as well. For example, if a sidebar feels like it’s competing with your main content area, don’t give it a background color — let the content sit directly on the page background instead:&lt;/p&gt;&#xA;&lt;p&gt;这种思路同样适用于界面更大的元素。比如，如果侧边栏看起来与主要内容区域争夺视觉焦点，就不要为其设置背景色 —— 而是让其内容直接显示在页面的背景之上：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/43.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;labels-are-a-last-resort--标签是最后的手段&#34;&gt;Labels are a last resort / 标签是最后的手段&lt;/h3&gt;&#xA;&lt;p&gt;Put down the accessibility pitchfork — this isn’t about forms.&lt;/p&gt;&#xA;&lt;p&gt;请不要急于用可访问性的标准来指责 —— 这里讨论的不是表单问题。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;译者注：通常认为标签可以提高可访问性，而这一小节提出将标签作为最后的手段（即减少使用标签），则可能降低可访问性。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;When presenting data to the user (especially data from the database), it’s easy to fall into the trap of displaying it using a naive &lt;em&gt;label: value&lt;/em&gt; format.&lt;/p&gt;&#xA;&lt;p&gt;在向用户展示数据（特别是来自数据库的数据）时，很容易陷入使用简单的「标签：值」格式来展示数据的陷阱。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/44.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The problem with this approach is that it makes it difficult to present the data with any sort of hierarchy; every piece of data is given equal emphasis.&lt;/p&gt;&#xA;&lt;p&gt;这种方式存在一个问题，即它难以表现出数据之间的层级关系；结果是，所有数据项都获得了相同的视觉重要性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;You might not need a label at all / 你或许根本不需要标签&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;In a lot of situations, you can tell what a piece of data is just by looking at the format.&lt;/p&gt;&#xA;&lt;p&gt;在许多情况下，通过查看数据的呈现格式，我们就能辨识出数据的内容。&lt;/p&gt;&#xA;&lt;p&gt;For example, &lt;code&gt;janedoe@example.com&lt;/code&gt; is an email address, &lt;code&gt;(555) 765-4321&lt;/code&gt; is a phone number and &lt;code&gt;$19.99&lt;/code&gt; is a price.&lt;/p&gt;&#xA;&lt;p&gt;例如，&lt;code&gt;janedoe@example.com&lt;/code&gt; 是一个电子邮件地址，&lt;code&gt;(555) 765-4321&lt;/code&gt; 是一个电话号码，而 &lt;code&gt;$19.99&lt;/code&gt; 是一个价格。&lt;/p&gt;&#xA;&lt;p&gt;When the format isn’t enough, the context often is. When you see the phrase “Customer Support” listed below someone’s name in an employee directory, you don’t need a label to make the connection that that is the department the person works in.&lt;/p&gt;&#xA;&lt;p&gt;如果数据的格式本身不足以让信息清晰，那么上下文环境往往能够帮助我们理解。比如，在员工名册中，当看到某人名字下面写着「客户支持」时，我们不必依赖额外的标签就能明白这个人隶属于客户服务部门。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/45.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When you’re able to present data without labels, it’s much easier to emphasize important or identifying information, making the interface easier to use while at the same time making it feel more “designed”.&lt;/p&gt;&#xA;&lt;p&gt;能够不依赖标签来呈现数据时，可以更容易地突出重要或识别性信息，这不仅让界面变得更加易用，同时也赋予了它更强的「设计感」。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Combine labels and values / 合并标签和值&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Even when a piece of data isn’t completely clear without a label, you can often avoid adding a label by adding clarifying text to the value.&lt;/p&gt;&#xA;&lt;p&gt;即便某些数据项在缺少标签的情况下不够明确，我们也可以通过在数值旁边附加说明性文字来省去标签的使用。&lt;/p&gt;&#xA;&lt;p&gt;For example, if you need to display inventory in an e-commerce interface, instead of “In stock: 12”, try something like “12 left in stock”.&lt;/p&gt;&#xA;&lt;p&gt;以电商界面中展示库存情况为例，与其写成「库存：12」，不如采用「库存剩余 12 件」这样的表达方式。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/46.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re building a real estate app, something like “Bedrooms: 3” could simply become “3 bedrooms”.&lt;/p&gt;&#xA;&lt;p&gt;在开发房地产应用时，可以将「卧室：3」直接改写为「3 间卧室」，使信息表达更为简洁。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/47.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When you’re able to combine labels and values into a single unit, it’s much easier to give each piece of data meaningful styling without sacrificing on clarity.&lt;/p&gt;&#xA;&lt;p&gt;能够将标签和数值整合为单一单元时，就可以在不损失信息清晰度的前提下，为每个数据项添加有意义的样式设计。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Labels are secondary / 标签是辅助&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Sometimes you really do need a label; for example when you’re displaying multiple pieces of similar data and they need to be easily scannable, like on a dashboard.&lt;/p&gt;&#xA;&lt;p&gt;在某些情况下，使用标签是必要的；比如，在仪表板等环境中展示多个相似数据项时，为了便于快速浏览，标签的使用就变得尤为重要。&lt;/p&gt;&#xA;&lt;p&gt;In these situations, add the label, but treat it as supporting content. The data itself is what matters, the label is just there for clarity.&lt;/p&gt;&#xA;&lt;p&gt;遇到这类情况时，应当添加标签，但应将其作为补充信息对待。真正关键的是数据本身，而标签的作用主要是为了提高信息的可读性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/48.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;De-emphasize the label by making it smaller, reducing the contrast, using a lighter font weight, or some combination of all three.&lt;/p&gt;&#xA;&lt;p&gt;要降低标签的视觉重要性，可以采取以下措施：缩小标签的字号、降低其与背景的对比度、选择较细的字体，或者结合这三种方法来实现。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;When to emphasize a label / 何时强调标签&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re designing an interface where you know the user will be looking for the label, it might make sense to emphasize the label instead of the data.&lt;/p&gt;&#xA;&lt;p&gt;在设计界面时，如果你知道用户将会寻找特定的标签，那么增强标签的视觉显著性而不仅仅是数据，可能是更合理的选择。&lt;/p&gt;&#xA;&lt;p&gt;This is often the case on information-dense pages, like the technical specifications of a product.&lt;/p&gt;&#xA;&lt;p&gt;在信息量很大的页面上，如产品技术规格的详细说明，这种情况尤为常见。&lt;/p&gt;&#xA;&lt;p&gt;If a user is trying to find out the dimensions of a smartphone, they’re probably scanning the page for words like “depth”, not “7.6mm”.&lt;/p&gt;&#xA;&lt;p&gt;当用户试图查找智能手机的尺寸时，他们通常会在页面上搜索「厚度」这样的关键词，而不是直接寻找「7.6 毫米」这样的具体数值。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/49.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Don’t de-emphasize the data too much in these scenarios; it’s still important information. Simply using a darker color for the label and a slightly lighter color for the value is often enough.&lt;/p&gt;&#xA;&lt;p&gt;在这种情况下，不应过度降低数据的视觉重要性；它仍然是关键信息。通常，只需为标签选择较深的颜色，而为数值选择略浅的颜色，这样的对比就已足够。&lt;/p&gt;&#xA;&lt;h3 id=&#34;separate-visual-hierarchy-from-document-hierarchy--将视觉层级与文档层级分开&#34;&gt;Separate visual hierarchy from document hierarchy / 将视觉层级与文档层级分开&lt;/h3&gt;&#xA;&lt;p&gt;It’s important to use semantic markup when building for the web, which means you’ll often be using heading tags like &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;h2&lt;/code&gt;, or &lt;code&gt;h3&lt;/code&gt; if you decide to add a title to part of an interface.&lt;/p&gt;&#xA;&lt;p&gt;在进行网页构建时，采用语义化标签非常关键，这表示在为用户界面的某个部分添加标题时，你可能会使用 &lt;code&gt;h1&lt;/code&gt;、&lt;code&gt;h2&lt;/code&gt; 或 &lt;code&gt;h3&lt;/code&gt; 等标题标签。&lt;/p&gt;&#xA;&lt;p&gt;By default, web browsers assign progressively smaller font sizes to heading elements, so an &lt;code&gt;h1&lt;/code&gt; is pretty large, and an &lt;code&gt;h6&lt;/code&gt; is pretty small. This can be helpful for document-style content like articles or documentation, but it can encourage some bad decisions in application UIs.&lt;/p&gt;&#xA;&lt;p&gt;浏览器默认为 HTML 标题标签设置按等级递减的字体大小，其中 &lt;code&gt;h1&lt;/code&gt; 标签的字体最大，而 &lt;code&gt;h6&lt;/code&gt; 标签的字体最小。这种设计对于文章或文档等阅读型内容很有益处，但在应用程序的用户界面设计中，可能诱发一些不良的设计选择。&lt;/p&gt;&#xA;&lt;p&gt;Using an &lt;code&gt;h1&lt;/code&gt; tag to add a title like &lt;em&gt;Manage Account&lt;/em&gt; to a page makes perfect sense semantically, but because we’re trained to believe that &lt;code&gt;h1&lt;/code&gt; elements should be big, it’s easy to fall into the trap of making those titles bigger than they really need to be.&lt;/p&gt;&#xA;&lt;p&gt;在语义上，使用 &lt;code&gt;h1&lt;/code&gt; 标签为页面添加例如「管理账户」这样的标题是恰当的，但由于我们通常认为 &lt;code&gt;h1&lt;/code&gt; 元素应该是较大的字体，这可能会导致我们不自觉地将这些标题做得过大，超出了实际所需的尺寸。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/50.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A lot of the time, section titles act more like &lt;em&gt;labels&lt;/em&gt; than headings — they are supportive content, they shouldn’t be stealing all the attention.&lt;/p&gt;&#xA;&lt;p&gt;在许多情况下，部分标题的功能更像是「标签」而非传统意义上的「标题」—— 它们作为补充信息，不应该吸引过多的注意力。&lt;/p&gt;&#xA;&lt;p&gt;Usually the content in that section should be the focus, not the title. That means that a lot of the time, titles should actually be pretty small:&lt;/p&gt;&#xA;&lt;p&gt;这时我们应该关注的是该部分的内容，而不是标题。因此，许多时候，标题的大小应当偏小：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/51.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Taken to the extreme, you might even include section titles in your markup for accessibility reasons but completely hide them visually because the content speaks for itself.&lt;/p&gt;&#xA;&lt;p&gt;在某些情况下，为了可访问性考虑，你可能会在代码中保留小节标题，但如果内容已经清晰表达了必要的信息，你可以选择在视觉上将其完全隐藏。&lt;/p&gt;&#xA;&lt;p&gt;Don’t let the element you’re using influence how you choose to style it — pick elements for semantic purposes and style them however you need to create the best visual hierarchy.&lt;/p&gt;&#xA;&lt;p&gt;不要因为所使用的元素（HTML 标签）本身而决定其样式 —— 应基于语义目的来选取元素（HTML 标签），并根据创建最佳视觉层级的需要来决定其样式。&lt;/p&gt;&#xA;&lt;h3 id=&#34;balance-weight-and-contrast--平衡重量与对比度&#34;&gt;Balance weight and contrast / 平衡重量与对比度&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;译者注：重量即字体重量，也叫字重或字体粗细。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;The reason bold text feels emphasized compared to regular text is that bold text covers more surface area — in the same amount of space, more pixels are used for text than for the background.&lt;/p&gt;&#xA;&lt;p&gt;粗体文本之所以给人一种强调的感觉，是因为它在视觉上覆盖了更大的区域。在相同的空间范围内，粗体字比背景的像素占比更大，从而使得文字显得更加突出。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/52.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;So why is this interesting? Well it turns out that the relationship between surface area and hierarchy has implications on other elements in a UI as well.&lt;/p&gt;&#xA;&lt;p&gt;这背后的意义何在？实际上，表面积与视觉层级之间的关系也对用户界面中的其他元素产生了影响。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Using contrast to compensate for weight / 使用对比度来平衡重量&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;One of the places understanding this relationship becomes important is when working with icons.&lt;/p&gt;&#xA;&lt;p&gt;这种关系的理解在某些情况下尤为重要，特别是当涉及到图标设计时。&lt;/p&gt;&#xA;&lt;p&gt;Just like bold text, icons (especially solid ones) are generally pretty “heavy” and cover a lot of surface area. As a result, when you put an icon next to some text, the icon tends to feel emphasized.&lt;/p&gt;&#xA;&lt;p&gt;与粗体文字相似，图标（特别是实心图标）在视觉上往往显得较为「重」，占据较大的视觉空间。所以当你将图标与文本并置时，图标往往会显得更加突出。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/53.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Unlike text, there’s no way to change the “weight” of an icon, so to create balance it needs to be de-emphasized in some other way.&lt;/p&gt;&#xA;&lt;p&gt;不同于文本可以通过字体粗细来调整视觉重量，图标的视觉重量是固定的，因此要实现视觉平衡，就需要通过其他方法来降低其视觉显著性。&lt;/p&gt;&#xA;&lt;p&gt;A simple and effective way to do this is to lower the contrast of the icon by giving it a softer color.&lt;/p&gt;&#xA;&lt;p&gt;降低图标对比度的一个简单有效方法是为其选择一种更柔和的颜色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/54.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This works anywhere you need to balance elements that have different weights. Reducing the contrast works like a counterbalance, making heavier elements feel lighter even though the weight hasn’t changed.&lt;/p&gt;&#xA;&lt;p&gt;这种方法适用于任何需要平衡视觉重量不同的元素的场合。通过降低对比度，可以起到平衡作用，让视觉重量较大的元素感觉上更轻盈，尽管它们的视觉重量实际上并没有变化。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Using weight to compensate for contrast / 使用重量来平衡对比度&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Just like how reducing contrast helps to de-emphasize heavy elements, increasing weight is a great way to add a bit of emphasis to low contrast elements.&lt;/p&gt;&#xA;&lt;p&gt;正如降低对比度可以减轻较重元素的视觉强调，相应地，增加元素的视觉重量是为那些对比度较低的元素增添强调效果的有效方式。&lt;/p&gt;&#xA;&lt;p&gt;This is useful when things like thin 1px borders are too subtle using a soft color, but darkening the color makes the design feel harsh and noisy.&lt;/p&gt;&#xA;&lt;p&gt;这种方法在处理如 1px 细边框等元素时非常有用，因为使用柔和的颜色可能使它们显得过于细腻，而加深颜色又可能使设计显得过于强硬和杂乱。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/55.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Making the border a bit heavier by increasing the width helps to emphasize it without losing the softer look:&lt;/p&gt;&#xA;&lt;p&gt;通过增加边框的宽度，我们可以在不牺牲柔和外观的同时，有效强调这些边框：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/56.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;semantics-are-secondary--语义是次要的&#34;&gt;Semantics are secondary / 语义是次要的&lt;/h3&gt;&#xA;&lt;p&gt;When there are multiple actions a user can take on a page, it’s easy to fall into the trap of designing those actions based purely on semantics.&lt;/p&gt;&#xA;&lt;p&gt;在用户面对页面上的多个可执行操作时，我们可能会错误地仅根据操作的语义含义来设计它们。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/57.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Semantics are an important part of button design, but that doesn’t mean you can forget about hierarchy.&lt;/p&gt;&#xA;&lt;p&gt;虽然语义在按钮设计中扮演重要角色，但这并不是说我们可以忽视视觉层级的重要性。&lt;/p&gt;&#xA;&lt;p&gt;Every action on a page sits somewhere in a pyramid of importance. Most pages only have one true primary action, a couple of less important secondary actions, and a few seldom used tertiary actions.&lt;/p&gt;&#xA;&lt;p&gt;每个页面上的操作都可以视为位于一个重要性金字塔的不同层级。大多数情况下，页面上会有一个主要的操作，几个次要的操作，以及一些不常用的第三级操作。&lt;/p&gt;&#xA;&lt;p&gt;When designing these actions, it’s important to communicate their place in the hierarchy.&lt;/p&gt;&#xA;&lt;p&gt;设计这些操作时，重要的是要清晰地表达它们在层级结构中的位置。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Primary actions should be obvious.&lt;/strong&gt; Solid, high contrast background colors work great here.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Secondary actions should be clear but not prominent.&lt;/strong&gt; Outline styles or lower contrast background colors are great options.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tertiary actions should be discoverable but unobtrusive.&lt;/strong&gt; Styling these actions like links is usually the best approach.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;主要操作应该显而易见。&lt;/strong&gt; 实心的、高对比度的背景颜色在这里效果很好。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;次要操作应该清晰但不突出。&lt;/strong&gt; 轮廓样式或较低对比度的背景颜色是很好的选择。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;第三级操作应该是可发现的，但不显眼。&lt;/strong&gt; 通常将这些操作设计成链接样式是最佳方法。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/58.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When you take a hierarchy-first approach to designing the actions on page, the result is a much less busy UI that communicates more clearly:&lt;/p&gt;&#xA;&lt;p&gt;采取以层级为先的设计方法来规划页面操作，将带来一个更为简洁明了的用户界面：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/59.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Destructive actions / 破坏性行为&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Being destructive or high severity doesn’t automatically mean a button should be big, red, and bold.&lt;/p&gt;&#xA;&lt;p&gt;操作具有破坏性或高风险级别，并不意味着按钮设计必须是大尺寸、红色和加粗。&lt;/p&gt;&#xA;&lt;p&gt;If a destructive action isn’t the primary action on the page, it might be better to give it a secondary or tertiary button treatment.&lt;/p&gt;&#xA;&lt;p&gt;如果这类操作在页面上并非主要功能，可能更适宜采用次要或第三级按钮的设计。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/60.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Combine this with a confirmation step where the destructive action actually is the primary action, and apply the big, red, bold styling there.&lt;/p&gt;&#xA;&lt;p&gt;而在执行破坏性操作的确认步骤中 —— 此时该操作成为主要功能 —— 则可以采用更为醒目的大号、红色和加粗的设计风格。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/61.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;layout-and-spacing--布局和间距&#34;&gt;Layout and Spacing / 布局和间距&lt;/h2&gt;&#xA;&lt;h3 id=&#34;start-with-too-much-white-space--在开始保留更多留白&#34;&gt;Start with too much white space / 在开始保留更多留白&lt;/h3&gt;&#xA;&lt;p&gt;One of the easiest ways to clean up a design is to simply give every element a little more room to breathe.&lt;/p&gt;&#xA;&lt;p&gt;一种简化设计的有效方法是为界面上的每个元素提供更多的空间，让它们有更充足的「呼吸」空间。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/62.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Sounds simple enough, right? So how come we don’t usually do it?&lt;/p&gt;&#xA;&lt;p&gt;这听起来很简单，但我们通常为什么不这么做呢？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;White space should be removed, not added / 通过移除留白而非添加来设计留白&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;When designing for the web, white space is almost always added to a design — if something looks little too cramped, you add a bit of margin or padding until things look better.&lt;/p&gt;&#xA;&lt;p&gt;在网页设计中，留白几乎总是通过添加实现 —— 如果某个部分看起来过于拥挤，我们就会添加一些外边距或内边距，直到视觉效果改善。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/63.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The problem with this approach is that elements are only given the minimum amount of breathing room necessary to not look &lt;em&gt;actively bad&lt;/em&gt;. To make something actually look &lt;em&gt;great&lt;/em&gt;, you usually need more white space.&lt;/p&gt;&#xA;&lt;p&gt;但这种方法的问题在于，我们通常只为元素提供刚好足够的空间，以避免它们看起来&lt;em&gt;非常糟糕&lt;/em&gt;。要真正让设计看起来&lt;em&gt;出色&lt;/em&gt;，我们往往需要更多的留白。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/64.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A better approach is to start by giving something way too much space, then remove it until you’re happy with the result.&lt;/p&gt;&#xA;&lt;p&gt;一种更好的方法是，开始时给元素过多的空间，然后逐步减少，直至达到满意的效果。&lt;/p&gt;&#xA;&lt;p&gt;You might think you’d end up with too much white space this way, but in practice, what might seem like “a little too much” when focused on an individual element ends up being closer to “just enough” in the context of a complete UI.&lt;/p&gt;&#xA;&lt;p&gt;你可能会担心这样做最终会留下过多的留白，但实际上，当你专注于单个元素时，那些看似「过多】的空间，在整体用户界面中往往正是「恰到好处」。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Dense UIs have their place / 密集 UI 有其用武之地&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;While interfaces with a lot of breathing room almost always feel cleaner and simpler, there are certainly situations where it makes sense for a design to be much more compact.&lt;/p&gt;&#xA;&lt;p&gt;尽管那些留有大量空间的界面通常看起来更加简洁和清晰，但确实存在一些情况，设计更为紧凑是合理的。&lt;/p&gt;&#xA;&lt;p&gt;For example, if you’re designing some sort of dashboard where a lot of information needs to be visible at once, packing that information together so it all fits on one screen might be worth making the design feel more busy.&lt;/p&gt;&#xA;&lt;p&gt;比如，如果你在设计一个需要一次性展示大量信息的仪表板，将所有信息紧凑地布局以适应单一屏幕，可能会使设计显得较为密集，但这是值得的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/65.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The important thing is to make this a deliberate decision instead of just being the default. It’s a lot more obvious when you need to remove white space than it is when you need to add it.&lt;/p&gt;&#xA;&lt;p&gt;关键在于我们应该有意识地做出关于留白的决定，而不是仅仅依赖于默认选择。通常，识别何时需要减少留白以提高界面紧凑性比识别何时需要增加留白以提升清晰度要容易得多。&lt;/p&gt;&#xA;&lt;h3 id=&#34;establish-a-spacing-and-sizing-system--建立间距和尺寸体系&#34;&gt;Establish a spacing and sizing system / 建立间距和尺寸体系&lt;/h3&gt;&#xA;&lt;p&gt;You shouldn’t be nitpicking between 120px and 125px when trying to decide on the perfect size for an element in your UI.&lt;/p&gt;&#xA;&lt;p&gt;在确定用户界面元素的尺寸时，无需在 120px 和 125px 之间过分纠结。&lt;/p&gt;&#xA;&lt;p&gt;Painfully trialing arbitrary values one pixel at a time will drastically slow you down at best, and create ugly, inconsistent designs at worst.&lt;/p&gt;&#xA;&lt;p&gt;逐像素地尝试任意值，不仅会极度消耗时间，还可能导致设计难看且缺乏一致性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/66.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Instead, limit yourself to a constrained set of values, defined in advance.&lt;/p&gt;&#xA;&lt;p&gt;因此，应该采用一种更好的方法：事先定义一组有限的值，然后在这些值中进行选择。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;A linear scale won’t work / 线性比例并不适用&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Creating a spacing and sizing system isn’t quite as simple as something like &lt;em&gt;“make sure everything is a multiple of 4px”&lt;/em&gt; — a naive approach like that doesn’t make it any easier to choose between 120px and 125px.&lt;/p&gt;&#xA;&lt;p&gt;建立一个间距和尺寸体系并不像简单遵循「&lt;em&gt;所有尺寸为 4px 的倍数&lt;/em&gt;」这样直接 —— 这种初级方法并不能有效帮助你在 120px 和 125px 之间做出决策。&lt;/p&gt;&#xA;&lt;p&gt;For a system to be truly useful, it needs to take into consideration the relative difference between adjacent values.&lt;/p&gt;&#xA;&lt;p&gt;一个真正有效的体系需要考虑到相邻值之间的相对差异。&lt;/p&gt;&#xA;&lt;p&gt;At the small end of the scale (&lt;em&gt;like the size of an icon, or the padding inside a button&lt;/em&gt;), a couple of pixels can make a big difference. Jumping from 12px to 16px is an increase of 33%!&lt;/p&gt;&#xA;&lt;p&gt;在较小的尺寸端（&lt;em&gt;例如图标大小或按钮内部的填充&lt;/em&gt;），几像素的差异可能非常明显。例如，从 12px 增加到 16px 意味着增加了 33%！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/67.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;But at the large end (the width of a card, or the vertical spacing in a landing page hero), a couple of pixels is basically imperceivable. Even increasing the width of a card from 500px to 520px is only a difference of 4%, which is &lt;em&gt;eight times&lt;/em&gt; less significant than the jump from 12px to 16px.&lt;/p&gt;&#xA;&lt;p&gt;然而，在较大的尺寸端（&lt;em&gt;如卡片宽度或着陆页主要区域的垂直间距&lt;/em&gt;），几像素的差异几乎无法察觉。即使将卡片宽度从 500px 增加到 520px，变化率仅为 4%，这比 12px 到 16px 的增加显著性小了八倍。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/68.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you want your system to make sizing decisions easy, make sure no two values in your scale are ever closer than about 25%.&lt;/p&gt;&#xA;&lt;p&gt;如果你想让你的体系简化尺寸决策过程，请确保尺度上任意两个值的差异不低于 25%。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Defining the system / 构建体系&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Just like you don’t want to toil over arbitrary values when sizing an element or fine-tuning the space between elements, you don’t want to build your spacing and sizing scale from arbitrary values either.&lt;/p&gt;&#xA;&lt;p&gt;在确定元素大小或微调元素间距时，我们应避免纠结于任意值；同样，在构建间距和尺寸体系时，我们也不应纠结于从任意值开始。&lt;/p&gt;&#xA;&lt;p&gt;A simple approach is to start with a sensible base value, then build a scale using factors and multiples of that value.&lt;/p&gt;&#xA;&lt;p&gt;一种简单的方法是从一个合理的基础值着手，然后基于这个值的因数和倍数来建立一个比例体系。&lt;/p&gt;&#xA;&lt;p&gt;16px is a great number to start with because it divides nicely, and also happens to be the default font size in every major web browser.&lt;/p&gt;&#xA;&lt;p&gt;16px 就是一个很好的起始数字，因为它可以很好地被整除，同时也恰好是所有主流网络浏览器的默认字体大小。&lt;/p&gt;&#xA;&lt;p&gt;The values at the small end of the scale should start pretty packed together, and get progressively more spaced apart as you get further up the scale.&lt;/p&gt;&#xA;&lt;p&gt;在尺度的较小端，值应该相对集中；随着尺度的增加，这些值之间的间隔应逐渐变得更宽。&lt;/p&gt;&#xA;&lt;p&gt;Here’s an example of a fairly practical scale built using this approach:&lt;/p&gt;&#xA;&lt;p&gt;以下是一个根据这种方法建立的实用尺度的示例：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/69.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Using the system / 应用体系&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Once you’ve defined your spacing and sizing system, you’ll find that you’re able to design a hell of a lot faster, especially if you design in the browser (&lt;em&gt;sticking to a system is easier when you’re typing in numbers than when you’re dragging with the mouse.&lt;/em&gt;)&lt;/p&gt;&#xA;&lt;p&gt;一旦你建立了间距和尺寸规范，你会发现设计速度会大大提升，尤其是在浏览器中进行设计时（&lt;em&gt;使用体系规范时，输入数值比用鼠标拖拽更为便捷。&lt;/em&gt;）。&lt;/p&gt;&#xA;&lt;p&gt;Need to add some space under an element? Grab a value from your scale and try it out. Not quite enough? The next value is probably perfect.&lt;/p&gt;&#xA;&lt;p&gt;需要在某个元素下增加空间？从你的尺寸体系中选择一个值进行尝试。如果空间不够？试试下一个更大的值，它很可能就是合适的。&lt;/p&gt;&#xA;&lt;p&gt;While the workflow improvements are probably the biggest benefit, you’ll also start to notice a subtle consistency in your designs that wasn’t there before, and things will look just a little bit cleaner.&lt;/p&gt;&#xA;&lt;p&gt;除了工作流程的优化可能是最明显的好处，你还将逐渐发现设计中出现了一种之前未曾有的微妙一致性，使得整体外观更加整洁。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/70.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A spacing and sizing system will help you create better designs, with less effort, in less time. Design advice doesn’t get much more valuable than that.&lt;/p&gt;&#xA;&lt;p&gt;一个间距和尺寸体系将帮助你以更低的劳动强度、在更短的时间内创造出更优秀的设计。在设计建议中，这可以说是极具价值的。&lt;/p&gt;&#xA;&lt;h3 id=&#34;you-dont-have-to-fill-the-whole-screen--不必填满整个屏幕&#34;&gt;You don’t have to fill the whole screen / 不必填满整个屏幕&lt;/h3&gt;&#xA;&lt;p&gt;Remember when 960px was the de facto layout width for desktop-size designs? These days you’d be hard-pressed to find a phone with a resolution that low.&lt;/p&gt;&#xA;&lt;p&gt;你是否记得 960px 宽度曾是桌面设计的标准？如今，找到分辨率如此低的手机几乎是不可能的。&lt;/p&gt;&#xA;&lt;p&gt;So it’s no surprise that when most of us open our design tool of choice on our high resolution displays, we give ourselves at least 1200-1400px of space to fill. But just because you have the space, doesn’t mean you need to use it.&lt;/p&gt;&#xA;&lt;p&gt;因此，当我们在高分辨率屏幕上打开常用的设计软件时，很自然地会给自己分配 1200~1400px 的广阔空间。但拥有这样的空间，并不意味着你必须完全使用它。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/71.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you only need 600px, use 600px. Spreading things out or making things unnecessarily wide just makes an interface harder to interpret, while a little extra space around the edges never hurt anyone.&lt;/p&gt;&#xA;&lt;p&gt;如果你的设计内容只需要 600px 的宽度，那就只使用 600px。无谓地拉宽界面或使元素过于分散，会使用户更难理解界面，而在边缘保留适当的空间则总是有益的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/72.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This is just as applicable to individual sections of an interface, too. You don’t need to make everything full-width just because something else (like your navigation) is full-width.&lt;/p&gt;&#xA;&lt;p&gt;这一原则同样适用于界面的各个部分。不要仅仅因为导航栏等其他元素采用了全宽设计，就强迫所有内容都变成全宽。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/73.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Give each element just the space it needs — don’t make something worse just to make it match something else.&lt;/p&gt;&#xA;&lt;p&gt;为每个元素分配其真正需要的空间 —— 不要为了追求一致性而牺牲了设计的合理性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Shrink the canvas / 缩小设计区域&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re having a hard time designing a small interface on a large canvas, shrink the canvas! A lot of the time it’s easier to design something small when the constraints are real.&lt;/p&gt;&#xA;&lt;p&gt;在大尺寸的画布上设计小型界面时，如果感到困难，尝试缩小画布尺寸！真实限制条件下的设计往往更易于操作。&lt;/p&gt;&#xA;&lt;p&gt;If you’re building a responsive web application, try starting with a ~400px canvas and designing the mobile layout first.&lt;/p&gt;&#xA;&lt;p&gt;设计响应式网页应用时，你可以先从一个大约 400px 宽的画布着手，优先设计移动端的布局。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/74.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Once you have a mobile design you’re happy with, bring it over to a larger size screen and adjust anything that felt like a compromise on smaller screens. Odds are you won’t have to change as much as you think.&lt;/p&gt;&#xA;&lt;p&gt;完成了令你满意的移动端设计后，再将其适配到更大的屏幕，并调整那些在小尺寸屏幕上不得不妥协的部分。你可能会发现，需要改动的地方比你预期的要少。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/75.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Thinking in columns / 采用分列设计思路&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re designing something that works best at a narrower width but feels unbalanced in the context of an otherwise wide UI, see if you can split it into columns instead of just making it wider.&lt;/p&gt;&#xA;&lt;p&gt;如果你的设计在较窄的宽度下表现更佳，但在宽阔的用户界面中显得不协调，考虑将其分割成多列，而不是简单地加宽。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/76.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you wanted to make better use of the available space without making the form harder to use, you could break the supporting text out into a separate column:&lt;/p&gt;&#xA;&lt;p&gt;例如，为了在不增加表单复杂性的同时更好地利用空间，你可以将辅助文本独立成列：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/77.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This makes the design feel more balanced and consistent without compromising on the optimal width for the form itself.&lt;/p&gt;&#xA;&lt;p&gt;这种方法可以在保持表单最佳宽度的同时，让整体设计看起来更加均衡和统一。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Don’t force it / 不要硬来&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Just like you shouldn’t worry about filling the whole screen, you shouldn’t try to cram everything into a small area unnecessarily either.&lt;/p&gt;&#xA;&lt;p&gt;你不应该强求填满整个屏幕，同样地，也不应该无端地将内容硬塞进一个狭小的空间。&lt;/p&gt;&#xA;&lt;p&gt;If you need a lot of space, go for it! Just don’t feel obligated to fill it if you don’t have to.&lt;/p&gt;&#xA;&lt;p&gt;如果你的设计确实需要更多的空间，那就大胆地扩展它！但如果你不需要那么多空间，就不要感觉必须去填满它。&lt;/p&gt;&#xA;&lt;h3 id=&#34;grids-are-overrated--网格被高估了&#34;&gt;Grids are overrated / 网格被高估了&lt;/h3&gt;&#xA;&lt;p&gt;Using a system like a 12-column grid is a great way to simplify layout decisions, and can bring a satisfying sense of order to your designs.&lt;/p&gt;&#xA;&lt;p&gt;采用 12 列网格等系统是简化布局决策的有效方式，能够为你的设计带来一种有序的美感。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/78.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;But even though grids can be useful, outsourcing all of your layout decisions to a grid can do more harm than good.&lt;/p&gt;&#xA;&lt;p&gt;然而，尽管网格系统有其用处，如果完全依赖网格系统来做出所有布局决策，可能会带来更多的负面影响而非好处。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Not all elements should be fluid / 并非所有元素都应该具有流动性&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Fundamentally, a grid system is just about giving elements fluid, percentage-based widths, where you’re choosing from a constrained set of percentages.&lt;/p&gt;&#xA;&lt;p&gt;网格系统本质上是为元素提供基于百分比的流动宽度，你需从一组预设的百分比中选择。&lt;/p&gt;&#xA;&lt;p&gt;For example, in a 12-column grid each column is 8.33% wide. As long as an element’s width is some multiple of 8.33% (&lt;em&gt;including any gutters&lt;/em&gt;), that element is “on the grid”.&lt;/p&gt;&#xA;&lt;p&gt;例如，在 12 列网格系统中，每列宽 8.33%。只要元素的宽度是 8.33% 的整数倍（&lt;em&gt;包括间隙&lt;/em&gt;），该元素就符合「网格」规范。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/79.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The problem with treating grid systems like a religion is that there are a lot of situations where it makes much more sense for an element to have a fixed width instead of a relative width.&lt;/p&gt;&#xA;&lt;p&gt;然而，盲目遵循网格系统可能导致问题，因为在许多情况下，为元素设置固定宽度而非相对宽度会更为合理。&lt;/p&gt;&#xA;&lt;p&gt;For example, consider a traditional sidebar layout. Using a 12-column grid system, you might give the sidebar a width of three columns (25%) and the main content area a width of nine columns (75%).&lt;/p&gt;&#xA;&lt;p&gt;以传统的侧边栏布局为例。在 12 列网格系统中，你可能会给侧边栏分配三列宽（25%），而主要内容区域则占九列（75%）。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/80.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This might seem fine at first, but think about what happens when you resize the screen.&lt;/p&gt;&#xA;&lt;p&gt;这在一开始可能看起来合适，但当你调整屏幕尺寸时，问题就出现了。&lt;/p&gt;&#xA;&lt;p&gt;If you make the screen wider the sidebar gets wider too, taking up space that could’ve been put to better use by the main content area.&lt;/p&gt;&#xA;&lt;p&gt;如果屏幕变宽，侧边栏也随之变宽，占据了本可以由主要内容更有效使用的屏幕空间。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/81.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Similarly, if you make the screen narrower, the sidebar can shrink below its minimum reasonable width, causing awkward text wrapping or truncation.&lt;/p&gt;&#xA;&lt;p&gt;反之，如果屏幕变窄，侧边栏可能会缩小至不适宜的最小宽度，导致文本出现不雅的换行或截断。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/82.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;In this situation, it makes much more sense to give the sidebar a fixed width that’s optimized for its contents. The main content area can then flex to fill the remaining space, using its own internal grid to lay out its children.&lt;/p&gt;&#xA;&lt;p&gt;在这种情况下，为侧边栏设置一个根据其内容优化的固定宽度会更加合理。这样，主要内容区域就可以灵活地填充剩余空间，并利用自己的内部网格系统来安排子元素布局。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/83.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This applies within components, too — don’t use percentages to size something unless you actually want it to scale.&lt;/p&gt;&#xA;&lt;p&gt;这一原则同样适用于组件内部设计 —— 除非你希望某个元素能够随着容器大小的变化而缩放，否则不要使用百分比来定义其大小。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/84.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Don’t shrink an element until you need to / 非必要不要缩小元素&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Say you’re designing a login card. Using the full screen width would look ugly, so you give it a width of 6 columns (50%) with a 3-column offset on each side.&lt;/p&gt;&#xA;&lt;p&gt;以设计登录界面卡片为例。若使用全屏宽度会显得不美观，因此你可能给它设定为 6 列（占50%）的宽度，并在两侧各留出 3 列的空间作为边距。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/85.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;On medium-sized screens you realize the card is a little narrow even though you have the space to make it bigger, so at that screen size you switch it to a width of 8 columns, with two empty columns on each side.&lt;/p&gt;&#xA;&lt;p&gt;然而，在中等尺寸的屏幕上，即便有空间使卡片更宽，卡片还是显得有些窄，于是你决定在该屏幕尺寸下将其宽度调整为 8 列，每侧留出两列空白。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/86.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The silly thing about this approach is that because column widths are fluid, there’s a range in screen sizes where the login card is wider on medium screens than it is on large screens:&lt;/p&gt;&#xA;&lt;p&gt;这种方法的问题在于，由于列宽是可变的，在一系列屏幕尺寸范围内，中等屏幕上的登录卡片宽度可能会超过大屏幕：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/87.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you know that say 500px is the optimal size for the card, why should it ever get smaller than that if you have the space for it?&lt;/p&gt;&#xA;&lt;p&gt;如果你知道卡片的最佳宽度是 500px，那么只要空间允许，它就不应该小于这个宽度。&lt;/p&gt;&#xA;&lt;p&gt;Instead of sizing elements like this based on a grid, give them a max-width so they don’t get too large, and only force them to shrink when the screen gets smaller than that max-width.&lt;/p&gt;&#xA;&lt;p&gt;与其根据网格系统来调整元素大小，不如为它们设定一个最大宽度，以防止它们变得过大，并只在屏幕尺寸小于这个最大宽度时才让它们缩小。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/88.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Don’t be a slave to the grid — give your components the space they need and don’t make any compromises until it’s actually necessary.&lt;/p&gt;&#xA;&lt;p&gt;不要完全受制于网格系统 —— 为你的组件提供所需的空间，只有在真正必要的情况下才做出调整。&lt;/p&gt;&#xA;&lt;h3 id=&#34;relative-sizing-doesnt-scale--相对尺寸不要等比缩放&#34;&gt;Relative sizing doesn’t scale / 相对尺寸不要等比缩放&lt;/h3&gt;&#xA;&lt;p&gt;It’s tempting to believe that every part of an interface should be sized relative to one another, and that if element A needs to shrink by 25% on smaller screens, that element B should shrink by 25%, too.&lt;/p&gt;&#xA;&lt;p&gt;有一种普遍的想法，认为界面的每个部分尺寸都应该相对于其他部分进行调整。例如，如果元素 A 在较小屏幕上缩小了 25%，人们可能会认为元素 B 也应该按相同比例缩小。&lt;/p&gt;&#xA;&lt;p&gt;For example, say you’re designing an article at a large screen size. If your body copy is 18px and your headlines are 45px, it’s tempting to encode that relationship by defining your headline size as 2.5em; 2.5 times the current font size.&lt;/p&gt;&#xA;&lt;p&gt;以大屏幕设计文章为例，如果你的正文字体是 18px，标题是 45px，你可能会想要将标题大小设置为 2.5 倍于正文字体，即 2.5em。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/89.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;There’s nothing inherently wrong with using relative units like em, but don’t be fooled into believing that relationships defined this way can remain static — 2.5em might be the perfect headline size on desktop but there’s no guarantee that it’ll be the right size on smaller screens.&lt;/p&gt;&#xA;&lt;p&gt;使用 em 这样的相对单位没有问题，但不要错误地认为这样定义的比例就可以固定不变的。在桌面端，2.5em 可能是完美的标题大小，但在小屏幕上可能就太大了。&lt;/p&gt;&#xA;&lt;p&gt;Say you reduce the size of your body copy to 14px on small screens to keep the line length in check. Keeping your headlines at 2.5em means a rendered font size of 35px — way too big for a small screen!&lt;/p&gt;&#xA;&lt;p&gt;假设你在小屏幕上将正文字体缩小到 14px 以保持合适的行长度。如果标题仍保持 2.5em，那么实际渲染的字体大小将是 35px，这对于小屏幕来说可能过于庞大。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/90.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A better headline size for small screens might be somewhere between 20px and 24px:&lt;/p&gt;&#xA;&lt;p&gt;在小屏幕上，标题的更合适大小可能是 20~24px。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/91.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;That’s only 1.5-1.7x the size of the 14px body copy — a totally different relationship than what made sense on desktop screens. That means there isn’t any real relationship at all, and that there’s no real benefit in trying to define the headline size relative to the body copy size.&lt;/p&gt;&#xA;&lt;p&gt;这仅是正文字体大小的 1.5~1.7 倍，与大屏幕上的比例完全不同。这意味着实际上并没有固定的比例关系，而且尝试根据正文字体大小来确定标题大小并没有实际的好处。&lt;/p&gt;&#xA;&lt;p&gt;As a general rule, elements that are large on large screens need to shrink faster than elements that are already fairly small — the difference between small elements and large elements should be less extreme at small screen sizes.&lt;/p&gt;&#xA;&lt;p&gt;通常，大屏幕上较大的元素在小屏幕上需要更显著地缩小，而较小的元素则不需要那么大的缩小幅度 —— 在小屏幕上，大元素和小元素之间的差异应该更小。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Relationships within elements / 元素内部的关系&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The idea that things should scale independently doesn’t just apply to sizing elements at different screen sizes; it applies to the properties of a single component, too.&lt;/p&gt;&#xA;&lt;p&gt;独立缩放的理念不仅适用于不同屏幕尺寸下元素尺寸的调整，同样适用于单个组件内部属性的设计。&lt;/p&gt;&#xA;&lt;p&gt;Say you’ve designed a button. It’s got a 16px font size, 16px of horizontal padding, and 12px of vertical padding:&lt;/p&gt;&#xA;&lt;p&gt;以按钮设计为例。如果按钮的字体大小设为 16px，水平内边距也是 16px，垂直内边距为 12px：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/92.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Much like the previous example, it’s tempting to think that the padding should be defined in terms of the current font size. That way if you want a larger or smaller button, you only need to change the font size and the padding will update automatically, right?&lt;/p&gt;&#xA;&lt;p&gt;人们可能会认为，为了保持设计的比例一致，填充应该基于当前字体大小来设定。这样一来，如果需要调整按钮的大小，只需更改字体大小，填充就会相应自动调整，是这样吗？&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/93.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This works — the buttons do scale up or down and preserve the same proportions. But is that what we really want?&lt;/p&gt;&#xA;&lt;p&gt;这种方法确实有效，按钮能够保持相同的比例缩放。但这真的是我们所追求的吗？&lt;/p&gt;&#xA;&lt;p&gt;Compare that to these buttons, where the padding gets more generous at larger sizes and disproportionately tighter at smaller sizes:&lt;/p&gt;&#xA;&lt;p&gt;看看这些按钮，它们在较大尺寸时内边距更宽松，在较小尺寸时内边距则更紧凑：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/94.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Here the large button actually feels like a larger button, and the small buttons actually feel like smaller buttons, not like we simply adjusted the zoom.&lt;/p&gt;&#xA;&lt;p&gt;这样的设计让大按钮实际显得更大，小按钮实际显得更小，而不仅仅是简单的缩放效果。&lt;/p&gt;&#xA;&lt;p&gt;Let go of the idea that everything needs to scale proportionately — giving yourself the freedom to fine-tune things independently makes it a hell of a lot easier to design for multiple contexts.&lt;/p&gt;&#xA;&lt;p&gt;放弃所有元素都需要等比例缩放的想法 —— 给自己留有独立微调各个部分的自由，将极大地简化多场景下的设计工作。&lt;/p&gt;&#xA;&lt;h3 id=&#34;avoid-ambiguous-spacing--避免间距不明确&#34;&gt;Avoid ambiguous spacing / 避免间距不明确&lt;/h3&gt;&#xA;&lt;p&gt;When groups of elements are explicitly separated — usually by a border or background color — it’s obvious which elements belong to which group.&lt;/p&gt;&#xA;&lt;p&gt;当元素组通过边框或背景色清晰区分时，很容易识别哪些元素属于同一组。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/95.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;But when there isn’t a visible separator, it’s not always so obvious.&lt;/p&gt;&#xA;&lt;p&gt;但在缺少可见分隔的情况下，元素归属的识别就不那么直观了。&lt;/p&gt;&#xA;&lt;p&gt;Say you’re designing a form with stacked labels and inputs. If the margin below the label is the same as the margin below the input, the elements in the form group won’t feel obviously “connected”.&lt;/p&gt;&#xA;&lt;p&gt;例如，在设计一个具有层叠标签和输入字段的表单时，如果标签和输入字段下方的边距相同，那么这些元素看起来就不那么「相关联」。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/96.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;At best the user has to work harder to interpret the UI, and at worst it means accidentally putting the wrong data in the wrong field.&lt;/p&gt;&#xA;&lt;p&gt;最好的情况这可能导致用户在理解界面时需要更多的努力，最坏的情况是可能会错误地将数据填入错误的字段。&lt;/p&gt;&#xA;&lt;p&gt;The fix is to increase the space between each form group so it’s clear which label belongs to which input:&lt;/p&gt;&#xA;&lt;p&gt;解决这一问题的方法是增加表单组之间的间距，使得每个标签和对应输入字段的关系更加清晰：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/97.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This same problem shows up in article design when there’s not enough space above section headings:&lt;/p&gt;&#xA;&lt;p&gt;在文章设计中，如果节标题上方的空间不足，也会出现相似的问题：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/98.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;and in bulleted lists, when the space between bullets matches the line-height of a single bullet:&lt;/p&gt;&#xA;&lt;p&gt;以及在项目列表中，如果列表项之间的空间与单个列表项的行高一致时：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/99.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It’s not just vertical spacing that you have to worry about either; it’s easy to make this mistake with components that are laid out horizontally, too:&lt;/p&gt;&#xA;&lt;p&gt;问题不仅限于垂直间距；在水平布局的组件中也可能出现类似的错误：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/100.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Whenever you’re relying on spacing to connect a group of elements, always make sure there’s more space around the group than there is within it — interfaces that are hard to understand always look worse.&lt;/p&gt;&#xA;&lt;p&gt;无论你何时依赖间距来连接一组元素，请确保组与组之间的空间大于组内部的元素间距 —— 难以理解的界面在视觉上总是不够美观。&lt;/p&gt;&#xA;&lt;h2 id=&#34;designing-text--文本设计&#34;&gt;Designing Text / 文本设计&lt;/h2&gt;&#xA;&lt;h3 id=&#34;establish-a-type-scale--建立一个字符规范&#34;&gt;Establish a type scale / 建立一个字符规范&lt;/h3&gt;&#xA;&lt;p&gt;Most interfaces use way too many font sizes. Unless a team has a rigid design system in place, it’s not uncommon to find that every pixel value from 10px to 24px has been used in the UI &lt;em&gt;somewhere&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;在大多数用户界面中，往往使用了过多的字体大小。如果团队没有一个严格的设计体系，那么在界面设计中使用从 10px 到 24px 的每一个尺寸值是&lt;em&gt;很常见&lt;/em&gt;的现象。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/101.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Choosing font sizes without a system is a bad idea for two reasons:&lt;/p&gt;&#xA;&lt;p&gt;没有体系地选择字体大小会导致两个问题：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;It leads to annoying inconsistencies in your designs.&lt;/li&gt;&#xA;&lt;li&gt;It slows down your workflow.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;它会造成设计上的不一致性，令人烦恼。&lt;/li&gt;&#xA;&lt;li&gt;它降低了工作效率。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;So how do you define a type system?&lt;/p&gt;&#xA;&lt;p&gt;那么，我们应该如何建立一个字符体系呢？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Choosing a scale / 确定比例尺&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Just like with spacing and sizing, a linear scale won’t work. Smaller jumps between font sizes are useful at the bottom of the scale, but you don’t want to waste time deciding between 46px and 48px for a large headline.&lt;/p&gt;&#xA;&lt;p&gt;与确定间距和尺寸一样，线性尺度并不适宜。在尺度的较小端，字体大小的细微差别很有用，但在大标题的 46px 与 48px 之间做选择时，就不需要那么精细。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Modular scales / 模块化比例尺&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;One approach is to calculate your type scale using a ratio, like 4:5 (a “&lt;em&gt;major third&lt;/em&gt;”), 2:3 (a “&lt;em&gt;perfect fifth&lt;/em&gt;”), or perhaps the “golden ratio”, 1:1.618. This is often called a “modular scale”.&lt;/p&gt;&#xA;&lt;p&gt;一种计算字体尺寸的方法是使用一个比例，例如 4:5（「&lt;em&gt;大三度&lt;/em&gt;」），2:3（「&lt;em&gt;纯五度&lt;/em&gt;」），或者「黄金比例」1:1.618，这常被称为「模块化比例尺」。&lt;/p&gt;&#xA;&lt;p&gt;You start with a sensible base value (&lt;em&gt;16px is common since it’s the default font size for most browsers&lt;/em&gt;), apply your ratio to get the next value, then apply your ratio to that value to get the next value, and so on and so forth:&lt;/p&gt;&#xA;&lt;p&gt;从 16px 这样的常用基础值（&lt;em&gt;16px 很常见，因为它是大多数浏览器的默认字体大小&lt;/em&gt;）开始，应用你的比例得到下一个尺寸，然后继续应用比例得到后续的尺寸，如此循环：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/102.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The mathematical purity of this approach is alluring, but in practice, it’s not perfect for a couple of reasons.&lt;/p&gt;&#xA;&lt;p&gt;这种方法在数学上的纯粹性很吸引人，但在实际应用中并不完美，原因有几个。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;You end up with fractional values. / 你可能得到小数点后的像素值。&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Using a 16px base and 4:5 ratio, your scale will end up with lots of sizes that don’t land right on the pixel, like 31.25px, 39.063px, 48.828px, etc. Browsers all handle subpixel rounding a little bit differently, so it’s best to avoid fractional sizes if you can avoid it.&lt;/p&gt;&#xA;&lt;p&gt;以 16px 为基数，按 4:5 比例计算，会得到许多非整数像素值，如 31.25px、39.063px、48.828px 等。不同的浏览器对这些小数值的渲染方式略有差异，因此最好避免使用小数像素值。&lt;/p&gt;&#xA;&lt;p&gt;If you do want to use this approach, make sure you round the values yourself when defining the scale to avoid off-by-one pixel issues across browsers.&lt;/p&gt;&#xA;&lt;p&gt;果你想采用这种方法，请在确定尺度时自行将数值四舍五入，以减少不同浏览器间的渲染差异。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;You usually need more sizes. / 你可能需要更多的尺寸。&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;This approach can work well if you’re defining a type scale for long form content like an article, but for interface design, the jumps you get using a modular scale are often a bit too limiting.&lt;/p&gt;&#xA;&lt;p&gt;这种方法适用于定义长篇文章的字体比例尺，但在界面设计中，模块化比例尺产生的跳跃可能过于有限。&lt;/p&gt;&#xA;&lt;p&gt;With a (&lt;em&gt;rounded&lt;/em&gt;) 3:4 type scale, you get sizes like 12px, 16px, 21px, and 28px. While this might not seem too limiting on the surface, in practice you’re going to wish you had a size between 12px and 16px, and another between 16px and 21px.&lt;/p&gt;&#xA;&lt;p&gt;例如，使用 3:4 的尺度，你得到的尺寸可能是 12px、16px、21px 和 28px。虽然看起来选择不少，但在实际设计中，你可能会发现需要在 12px 到 16px 之间，以及 16px 到 21px 之间有更多的尺寸选项。&lt;/p&gt;&#xA;&lt;p&gt;You could use a tighter ratio like 8:9, but at this point you’re just trying to pick a scale that happens to match the sizes you already know you want.&lt;/p&gt;&#xA;&lt;p&gt;虽然可以使用更小的比例，如 8:9，来获得更细致的尺寸，但这往往意味着你在尝试挑选一个恰好符合你需求的比例尺。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Hand-crafted scales / 自定义比例尺&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;For interface design, a more practical approach is to simply pick values by hand. You don’t have to worry about subpixel rounding errors this way, and you have total control over which sizes exist instead of outsourcing that job to some mathematical formula.&lt;/p&gt;&#xA;&lt;p&gt;在用户界面设计中，一种更实用的方法是手工挑选值。这种方法让你无需担心像素的舍入误差，并且可以完全控制可用的尺寸，而不是依赖数学公式来决定。&lt;/p&gt;&#xA;&lt;p&gt;Here’s an example of a scale that works well for most projects and aligns nicely with the spacing and sizing scale recommended in “&lt;em&gt;Establishing a spacing and sizing system&lt;/em&gt;”:&lt;/p&gt;&#xA;&lt;p&gt;例如，以下是一个比例尺示例，它适用于大多数项目，并且与「&lt;em&gt;建立间距和尺寸体系&lt;/em&gt;」文章中推荐的间距和尺寸比例尺相协调：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/103.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It’s constrained just enough to speed up your decision making, but isn’t so limited as to make you feel like you’re missing a useful size.&lt;/p&gt;&#xA;&lt;p&gt;这个比例尺的限制恰到好处，既能加快你的决策过程，又不会让你感觉缺少了有用的尺寸。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/104.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Avoid em units / 避免使用 em 单位&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;When you’re building a type scale, don’t use em units to define your sizes.&lt;/p&gt;&#xA;&lt;p&gt;在创建字体尺寸规范时，应避免使用 em 单位来指定字体大小。&lt;/p&gt;&#xA;&lt;p&gt;Because em units are relative to the current font size, the computed font size of nested elements is often not actually a value in your scale.&lt;/p&gt;&#xA;&lt;p&gt;em 单位描述的是相对于当前的字体大小，因此计算出的嵌套元素的字体大小可能并不在你设定的比例尺中。&lt;/p&gt;&#xA;&lt;p&gt;For example, say you’ve defined an em-based type scale like this:&lt;/p&gt;&#xA;&lt;p&gt;例如，如果你设定了一个基于 em 单位的字体尺寸规范：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/105.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you give an element a font size of 1.25em (20px by default), inside of that element 1em is now equal to 20px. That means that if you give one of the nested elements a font size of .875em, the actual computed font size is 17.5px, not a value from your type scale!&lt;/p&gt;&#xA;&lt;p&gt;假设你将某个元素的字体大小设为 1.25em（默认相当于 20px），那么在这个元素内部，1em 就等于 20px。这就意味着，如果你给其中一个嵌套元素设置 0.875em 的字体大小，实际的计算结果将是 17.5px，这个值并不在你的字体尺寸规范里！&lt;/p&gt;&#xA;&lt;p&gt;Stick to px or rem units — it’s the only way to guarantee you’re actually sticking to the system.&lt;/p&gt;&#xA;&lt;p&gt;坚持使用像素（px）或根 em（rem）单位 —— 这是确保你真正遵循所设定体系的唯一方式。&lt;/p&gt;&#xA;&lt;h3 id=&#34;use-good-fonts--使用优质字体&#34;&gt;Use good fonts / 使用优质字体&lt;/h3&gt;&#xA;&lt;p&gt;With thousands of different typefaces out there to choose from, separating the good from the bad can be an intimidating task.&lt;/p&gt;&#xA;&lt;p&gt;面对众多的字体选择，辨别哪些是好的字体可能是一项艰巨的任务。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/106.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Developing an eye for all of the details that make a good typeface can take years. You probably don’t have years, so here are a few tricks you can use to start picking out high quality typefaces right away.&lt;/p&gt;&#xA;&lt;p&gt;要培养出识别优秀字体所有细节的眼光可能需要很多年。你可能没有那么多时间，所以这里有一些技巧，可以帮助你立即开始挑选高质量的字体。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Play it safe / 保守策略&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;For UI design, your safest bet is a fairly neutral sans-serif — think something like Helvetica.&lt;/p&gt;&#xA;&lt;p&gt;在用户界面设计中，选择一种相对中性的无衬线字体是最稳妥的做法 —— 例如 Helvetica 字体。&lt;/p&gt;&#xA;&lt;p&gt;If you really don’t trust your own taste, one great option is to rely on the system font stack:&lt;/p&gt;&#xA;&lt;p&gt;如果你不太自信于自己的品味选择，一个有效的策略是使用系统默认的字体系列：&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;-apple-system, Segoe UI, Roboto, Noto Sans, Ubuntu, Cantarell, Helvetica Neue;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;It might not be the most ambitious choice, but at least your users will already be used to seeing it.&lt;/p&gt;&#xA;&lt;p&gt;虽然这可能不是最引人注目的选择，但至少用户对这些字体已经非常熟悉。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Ignore typefaces with less than five weights / 排除字重少于五种的字体&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;This isn’t &lt;em&gt;always&lt;/em&gt; true, but as a general rule, typefaces that come in a lot of different weights tend to be crafted with more care and attention to detail than typefaces with fewer weights.&lt;/p&gt;&#xA;&lt;p&gt;虽然这并不&lt;em&gt;总是&lt;/em&gt;准确，但通常提供多种字重的字体在制作上更为精心，对细节的关注也更为周到。&lt;/p&gt;&#xA;&lt;p&gt;Many font directories (&lt;em&gt;like Google Fonts&lt;/em&gt;) will let you filter by “number of styles”, which is a combination of the available weights as well as the italic variations of those weights.&lt;/p&gt;&#xA;&lt;p&gt;很多字体展示平台（&lt;em&gt;例如 Google Fonts&lt;/em&gt;）允许你根据「样式数量」来过滤，这包括了各种字重及其相应的斜体样式。&lt;/p&gt;&#xA;&lt;p&gt;A great way to limit the number of options you have to choose from is to crank that up to 10+ (&lt;em&gt;to account for italics&lt;/em&gt;):&lt;/p&gt;&#xA;&lt;p&gt;一个有效减少选择范围的技巧是将过滤条件设置为 10+（&lt;em&gt;包含斜体样式&lt;/em&gt;）：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/107.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;On Google Fonts specifically, that cuts out 85% of the available options, leaving you with less than 50 sans-serifs to choose from.&lt;/p&gt;&#xA;&lt;p&gt;特别是在 Google Fonts 上，这种方法可以排除 85% 的选项，让你只有不到 50 种无衬线字体需要考虑。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Optimize for legibility / 优化可读性&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;When someone designs a font family, they are usually designing it for a specific purpose. Fonts meant for headlines usually have tighter letter- spacing and shorter lowercase letters (a shorter x-height), while fonts meant for smaller sizes have wider letter-spacing and taller lowercase letters.&lt;/p&gt;&#xA;&lt;p&gt;设计字体系列时，设计师通常针对特定用途进行设计。例如，用于标题的字体往往具有更紧密的字母间距和小写字母较短（X 高度较短），而设计用于较小字号的字体则具有更宽的字母间距和小写字母较高。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;译者注：X 高度（x-height）是字体设计中的一个术语，指的是小写字母（不包括字母 &amp;ldquo;y&amp;rdquo;）的平均高度。在字体的度量中，X 高度是一个重要的参考值，因为它对字体的可读性有显著影响。字体的 X 高度越高，小写字母相对于大写字母和数字就显得越大，这通常可以提高文本的可读性，尤其是在较小字号下。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/108.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Keep this in mind and avoid using condensed typefaces with short x-heights for your main UI text.&lt;/p&gt;&#xA;&lt;p&gt;在选择字体时，请考虑这些因素，避免在用户界面的主要文本中使用紧凑且 X 高度较短的字体。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Trust the wisdom of the crowd / 相信群众的智慧&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;If a font is popular, it’s probably a good font. Most font directories will let you sort by popularity, so this can be a great way to limit your choices.&lt;/p&gt;&#xA;&lt;p&gt;受欢迎的字体往往是优秀选择。大多数字体展示平台允许你根据流行度进行排序，这可以帮助你快速筛选出潜在的优质字体。&lt;/p&gt;&#xA;&lt;p&gt;This is especially useful when you’re trying to pick out something other than a neutral UI typeface. Picking a nice serif with some personality for example can be tough.&lt;/p&gt;&#xA;&lt;p&gt;当你需要挑选具有特定风格的字体，而不仅仅是中性的用户界面字体时，这个方法特别有效。比如，选择一个既有个性又美观的衬线字体可能具有挑战性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/109.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Leveraging the collective decision-making power of thousands of other people can make it a lot easier.&lt;/p&gt;&#xA;&lt;p&gt;借助成千上万人的共同选择，可以大大简化你的决策过程。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Steal from people who care / 向优秀的人学习&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Inspect some of your favorite sites and see what typefaces they are using.&lt;/p&gt;&#xA;&lt;p&gt;浏览一些你喜欢的网站，观察它们使用的字体类型。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/110.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;There are a lot of great design teams out there full of people with really strong opinions about typography, and they’ll often choose great fonts that you might have never found using some of the safer approaches outlined above.&lt;/p&gt;&#xA;&lt;p&gt;世界上有许多卓越的设计团队，团队成员对排版有着坚定的看法，他们往往会挑选出一些你可能通过上述更保守的方法从未发现的优秀字体。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Developing your intuition / 培养你的直觉&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Once you start paying closer attention to the typography on well-designed sites, it’s not long before you feel pretty comfortable labeling a typeface as awesome or terrible.&lt;/p&gt;&#xA;&lt;p&gt;当你开始更加细致地观察那些设计优秀的网站的排版时，你很快就会对判断一种字体是否出色或糟糕感到得心应手。&lt;/p&gt;&#xA;&lt;p&gt;You’re gonna be a type snob soon enough, but the advice outlined above will help get you by in the meantime.&lt;/p&gt;&#xA;&lt;p&gt;你很快将成为一个对字体有严格要求的人，但在那之前，上述的建议将为你提供帮助。&lt;/p&gt;&#xA;&lt;h3 id=&#34;keep-your-line-length-in-check--控制行长度&#34;&gt;Keep your line length in check / 控制行长度&lt;/h3&gt;&#xA;&lt;p&gt;When styling paragraphs, it’s easy to make the mistake of fitting the text to your layout instead of trying to create the best reading experience.&lt;/p&gt;&#xA;&lt;p&gt;在设计段落样式时，常见的错误是让文本适应页面布局，而不是优化阅读体验。&lt;/p&gt;&#xA;&lt;p&gt;Usually this means lines that are too long, making text harder to read.&lt;/p&gt;&#xA;&lt;p&gt;这通常导致行过长，影响文本的易读性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/111.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;For the best reading experience, make your paragraphs wide enough to fit between 45 and 75 characters per line. The easiest way to do this on the web is using em units, which are relative to the current font size. A width of 20-35em will get you in the right ballpark.&lt;/p&gt;&#xA;&lt;p&gt;为了最佳的阅读体验，应调整段落宽度，确保每行大约有 45 到 75 个字符。在网页设计中，使用 em 单位（与当前字体大小相对应）是最简单的方法。设置宽度在 20 到 35em 之间，可以确保行宽适宜。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/112.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/113.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Going a bit wider than 75 characters per line can sometimes work too, but be aware that you’re entering risky territory — stick to the 45-75 range if you want to play it safe.&lt;/p&gt;&#xA;&lt;p&gt;虽然每行超过 75 个字符在某些情况下也可行，但这可能降低阅读舒适度。为了安全起见，建议保持在 45 到 75 个字符的范围内。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Dealing with wider content / 应对宽内容的布局&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re mixing paragraph text with images or other large components, you should still limit the paragraph width even if the overall content area needs to be wider to accommodate the other elements.&lt;/p&gt;&#xA;&lt;p&gt;当你在段落文本与图片或其他大型组件混合布局时，即使为了适应这些元素，整体内容区域需要加宽，你也应当控制段落文本的宽度。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/114.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/115.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It might seem counterintuitive at first to use different widths in the same content area, but the result almost always looks more polished.&lt;/p&gt;&#xA;&lt;p&gt;虽然一开始在同一内容区域使用不同宽度的布局可能看起来不太自然，但这种设计方法几乎总能带来更加精细的外观。&lt;/p&gt;&#xA;&lt;h3 id=&#34;baseline-not-center--使用基线对齐而非居中对齐&#34;&gt;Baseline, not center / 使用基线对齐，而非居中对齐&lt;/h3&gt;&#xA;&lt;p&gt;There are a lot of situations where it makes sense to use multiple font sizes to create hierarchy on a single line.&lt;/p&gt;&#xA;&lt;p&gt;在许多情况下，为了在一行内创建视觉层级，使用不同大小的字体是合理的。&lt;/p&gt;&#xA;&lt;p&gt;For example, maybe you’re designing a card that has a large title in the top left and a smaller list of actions in the top right.&lt;/p&gt;&#xA;&lt;p&gt;比如，你可能在设计一个卡片，左上角有一个显眼的大标题，右上角是一组较小的操作项列表。&lt;/p&gt;&#xA;&lt;p&gt;When you’re mixing font sizes like this, your instinct might be to vertically center the text for balance:&lt;/p&gt;&#xA;&lt;p&gt;在混合使用不同字体大小时，人们可能会本能地将文本垂直居中对齐以求平衡：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/116.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When there’s a decent amount of space between the different font sizes it often won’t look bad enough to catch your attention, but when the text is close together the awkward alignment becomes more obvious:&lt;/p&gt;&#xA;&lt;p&gt;当不同大小的字体之间空间充足时，这种对齐方式可能看起来还可以接受；但当文本紧密排列时，不自然的对齐方式就会变得明显。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/117.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A better approach is to align mixed font sizes by their baseline, which is the imaginary line that letters rest on:&lt;/p&gt;&#xA;&lt;p&gt;一个更好的方法是根据字体的基线进行对齐，即字母所依托的那条假想线：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/118.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When you align mixed font sizes by their baseline, you’re taking advantage of an alignment reference that your eyes already perceive.&lt;/p&gt;&#xA;&lt;p&gt;通过基线对齐不同大小的字体，你实际上是在使用一个我们的眼睛已经习惯的参照线进行对齐。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/119.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The result is a simpler, cleaner look than what you get when you center two pieces of text and offset their baselines.&lt;/p&gt;&#xA;&lt;p&gt;这样做的结果是，与将两段文本居中对齐并使它们的基线错位相比，你将得到一个更简洁、更清晰的视觉效果。&lt;/p&gt;&#xA;&lt;h3 id=&#34;line-height-is-proportional--行高应成比例调整&#34;&gt;Line-height is proportional / 行高应成比例调整&lt;/h3&gt;&#xA;&lt;p&gt;You might have heard the advice that a line-height of about 1.5 is a good starting point from a readability perspective.&lt;/p&gt;&#xA;&lt;p&gt;常听到的建议是，从可读性角度出发，1.5 倍的行高是一个不错的起始点。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/120.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;While that’s not necessarily untrue, choosing the right line-height for your text is a bit more complicated than just using the same value across the board in all situations.&lt;/p&gt;&#xA;&lt;p&gt;然而，选择适合文本的行高并非简单地一概而论。需要考虑的因素包括行长度和字体大小。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Accounting for line length / 考虑行长度&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The reason we add space between lines of text is to make it easy for the reader to find the next line when the text wraps. Have you ever accidentally read the same line of text twice, or accidentally skipped a line? The line- height was probably too short.&lt;/p&gt;&#xA;&lt;p&gt;我们在文本行间留白，是为了帮助读者在文本换行时轻松找到下一行。如果你曾重复阅读同一行或不小心漏读一行，很可能是由于行高设置不足。&lt;/p&gt;&#xA;&lt;p&gt;When lines of text are spaced too tightly, it’s easy to finish reading a line of text at the right edge of a page then jump your eyes all the way back to the left edge only to be unsure which line is next.&lt;/p&gt;&#xA;&lt;p&gt;当文本行间距紧凑时，读者的视线在页面右侧结束阅读后，跳回左侧开始新一行，不容易确定下一行是哪一行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/121.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This problem is magnified when lines of text are long. The further your eyes have to jump horizontally to read the next line, the easier it is to lose your place.&lt;/p&gt;&#xA;&lt;p&gt;尤其是在长文本行中，这个问题会被放大。视线必须移动很远才能开始阅读下一行，就更容易在行间迷失。&lt;/p&gt;&#xA;&lt;p&gt;That means that your line-height and paragraph width should be proportional — narrow content can use a shorter line-height like 1.5, but wide content might need a line-height as tall as 2.&lt;/p&gt;&#xA;&lt;p&gt;因此，行高应与段落宽度成比例 —— 短文本可以使用 1.5 倍的行高，而长文本可能需要更高，如 2 倍行高。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/122.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Accounting for font size / 考虑字体大小&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Line length isn’t the only factor in choosing the right line-height — font size has a big impact as well.&lt;/p&gt;&#xA;&lt;p&gt;选择行高时，不仅要考虑行长，还要考虑字体大小的影响。&lt;/p&gt;&#xA;&lt;p&gt;When text is small, extra line spacing is important because it makes it a lot easier for your eyes to find the next line when the text wraps.&lt;/p&gt;&#xA;&lt;p&gt;小字体需要更大的行间距，以帮助视线在文本换行时更容易定位。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/123.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;But as text gets larger, your eyes don’t need as much help. This means that for large headline text you might not need any extra line spacing, and a line- height of 1 is perfectly fine.&lt;/p&gt;&#xA;&lt;p&gt;随着字体增大，视线定位的难度降低，大标题可能不需要额外的行间距，1 倍行高已足够。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/124.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Line-height and font size are inversely proportional — use a taller line-height for small text and a shorter line-height for large text.&lt;/p&gt;&#xA;&lt;p&gt;总的来说，行高与字体大小呈反比关系 —— 小字体采用较高行高，大字体则可使用较低行高。&lt;/p&gt;&#xA;&lt;h3 id=&#34;not-every-link-needs-a-color--并非每个链接都需要颜色&#34;&gt;Not every link needs a color / 并非每个链接都需要颜色&lt;/h3&gt;&#xA;&lt;p&gt;When you’re including a link in a block of otherwise non-link text, it’s important to make sure that the link stands out and looks clickable.&lt;/p&gt;&#xA;&lt;p&gt;在非链接文本块中加入链接时，重要的是要确保链接能够突出并显得可点击。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/125.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;But when you’re designing an interface where almost everything is a link, using a treatment designed to make links “pop” in paragraph text can be really overbearing.&lt;/p&gt;&#xA;&lt;p&gt;然而，在一个几乎所有元素都是链接的界面设计中，使用使链接在文本段落中「跳出来」的设计可能会让人感到过于强烈。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/126.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Instead, emphasize most links in a more subtle way, like by just using a heavier font weight or darker color.&lt;/p&gt;&#xA;&lt;p&gt;取而代之的是，以更微妙的方式强调大多数链接，例如只使用更粗的字体或更深的颜色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/127.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Some links might not even need to be emphasized by default at all. If you’ve got links in your interface that are really ancillary and not part of the main path a user takes through the application, consider adding an underline or changing the color only on hover.&lt;/p&gt;&#xA;&lt;p&gt;有些链接默认情况下可能根本不需要强调。如果你的界面中有辅助性的链接，并且这些链接不是用户使用应用程序的主要路径的一部分，考虑仅在鼠标悬停时才添加下划线或改变颜色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/128.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;They’ll still be discoverable to any users who think to try, but won’t compete for attention with more important actions on the page.&lt;/p&gt;&#xA;&lt;p&gt;这样，这些链接对于有意寻找的用户仍然是可发现的，但不会与页面上更重要的操作争夺注意力。&lt;/p&gt;&#xA;&lt;h3 id=&#34;align-with-readability-in-mind--以可读性为目标进行对齐&#34;&gt;Align with readability in mind / 以可读性为目标进行对齐&lt;/h3&gt;&#xA;&lt;p&gt;In general, text should be aligned to match the direction of the language it’s written in. For English (and most other languages), that means that the vast majority of text should be left-aligned.&lt;/p&gt;&#xA;&lt;p&gt;一般而言，文本的对齐方式应与其书写语言的方向一致。对于英语及大多数语言，这通常意味着大多数文本都应采取左对齐。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/129.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Other alignment options do have their place though, you just need to use them effectively.&lt;/p&gt;&#xA;&lt;p&gt;尽管如此，其他对齐方式也有其适用的场合，关键在于要有效利用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Don’t center long form text / 避免居中对齐长文本&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Center-alignment can look great for headlines or short, independent blocks of text.&lt;/p&gt;&#xA;&lt;p&gt;居中对齐适用于标题或短小独立的文本块，看起来效果佳。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/130.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;But if something is longer than two or three lines, it will almost always look better left-aligned.&lt;/p&gt;&#xA;&lt;p&gt;但如果文本超过两三行，左对齐通常会更美观。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/131.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’ve got a few blocks of text you want to center but one of them is a bit too long, the easiest fix is to rewrite the content and make it shorter:&lt;/p&gt;&#xA;&lt;p&gt;如果你希望几段文本居中对齐，但某段过长，最简单的解决方法是重写并缩短内容：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/132.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Not only will it fix the alignment issue, it will make your design feel more consistent, too.&lt;/p&gt;&#xA;&lt;p&gt;这不仅能解决对齐问题，还能让你的设计更加统一。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Right-align numbers / 数字右对齐&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re designing a table that includes numbers, right-align them.&lt;/p&gt;&#xA;&lt;p&gt;在设计包含数字的表格时，应将数字右对齐。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/133.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When the decimal in a list of numbers is always in the same place, they’re a lot easier to compare at a glance.&lt;/p&gt;&#xA;&lt;p&gt;当数字列表中的小数点位置固定时，它们将更易于快速比较。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Hyphenate justified text / 两端对齐文本使用连字符&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Justified text looks great in print and can work well on the web when you’re going for a more formal look, but without special care, it can create a lot of awkward gaps between words:&lt;/p&gt;&#xA;&lt;p&gt;两端对齐的文本在印刷品中表现出色，并且在追求更正式外观的网页设计中也能发挥作用，但若不经特殊处理，可能会在单词间产生不自然的空隙：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/134.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;To avoid this, whenever you justify text, you should also enable hyphenation:&lt;/p&gt;&#xA;&lt;p&gt;要避免这种情况，当文本两端对齐时，应同时启用连字符功能：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/135.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Justified text works best in situations where you’re trying to mimic a print look, perhaps for an online magazine or newspaper. Even then, left aligned text works great too, so it’s really just a matter of preference.&lt;/p&gt;&#xA;&lt;p&gt;两端对齐的文本最适合于模仿印刷品外观的场合，如在线杂志或报纸。即便如此，左对齐文本同样表现出色，因此这更多是个人偏好的选择。&lt;/p&gt;&#xA;&lt;h3 id=&#34;use-letter-spacing-effectively--有效使用字间距&#34;&gt;Use letter-spacing effectively / 有效使用字间距&lt;/h3&gt;&#xA;&lt;p&gt;When styling text, a lot of effort is put into getting the weight, color, and line- height just right, but it’s easy to forget that letter-spacing can be tweaked, too.&lt;/p&gt;&#xA;&lt;p&gt;在设计文本样式时，我们通常会花费很多精力调整字体粗细、颜色和行高，但有时会忽略字间距的调整。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/136.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;As a general rule, you should trust the typeface designer and leave letter-spacing alone. That said, there are a couple of common situations where adjusting it can improve your designs.&lt;/p&gt;&#xA;&lt;p&gt;一般而言，我们应该信任字体设计师的设计，不改变字间距。尽管如此，有几种常见情况通过调整字间距可以提升设计效果。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tightening headlines / 压缩标题的字间距&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;When someone designs a font family, they design it with a purpose in mind.&lt;/p&gt;&#xA;&lt;p&gt;设计字体系列时，设计师会考虑特定的使用目的。&lt;/p&gt;&#xA;&lt;p&gt;A family like Open Sans is designed to be highly legible even at small sizes, so the built-in letter-spacing is a lot wider than a family like Oswald which is designed for headlines.&lt;/p&gt;&#xA;&lt;p&gt;例如，Open Sans 字体设计用于在小尺寸下也能保持高度可读性，因此其字间距相对较宽；而 Oswald 字体则是为标题设计的，其字间距更紧凑。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/137.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you want to use a family with wider letter-spacing for headlines or titles, it can often make sense to decrease the letter-spacing to mimic the condensed look of a purpose-built headline family:&lt;/p&gt;&#xA;&lt;p&gt;如果你想使用字间距较宽的字体系列做标题，通常可以减少字间距，以模拟专为标题设计的紧凑字体的外观：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/1389.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Avoid trying to make this work the other way around though — headline fonts rarely work well at small sizes even if you increase the letter spacing.&lt;/p&gt;&#xA;&lt;p&gt;但不要试图反向操作 —— 即使增加字间距，专为标题设计的字体在小尺寸下也很少能表现良好。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Improving all-caps legibility / 提高全大写易读性&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The letter-spacing in most font families is optimized for normal “sentence case” text — a capital letter followed by mostly lowercase letters.&lt;/p&gt;&#xA;&lt;p&gt;大多数字体系列的字间距是为通常的「句子格式」文本优化的 —— 即一个单词首字母大写后跟小写字母。&lt;/p&gt;&#xA;&lt;p&gt;Lowercase letters have a lot of variety visually. Letters like n, v, and e fit entirely within a typeface’s x-height, other letters like y, g, and p have descenders that poke out below the baseline, and letters like b, f, and t have ascenders that extend above.&lt;/p&gt;&#xA;&lt;p&gt;小写字母在视觉上具有多样性。例如，字母 n、v 和 e 完全适应字体的 X 高度，而像 y、g 和 p 这样的字母有延伸到基线以下的部件，b、f 和 t 等字母则有延伸到基线上面的部件。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/139.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;All-caps text on the other hand isn’t so diverse. Since every letter is the same height, using the default letter-spacing often leads to text that is harder to read because there are fewer distinguishing characteristics between letters.&lt;/p&gt;&#xA;&lt;p&gt;而全大写字母则缺乏这种多样性，因为所有字母高度一致，使用默认字间距可能会导致文本阅读起来更困难，因为字母之间的区别性减少。&lt;/p&gt;&#xA;&lt;p&gt;For that reason, it often makes sense to increase the letter-spacing of all- caps text to improve readability:&lt;/p&gt;&#xA;&lt;p&gt;因此，通常增加全大写字母的字间距有助于提高其可读性：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/140.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;working-with-color--运用色彩&#34;&gt;Working with Color / 运用色彩&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ditch-hex-for-hsl--放弃-hex选择-hsl&#34;&gt;Ditch hex for HSL / 放弃 Hex，选择 HSL&lt;/h3&gt;&#xA;&lt;p&gt;Hex and RGB are the most common formats for representing color on the web, but they’re not the most useful.&lt;/p&gt;&#xA;&lt;p&gt;十六进制（Hex）和 RGB 是网络中表示颜色的常见格式，但它们并不是最实用的选择。&lt;/p&gt;&#xA;&lt;p&gt;Using hex or RGB, colors that have a lot in common visually look nothing alike in code.&lt;/p&gt;&#xA;&lt;p&gt;使用十六进制或 RGB 时，视觉上相似的颜色在代码中可能看起来完全不同。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/141.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;HSL fixes this by representing colors using attributes the human-eye intuitively perceives: hue, saturation, and lightness.&lt;/p&gt;&#xA;&lt;p&gt;HSL 通过人类直观感知的色彩属性来表示颜色：色相、饱和度和亮度。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Hue&lt;/strong&gt; is a color’s position on the color wheel — it’s the attribute of a color that lets us identify two colors as “blue” even if they aren’t identical.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;色相&lt;/strong&gt;指的是颜色在色轮上的定位，这种属性使我们能够在两种颜色并非完全一致的情况下，依然将它们归类为「蓝色」。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/142.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Hue is measured in degrees, where 0° is red, 120° is green, and 240° is blue.&lt;/p&gt;&#xA;&lt;p&gt;色相用度数表示，0° 代表红色，120° 代表绿色，240° 代表蓝色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/143.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Saturation&lt;/strong&gt; is how colorful or vivid a color looks. 0% saturation is grey (no color), and 100% saturation is vibrant and intense.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;饱和度&lt;/strong&gt;描述颜色的鲜艳程度。0% 的饱和度是灰色，没有色彩感，而 100% 的饱和度则非常鲜艳和强烈。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/144.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Without saturation, hue is irrelevant — rotating the hue when saturation is 0% doesn’t actually change the color at all.&lt;/p&gt;&#xA;&lt;p&gt;没有饱和度，色相就无从谈起 —— 饱和度为 0% 时，色相的旋转不会改变颜色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/145.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Lightness&lt;/strong&gt; is just what it sounds like — it measures how close a color is to black or to white. 0% lightness is pure black, 100% lightness is pure white, and 50% lightness is a pure color at the given hue.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;亮度&lt;/strong&gt;顾名思义，它衡量颜色与黑色或白色的接近程度。0% 亮度是纯黑色，100% 亮度是纯白色，而 50% 亮度则表示在特定色相下的纯色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/146.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;HSL vs. HSB / HSL 与 HSB 的区别&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Don’t confuse HSL for HSB — &lt;em&gt;lightness&lt;/em&gt; in HSL is not the same as brightness in HSB.&lt;/p&gt;&#xA;&lt;p&gt;不要把 HSL 和 HSB 混淆。HSL 中的&lt;em&gt;亮度&lt;/em&gt;与 HSB 中的&lt;em&gt;亮度&lt;/em&gt;不是同一个概念。&lt;/p&gt;&#xA;&lt;p&gt;In HSB, 0% brightness is always black, but 100% brightness is only white when the saturation is 0%. When saturation is 100%, 100% brightness in HSB is the same as 100% saturation and 50% lightness in HSL.&lt;/p&gt;&#xA;&lt;p&gt;在 HSB 模式中，0% 亮度总是黑色，而在饱和度为 0% 时，100% 亮度是白色。当饱和度为 100% 时，HSB 中的 100% 亮度等同于 HSL 中的 100% 饱和度和 50% 亮度。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/147.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;HSB is more common than HSL in design software, but browsers only understand HSL, so if you’re designing for the web, HSL should be your weapon of choice.&lt;/p&gt;&#xA;&lt;p&gt;虽然 HSB 在设计软件中更常见，但浏览器只接受 HSL，所以如果你在为网页设计，HSL 应该是你的首选。&lt;/p&gt;&#xA;&lt;h3 id=&#34;you-need-more-colors-than-you-think--你所需的颜色比你认为的要多&#34;&gt;You need more colors than you think / 你所需的颜色比你认为的要多&lt;/h3&gt;&#xA;&lt;p&gt;Ever used one of those color palette generators where you pick a starting color, tweak some options, and are then bestowed the five perfect colors you should use to build your website?&lt;/p&gt;&#xA;&lt;p&gt;你是否尝试过那种颜色调色板生成器，你选定一个基础色，调整几个选项，然后生成器就会为你提供五种完美的颜色，告诉你应该用它们来构建你的网站？&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/148.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This calculated approach to picking the perfect color scheme is extremely seductive, but it’s not very useful unless you want your site to look like this:&lt;/p&gt;&#xA;&lt;p&gt;这种计算出的颜色方案选择方法非常吸引人，但除非你想让你的网站看起来千篇一律：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/149.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;What you actually need / 你实际需要的&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;You can’t build anything with five hex codes. To build something real, you need a much more comprehensive set of colors to choose from.&lt;/p&gt;&#xA;&lt;p&gt;仅有五个十六进制颜色代码是不够的。要构建真实的设计，你需要更全面的颜色选择范围。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/150.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You can break a good color palette down into three categories.&lt;/p&gt;&#xA;&lt;p&gt;一个好的颜色调色板可以分为三个主要类别。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Greys / 灰色系&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Text, backgrounds, panels, form controls — almost everything in an interface is grey.&lt;/p&gt;&#xA;&lt;p&gt;文本、背景、面板、表单控件 —— 界面中的几乎所有元素都是灰色的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/151.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You’ll need more greys than you think, too — three or four shades might sound like plenty but it won’t be long before you wish you had something a little darker than shade #2 but a little lighter than shade #3.&lt;/p&gt;&#xA;&lt;p&gt;你可能需要比你想象的更多的灰色调 —— 三到四种可能看起来足够，但很快你就会需要比 #2 色调稍深一点但是比 #3 色调稍浅一点的颜色。&lt;/p&gt;&#xA;&lt;p&gt;In practice, you want 8-10 shades to choose from (&lt;em&gt;more on this in “Define your shades up front”&lt;/em&gt;). Not so many that you waste time deciding between shade #77 and shade #78, but enough to make sure you don’t have to compromise too much.&lt;/p&gt;&#xA;&lt;p&gt;实际上，你应该从一种非常深的灰色开始，逐步过渡到白色，并有 8 到 10 种色调可供选择（更多细节见「预先确定色调」）。这样既不会太多以至于在选择色调时浪费时间，也足以保证你不必做出太多妥协。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/152.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;True black tends to look pretty unnatural, so start with a really dark grey and work your way up to white in steady increments.&lt;/p&gt;&#xA;&lt;p&gt;纯黑色看起来往往不自然，所以应该从一种非常深的灰色开始，逐步过渡到白色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Primary color(s) / 主要色&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Most sites need one, &lt;em&gt;maybe&lt;/em&gt; two colors that are used for primary actions, active navigation elements, etc. These are the colors that determine the overall look of a site — the ones that make you think of Facebook as “blue”.&lt;/p&gt;&#xA;&lt;p&gt;大多数网站通常需要一种，或者&lt;em&gt;可能&lt;/em&gt;最多两种颜色，用于主要操作、活动的导航元素等。这些颜色决定了网站的整体外观 —— 比如 Facebook 的「蓝色」。&lt;/p&gt;&#xA;&lt;p&gt;Just like with greys, you need a variety (5-10) of lighter and darker shades to choose from.&lt;/p&gt;&#xA;&lt;p&gt;和灰色一样，你需要 5 到 10 种不同深浅的色调可供选择。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/153.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Ultra-light shades can be useful as a tinted background for things like alerts, while darker shades work great for text.&lt;/p&gt;&#xA;&lt;p&gt;最浅的色调可以用作提醒等元素的着色背景，而最深的色调适合用于文本。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Accent colors / 强调色&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;On top of primary colors, every site needs a few accent colors for communicating different things to the user.&lt;/p&gt;&#xA;&lt;p&gt;除了主颜色外，每个网站还需要一些强调色来向用户传达不同的信息。&lt;/p&gt;&#xA;&lt;p&gt;For example, you might want to use an eye-grabbing color like yellow, pink, or teal to highlight a new feature:&lt;/p&gt;&#xA;&lt;p&gt;例如，你可能想用黄色、粉色或蓝绿色等醒目的颜色来突出新功能：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/154.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You might also need colors to emphasize different semantic states, like red for confirming a destructive action:&lt;/p&gt;&#xA;&lt;p&gt;你可能还需要用颜色来强调不同的语义状态，如用红色来确认破坏性操作：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/155.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;yellow for a warning message:&lt;/p&gt;&#xA;&lt;p&gt;用黄色表示警告信息：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/156.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;or green to highlight a positive trend:&lt;/p&gt;&#xA;&lt;p&gt;或者用绿色突出积极的趋势：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/157.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You’ll want multiple shades for these colors too, even though they should be used pretty sparingly throughout the UI.&lt;/p&gt;&#xA;&lt;p&gt;即使对于这些颜色，你也需要有多种深浅变化，尽管它们在 UI 中的使用应该相当节制。&lt;/p&gt;&#xA;&lt;p&gt;If you’re building something where you need to use color to distinguish or categorize similar elements (like lines on graphs, events in a calendar, or tags on a project), you might need even more accent colors.&lt;/p&gt;&#xA;&lt;p&gt;如果你正在构建需要用颜色来区分或分类相似元素的设计（例如图表中的线条、日历中的事件或项目中的标签），你可能需要更多的强调色。&lt;/p&gt;&#xA;&lt;p&gt;All in, it’s not uncommon to need as many as ten different colors with 5-10 shades each for a complex UI.&lt;/p&gt;&#xA;&lt;p&gt;总的来说，对于一个复杂的用户界面，拥有多达十种不同的颜色，每种颜色有 5 到 10 种不同的深浅变化，这是很常见的。&lt;/p&gt;&#xA;&lt;h3 id=&#34;define-your-shades-up-front--预先确定色调&#34;&gt;Define your shades up front / 预先确定色调&lt;/h3&gt;&#xA;&lt;p&gt;When you need to create a lighter or darker variation of a color in your palette, don’t get clever using CSS preprocessor functions like “lighten” or “darken” to create shades on the fly. That’s how you end up with 35 slightly different blues that all look the same.&lt;/p&gt;&#xA;&lt;p&gt;在为你的调色板创建颜色的深浅变化时，不要使用 CSS 预处理器的「变亮」或「变暗」等函数来即时生成色调。这样做可能会导致你得到许多几乎无法区分的蓝色调。&lt;/p&gt;&#xA;&lt;p&gt;Instead, define a fixed set of shades up front that you can choose from as you work.&lt;/p&gt;&#xA;&lt;p&gt;相反，你应该一开始就定义一套固定的色调供工作时选择。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/158.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;So how do you put together a palette like this anyways?&lt;/p&gt;&#xA;&lt;p&gt;那么，如何构建这样的调色板呢？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Choose the base color first / 首先选择基础色调&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Start by picking a base color for the scale you want to create — the color in the middle that your lighter and darker shades are based on.&lt;/p&gt;&#xA;&lt;p&gt;首先，为你想要创建的色阶选择一个基础色调 —— 你的浅色和深色都是基于这个中间色调。&lt;/p&gt;&#xA;&lt;p&gt;There’s no real scientific way to do this, but for primary and accent colors, a good rule of thumb is to pick a shade that would work well as a button background.&lt;/p&gt;&#xA;&lt;p&gt;选择基础色调没有严格的科学方法，但对于主要色和强调色，一个好的经验是选择一个适合作为按钮背景的色调。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/159.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It’s important to note that there are no real rules here like “start at 50% lightness” or anything — every color behaves a bit differently, so you’ll have to rely on your eyes for this one.&lt;/p&gt;&#xA;&lt;p&gt;需要注意的是，这里没有固定规则，比如「从 50% 亮度开始」，因为每种颜色的表现都有所不同，所以你需要依靠你的视觉判断。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Finding the edges / 确定色阶的端点&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Next, pick your darkest shade and your lightest shade. There’s no real science to this either, but it helps to think about where they will be used and choose them using that context.&lt;/p&gt;&#xA;&lt;p&gt;接下来，选择最深色和最浅色。这个过程也没有固定规则，但考虑它们将如何使用，并根据这个场景来选择它们。&lt;/p&gt;&#xA;&lt;p&gt;The darkest shade of a color is usually reserved for text, while the lightest shade might be used to tint the background of an element.&lt;/p&gt;&#xA;&lt;p&gt;通常，颜色的最深色用于文本，而最浅色可能用于元素背景的轻微着色。&lt;/p&gt;&#xA;&lt;p&gt;A simple alert component is a good example that combines both of these use cases, so it can be a great place to pick these colors.&lt;/p&gt;&#xA;&lt;p&gt;例如，一个简单的警告组件可能同时使用这两种色调，这可以是选择这些颜色的好起点。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/160.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Start with a color that matches the hue of your base color, and adjust the saturation and lightness until you’re satisfied.&lt;/p&gt;&#xA;&lt;p&gt;从与基础色相相匹配的颜色开始，调整饱和度和亮度直到你满意。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Filling in the gaps / 填补中间的空隙&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Once you’ve got your base, darkest, and lightest shades, you just need to fill in the gaps in between them.&lt;/p&gt;&#xA;&lt;p&gt;确定了基础色、最深色和最浅色之后，你只需要在它们之间填补空隙。&lt;/p&gt;&#xA;&lt;p&gt;For most projects, you’ll need at least 5 shades per color, and probably closer to 10 if you don’t want to feel too constrained.&lt;/p&gt;&#xA;&lt;p&gt;对于大多数项目，每种颜色至少需要 5 个色调，如果想要更自由一些，可能需要接近 10 个。&lt;/p&gt;&#xA;&lt;p&gt;Nine is a great number because it’s easy to divide and makes filling in the gaps a little more straightforward. Let’s call our darkest shade 900, our base shade 500, and our lightest shade 100.&lt;/p&gt;&#xA;&lt;p&gt;9 是一个理想的数字，因为它易于分割，使得填补空隙更加直接。假设我们将最深色定义为 900，基础色为 500，最浅色为 100。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/161.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Start by picking shades 700 and 300, the ones right in the middle of the gaps. You want these shades to feel like the perfect compromise between the shades on either side.&lt;/p&gt;&#xA;&lt;p&gt;首先选择 700 和 300 这两个中间的色调，这些色调应该是两侧色调的完美折中。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/162.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This creates four more holes in the scale (800, 600, 400, and 200), which you can fill using the same approach.&lt;/p&gt;&#xA;&lt;p&gt;这样，你就为色阶上的 800、600、400 和 200 留下了更多的空间，可以用相同的方法填补。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/163.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You should end up with a pretty balanced set of colors that provide just enough options to accommodate your design ideas without feeling limiting.&lt;/p&gt;&#xA;&lt;p&gt;最终，你会得到一套平衡的颜色组合，为你的设计提供足够的选择，而不会感觉受限。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;What about greys? / 灰色如何处理？&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;With greys the base color isn’t as important, but otherwise the process is the same. Start at the edges and fill in the gaps until you have what you need.&lt;/p&gt;&#xA;&lt;p&gt;对于灰色，基础色不是那么关键，但构建过程是相同的。从端点开始，填补空隙，直到你得到所需。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/164.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Pick your darkest grey by choosing a color for the darkest text in your project, and your lightest grey by choosing something that works well for a subtle off-white background.&lt;/p&gt;&#xA;&lt;p&gt;选择最深色灰色，可以作为项目中最深色文本的颜色，选择最浅色灰色，可以作为微妙的灰白色背景。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;It’s not a science / 这不是一门精确科学&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;As tempting as it is, you can’t rely purely on math to craft the perfect color palette.&lt;/p&gt;&#xA;&lt;p&gt;尽管很诱人，但你不能完全依赖数学来创建完美的调色板。&lt;/p&gt;&#xA;&lt;p&gt;A systematic approach like the one described above is great to get you started, but don’t be afraid to make little tweaks if you need to.&lt;/p&gt;&#xA;&lt;p&gt;像前文描述的体系化方法对于开始构建调色板很有帮助，但如果需要，不要害怕进行微调。&lt;/p&gt;&#xA;&lt;p&gt;Once you actually start using your colors in your designs, it’s almost inevitable that you’ll want to tweak the saturation on a shade, or make a couple of shades lighter or darker. Trust your eyes, not the numbers.&lt;/p&gt;&#xA;&lt;p&gt;当你开始在设计中实际使用这些颜色时，几乎可以肯定会想要调整某个色调的饱和度，或者让几个色调变得更亮或更暗。相信的你的眼睛，而不是数字。&lt;/p&gt;&#xA;&lt;p&gt;Just try to avoid adding new shades too often if you can avoid it. If you’re not diligent about limiting your palette, you might as well have no color system at all.&lt;/p&gt;&#xA;&lt;p&gt;只是尽量避免频繁添加新色调。如果你不严格限制你的调色板，那拥有颜色体系就毫无意义。&lt;/p&gt;&#xA;&lt;h3 id=&#34;dont-let-lightness-kill-your-saturation--避免亮度影响饱和度&#34;&gt;Don’t let lightness kill your saturation / 避免亮度影响饱和度&lt;/h3&gt;&#xA;&lt;p&gt;In the HSL color space, as a color gets closer to 0% or 100% lightness, the impact of saturation is weakened — the same saturation value at 50% lightness looks more colorful than it does at 90% lightness.&lt;/p&gt;&#xA;&lt;p&gt;在 HSL 色彩模式中，颜色的亮度若接近 0% 或 100% 时，饱和度的效果会减弱 —— 即使饱和度值相同，在 50% 亮度下看起来会比在 90% 亮度下更显彩色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/165.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;That means that if you don’t want the lighter and darker shades of a given color to look washed out, you need to increase the saturation as the lightness gets further away from 50%.&lt;/p&gt;&#xA;&lt;p&gt;这表示，如果你不希望某个颜色的深浅变化看起来褪色，就需要随着亮度的增减相应提高饱和度。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/166.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It’s subtle but little details like this add up, especially when a color is being applied to a large section of a UI.&lt;/p&gt;&#xA;&lt;p&gt;这种细微差别虽然不易察觉，但累积起来，尤其是在大面积应用颜色的 UI 设计中，会有很大影响。&lt;/p&gt;&#xA;&lt;p&gt;But what if your base color is already heavily saturated? How do you increase the saturation if it’s already at 100%?&lt;/p&gt;&#xA;&lt;p&gt;如果你的基础色已经非常饱和，达到 100%，那该怎么办？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Use perceived brightness to your advantage / 利用感知亮度的优势&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Which of these two colors do you think is lighter?&lt;/p&gt;&#xA;&lt;p&gt;你认为这两种颜色中，哪一种更亮？&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/167.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The yellow, right? Well it turns out both colors actually have the exact same “lightness” in terms of HSL:&lt;/p&gt;&#xA;&lt;p&gt;是黄色，对吧？实际上，这两种颜色在 HSL 色彩模式中的亮度是相同的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/168.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;So why do we see the yellow as lighter? Well it turns out that every hue has an inherent perceived brightness due to how the human eye perceives color.&lt;/p&gt;&#xA;&lt;p&gt;那为什么我们会感觉黄色更亮呢？这是因为人眼对不同色相有固有的感知亮度。&lt;/p&gt;&#xA;&lt;p&gt;You can calculate the perceived brightness of a color by plugging its RGB components into this formula:&lt;/p&gt;&#xA;&lt;p&gt;你可以通过一个公式，将颜色的 RGB 值代入，来计算其感知亮度。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/169.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Taking samples of different hues with 100% saturation and 50% lightness, we can get a good sense of the perceived brightness of different colors around the color wheel:&lt;/p&gt;&#xA;&lt;p&gt;选取不同色相 100% 饱和度和 50% 亮度的样本，我们可以了解到色轮上不同颜色的感知亮度。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/170.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;As expected, yellow has a higher perceived brightness than blue. But what’s interesting here is that perceived brightness doesn’t simply change linearly from the darkest hue to the lightest hue — instead, there are three separate local minimums (red, green, and blue) and three local maximums (yellow, cyan, and magenta).&lt;/p&gt;&#xA;&lt;p&gt;正如预期，黄色的感知亮度高于蓝色。有趣的是，感知亮度并非从最暗色相到最亮色相线性变化，而是有三个局部最小值（红色、绿色和蓝色）和三个局部最大值（黄色、青色和品红色）。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Changing brightness by rotating hue / 通过调整色相改变亮度&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;On the surface, this is certainly an interesting thing to understand about color. But things get really interesting when you realize how you can use this knowledge in your designs.&lt;/p&gt;&#xA;&lt;p&gt;这在理论上是一个有趣的发现，但当你意识到可以如何在设计中应用这一知识时，它就变得更有趣了。&lt;/p&gt;&#xA;&lt;p&gt;Normally when you want to change how light a color looks, you adjust the &lt;em&gt;lightness&lt;/em&gt; component:&lt;/p&gt;&#xA;&lt;p&gt;通常，如果你想改变颜色的亮度，你会调整其&lt;em&gt;亮度&lt;/em&gt;成分。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/171.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;While this does work to lighten or darken a color, you often lose some of the color’s &lt;em&gt;intensity&lt;/em&gt; — the color also looks closer to white or to black, not just lighter or darker.&lt;/p&gt;&#xA;&lt;p&gt;这种方法虽然有效，但可能会牺牲颜色的&lt;em&gt;强度&lt;/em&gt; —— 颜色看起来会更接近白色或黑色，而不仅仅是变亮或变暗。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/172.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Since different hues have a different perceived brightness, another way you can change the brightness of a color is by &lt;em&gt;rotating&lt;/em&gt; its hue.&lt;/p&gt;&#xA;&lt;p&gt;由于不同色相的感知亮度不同，你也可以通过&lt;em&gt;旋转&lt;/em&gt;色相来改变颜色的亮度。&lt;/p&gt;&#xA;&lt;p&gt;To make a color lighter, rotate the hue towards the nearest bright hue — 60°, 180°, or 300°.&lt;/p&gt;&#xA;&lt;p&gt;要使颜色看起来更亮，将其色相向最近的亮色相（60°、180° 或 300°）调整。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/173.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;To make a color darker, rotate the hue towards the nearest dark hue — 0°, 120°, or 240°.&lt;/p&gt;&#xA;&lt;p&gt;要使颜色看起来更暗，将其色相向最近的暗色相（0°、120° 或 240°）调整。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/174.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This can be really useful when trying to create a palette for a light color like yellow. By gradually rotating the hue towards more of an orange as you decrease the lightness, the darker shades will feel warm and rich instead of dull and brown:&lt;/p&gt;&#xA;&lt;p&gt;这在为像黄色这样的浅色创建调色板时非常有用。通过逐渐将色相调整为更偏向橙色，同时降低亮度，较暗的色相会显得更加温暖和丰富，而不是单调和棕色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/175.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You can of course combine these approaches too, getting some of the brightness by adjusting the hue and some from adjusting the lightness.&lt;/p&gt;&#xA;&lt;p&gt;当然，你也可以结合这两种方法，通过调整色相和亮度来获得所需的亮度。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/176.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;While this is a great way to change a color’s brightness without affecting its intensity, it works best in small doses. Don’t rotate the hue more than 20-30° or it will look like a totally different color instead of just lighter or darker.&lt;/p&gt;&#xA;&lt;p&gt;虽然这是一种在不影响颜色强度的情况下改变颜色亮度的有效方法，但应适度使用。避免将色相旋转超过 20~30°，否则颜色可能会看起来完全不同，而不仅仅是简单的变亮或变暗。&lt;/p&gt;&#xA;&lt;h3 id=&#34;greys-dont-have-to-be-grey--灰色也可以有色彩&#34;&gt;Greys don’t have to be grey / 灰色也可以有色彩&lt;/h3&gt;&#xA;&lt;p&gt;By definition, true grey has a saturation of 0% — it doesn’t have any actual color in it at all.&lt;/p&gt;&#xA;&lt;p&gt;按照定义，纯灰色的饱和度为0%，它不包含任何颜色成分。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/177.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;But in practice, a lot of the colors that we &lt;em&gt;think of&lt;/em&gt; as grey are actually saturated quite heavily:&lt;/p&gt;&#xA;&lt;p&gt;但在实践中，许多我们&lt;em&gt;认为&lt;/em&gt;是灰色的颜色实际上具有相当高的饱和度：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/178.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This saturation is what makes some greys feel cool and other greys feel warm.&lt;/p&gt;&#xA;&lt;p&gt;正是这种饱和度让某些灰色带有凉爽感，而另一些灰色则带有温暖感。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Color temperature / 色温的概念&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’ve ever purchased light bulbs before, you’ve had to make the decision between “warm white” bulbs that give off a yellow-ish light, and “cool white” bulbs that give off a blue-ish light.&lt;/p&gt;&#xA;&lt;p&gt;如果你曾经购买过灯泡，你可能需要在发出偏黄光的「暖白光」灯泡和发出偏蓝光的「冷白光」灯泡之间做出选择。&lt;/p&gt;&#xA;&lt;p&gt;Saturating greys in a user interface works in a similar same way.&lt;/p&gt;&#xA;&lt;p&gt;在用户界面设计中，对灰色进行饱和处理的原理相似。&lt;/p&gt;&#xA;&lt;p&gt;If you want your greys to feel cool, saturate them with a bit of blue:&lt;/p&gt;&#xA;&lt;p&gt;如果你想让灰色显得更冷，可以添加一些蓝色的饱和：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/179.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;To give your greys a warmer feel, saturate them with a bit of yellow or orange:&lt;/p&gt;&#xA;&lt;p&gt;要让灰色显得更温暖，可以添加一些黄色或橙色的饱和：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/180.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;To maintain a consistent temperature, don’t forget to increase the saturation for the lighter and darker shades. If you don’t, those shades will look a bit washed out compared to the greys that are closer to 50% lightness.&lt;/p&gt;&#xA;&lt;p&gt;为了维持一致的色温，记得为较亮或较暗的灰色调也增加饱和度。如果不这样做，与接近 50% 亮度的灰色相比，这些色调可能会显得有些褪色。&lt;/p&gt;&#xA;&lt;p&gt;How much you want to saturate your greys is completely up to you — add just a little if you only want to tip the temperature slightly, or crank it up if you want the interface to lean strongly in one direction or the other.&lt;/p&gt;&#xA;&lt;p&gt;你对灰色的饱和度调整程度完全取决于你自己的偏好 —— 如果你只想轻微调整色温，可以只添加少量饱和；如果你希望界面明显倾向于冷或暖色调，可以适当增加饱和度。&lt;/p&gt;&#xA;&lt;h3 id=&#34;accessible-doesnt-have-to-mean-ugly--易用性不必以牺牲美观为代价&#34;&gt;Accessible doesn’t have to mean ugly / 易用性不必以牺牲美观为代价&lt;/h3&gt;&#xA;&lt;p&gt;To make sure your designs are accessible, the Web Content Accessibility Guidelines (WCAG) recommend that normal text (under ~18px) has a contrast ratio of at least 4.5:1, and that larger text has a contrast ratio of at least 3:1.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;译者注：&lt;a href=&#34;https://www.w3.org/TR/WCAG21/&#34;&gt;Web Content Accessibility Guidelines (WCAG) 2.1&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;根据网络内容无障碍指南（WCAG），为确保设计易于访问，建议对小于约 18px 的普通文本保持至少 4.5:1 的对比度，对较大文本保持至少 3:1 的对比度。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/181.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;For typical &lt;em&gt;dark-text-on-a-light-background&lt;/em&gt; situations, meeting this recommendation is pretty easy, but it gets a lot trickier when you start working with color.&lt;/p&gt;&#xA;&lt;p&gt;在&lt;em&gt;深色文字在浅色背景上&lt;/em&gt;的常见情况下，达到这些建议标准相对容易，但在涉及彩色设计时，挑战就会增加。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Flipping the contrast / 对比度反转&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;When using white text on a colored background, you’d be surprised how dark the color often needs to be to meet that 4.5:1 contrast ratio.&lt;/p&gt;&#xA;&lt;p&gt;在彩色背景上使用白色文字时，你可能会发现要满足 4.5:1 的对比度标准，背景颜色往往需要非常深。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/182.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This can create hierarchy issues when those elements aren’t supposed to be the focus of the page — dark colored backgrounds will really grab the user’s attention.&lt;/p&gt;&#xA;&lt;p&gt;这可能会导致层级上的混淆，尤其是当这些元素并非页面的焦点时 —— 深色背景会特别吸引用户的注意力。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/183.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You can solve this problem by flipping the contrast. Instead of using light text on a dark colored background, use dark colored text on a light colored background:&lt;/p&gt;&#xA;&lt;p&gt;解决这个问题的方法是反转对比度。与其在深色背景上使用浅色文字，不如在浅色背景上使用深色文字：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/184.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The color is still there to help support the text, but it’s way less in-your-face and doesn’t interfere as much with other actions on the page.&lt;/p&gt;&#xA;&lt;p&gt;颜色依然有助于支持文字的可读性，但更加低调，不会过多干扰页面上的其他操作。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Rotating the hue / 旋转色相&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Even harder than white text on a colored background is colored text on a colored background. You’ll run into this situation if you’re ever trying to pick a color for some secondary text inside a dark-colored panel.&lt;/p&gt;&#xA;&lt;p&gt;比在彩色背景上使用白色文字更具挑战性的是在彩色背景上使用彩色文字。这种情况可能发生在为深色面板内的次要文本选择颜色时。&lt;/p&gt;&#xA;&lt;p&gt;If you start by taking the background color and simply adjusting the lightness and saturation, you’ll find that it’s hard to meet the recommended contrast ratio without getting very close to pure white.&lt;/p&gt;&#xA;&lt;p&gt;如果你只是调整背景色的色彩亮度和饱和度，会发现很难在不接近纯白色的情况下达到推荐的对比度。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/185.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You don’t want the primary text and the secondary text to look the same, so what else can you do?&lt;/p&gt;&#xA;&lt;p&gt;你不希望次要文本和主要文本看起来没有区别，那还能怎么做呢？&lt;/p&gt;&#xA;&lt;p&gt;Well since some colors are brighter than others, one way to increase the contrast without getting closer to white is to &lt;em&gt;rotate the hue&lt;/em&gt; towards a brighter color, like cyan, magenta, or yellow.&lt;/p&gt;&#xA;&lt;p&gt;既然某些颜色天生比其他颜色更明亮，一种在不趋向白色的情况下提高对比度的方法就&lt;em&gt;旋转色相&lt;/em&gt;向更明亮的颜色，比如青色、品红或黄色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/186.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This can make it a lot easier to make the text accessible while still keeping it colorful.&lt;/p&gt;&#xA;&lt;p&gt;这可以使文本在保持多彩的同时，也更容易阅读。&lt;/p&gt;&#xA;&lt;h3 id=&#34;dont-rely-on-color-alone--避免完全依赖颜色&#34;&gt;Don’t rely on color alone / 避免完全依赖颜色&lt;/h3&gt;&#xA;&lt;p&gt;Color can be a fantastic way to enhance information and make it easier to understand, but be careful not to rely on it, or users with color blindness will have a hard time interpreting your UI.&lt;/p&gt;&#xA;&lt;p&gt;颜色是提升信息传递清晰度和易理解性的绝佳工具，但应避免完全依赖颜色，以免色盲用户难以理解用户界面。&lt;/p&gt;&#xA;&lt;p&gt;Take these metric cards for example. With this design, someone who is red- green colorblind can’t easily tell if a metric has gotten better or worse:&lt;/p&gt;&#xA;&lt;p&gt;以一组指标卡片为例。按照当前的设计，红绿色盲用户可能难以快速判断某个指标的表现是提升还是下降：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/187.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;An easy fix for this is to also communicate that information in some other way, like by adding icons to indicate if the change is positive or negative.&lt;/p&gt;&#xA;&lt;p&gt;解决这个问题的一个简单方法是通过其他方式传达这一信息，例如添加表示变化性质的图标。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/188.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;What about something like a graph, where each trend line has a different color?&lt;/p&gt;&#xA;&lt;p&gt;在面对图表等元素时，其中每条趋势线采用不同颜色表示，又该如何处理呢？&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/189.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;In situations like this, try relying on contrast instead of using completely different colors. It’s much easier for someone who’s colorblind to tell the difference between light and dark than it is for them to tell the difference between two distinct colors.&lt;/p&gt;&#xA;&lt;p&gt;在这种情况下，应尽量依赖对比度而非完全不同的颜色。色盲用户更容易区分不同亮度的颜色，而不是两种截然不同的颜色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/190.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Always use color to support something that your design is already saying; never use it as the only means of communication.&lt;/p&gt;&#xA;&lt;p&gt;始终将颜色用作支持设计中已有信息的辅助手段，而不要将其作为唯一的信息传递方式。&lt;/p&gt;&#xA;&lt;h2 id=&#34;creating-depth--创建深度效果&#34;&gt;Creating Depth / 创建深度效果&lt;/h2&gt;&#xA;&lt;h3 id=&#34;emulate-a-light-source--模拟光源&#34;&gt;Emulate a light source / 模拟光源&lt;/h3&gt;&#xA;&lt;p&gt;Have you ever noticed how some elements in an interface feel like they’re raised off of the page, while others feel like they are inset into the background?&lt;/p&gt;&#xA;&lt;p&gt;你可曾留意，界面中的某些元素似乎从页面上突出，而另一些则似乎嵌入背景之中？&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/191.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Creating this effect might look complicated at first, but it actually only requires you to understand one fundamental rule.&lt;/p&gt;&#xA;&lt;p&gt;虽然这种效果起初看起来复杂，但其实只需掌握一个基本原则即可实现。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Light comes from above / 光线总是从上方来&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Take a look at the panelling on this door:&lt;/p&gt;&#xA;&lt;p&gt;观察这扇门上的嵌板图案：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/192.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Even though you’re just looking at a flat image, it’s still pretty obvious that the panels on the door are raised. Why is that?&lt;/p&gt;&#xA;&lt;p&gt;尽管你看到的只是一个平面图像，门上的嵌板看起来显然是突出的。这是为什么呢？&lt;/p&gt;&#xA;&lt;p&gt;Notice how the top edge of the panel is lighter? That’s because it’s angled towards the sky and receives more light. Similarly, the bottom edge is darker because it’s angled away from the sky, receiving &lt;em&gt;less&lt;/em&gt; light.&lt;/p&gt;&#xA;&lt;p&gt;注意看嵌板的上边缘更亮，这是因为它朝向天空，接收了更多的光线。相对应的，下边缘较暗，因为它朝向远离天空的方向，接收到的光线&lt;em&gt;较少&lt;/em&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/193.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The only way those edges could possibly be oriented that way is if the panel itself is raised, so that’s how our brains perceive it.&lt;/p&gt;&#xA;&lt;p&gt;这种边缘的明暗分布唯一合理的解释就是嵌板本身是突出的，这也是我们大脑的感知方式。&lt;/p&gt;&#xA;&lt;p&gt;Now take a look at the panelling on this cabinet:&lt;/p&gt;&#xA;&lt;p&gt;再来看这个橱柜上的嵌板：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/194.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;In this case it’s clear that the panels are &lt;em&gt;inset&lt;/em&gt; because there’s a shadow at the top indicating that the lip above is blocking the light, and the bottom edge is lighter, indicating that it’s angled upward.&lt;/p&gt;&#xA;&lt;p&gt;这个例子中很明显嵌板是&lt;em&gt;嵌入&lt;/em&gt;的，因为顶部有阴影，表明上方的边缘阻挡了光线，而下边缘较亮，表明它向上倾斜。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/195.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;To create this same sense of depth in your designs, all you need to do is mimic the way light affects things in the real world.&lt;/p&gt;&#xA;&lt;p&gt;要在你设计中营造类似的深度感，你只需模仿现实世界中光线如何影响物体。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Simulating light in a user interface / 在用户界面中模拟光线效果&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you want an element to appear raised or inset, first figure out what profile you want that element to have, then mimic how a light source would interact with that shape.&lt;/p&gt;&#xA;&lt;p&gt;如果你想让某个元素看起来是凸起或嵌入的，首先要确定你希望该元素呈现出怎样的轮廓，然后模拟光源与该形状的相互作用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Raised elements / 创建凸起效果&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;For example, say you had a button and you wanted it to feel raised off of the page, with perfectly flat edges on the top and bottom:&lt;/p&gt;&#xA;&lt;p&gt;想象你正在设计一个按钮，你希望它看起来像是从页面上凸起，拥有完全平坦的上下边缘。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/196.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Because the top and bottom edges are both flat, it would be impossible to see both of them at the same time. People generally look slightly downward towards their screens, so for the most natural look, reveal a little bit of the top edge and hide the bottom edge.&lt;/p&gt;&#xA;&lt;p&gt;因为顶部和底部边缘都是平的，不可能同时看到它们。且人们倾向于从上向下看屏幕，为了让按钮呈现出最自然的外观，应展示其上边缘的一部分，同时隐藏下边缘。&lt;/p&gt;&#xA;&lt;p&gt;Since the top edge is facing upward, make it slightly lighter than the face of the button, usually using a top border or an inset box shadow with a slight vertical offset:&lt;/p&gt;&#xA;&lt;p&gt;由于上边缘面向观察者，应使其颜色比按钮表面稍亮。这可以通过添加顶部边框或设置轻微垂直偏移的内嵌阴影来实现：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/197.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Choose the lighter color by hand instead of using a semi-transparent white for best results — simply overlaying white can suck the saturation out of the underlying color.&lt;/p&gt;&#xA;&lt;p&gt;选择亮色时，应手动挑选，避免使用半透明白色，因为这可能会降低底层颜色的饱和度。&lt;/p&gt;&#xA;&lt;p&gt;Next, you need to account for the fact that a raised element will block some of the light from reaching the area below the element.&lt;/p&gt;&#xA;&lt;p&gt;此外，凸起的元素会在其下方形成阴影，阻挡部分光线。&lt;/p&gt;&#xA;&lt;p&gt;Do this by adding a small dark box shadow with a slight vertical offset (&lt;em&gt;you only want the shadow to appear below the element&lt;/em&gt;):&lt;/p&gt;&#xA;&lt;p&gt;这可以通过在元素下方添加轻微垂直偏移的暗色盒阴影来模拟。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/198.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Don’t get carried away with the blur radius, a couple of pixels is plenty. These sorts of shadows should have pretty sharp edges — take a look at the shadow cast by the bottom of a wall outlet or window frame for a real-world example.&lt;/p&gt;&#xA;&lt;p&gt;阴影的模糊半径不宜过大，轻微模糊即可，边缘应保持清晰，以模拟现实世界中物体的阴影效果。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Inset elements / 创建嵌入效果&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Say you’re designing a “well” component that should feel like it’s recessed into the page.&lt;/p&gt;&#xA;&lt;p&gt;如果你正在设计一种应有嵌入感的「井」组件。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;译者注：井组件（Well Component）通常指的是一种设计元素，它用来创建一个视觉上的凹陷效果，使得内容看起来像是嵌入到页面中。这种设计可以用于吸引用户的注意力，或者在视觉上区分不同的内容区域。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/199.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Looking slightly downward, only the bottom lip would be visible. Since it’s facing towards the sky, give that edge a slightly lighter color using a bottom border or inset shadow with a negative vertical offset:&lt;/p&gt;&#xA;&lt;p&gt;当你的视线稍微向下倾斜时，只有井的底部边缘应该可见。由于这个边缘面向天空，你应该使用底部边框或垂直偏移为负的内嵌阴影，使其颜色稍微变亮：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/200.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The area above the well should block some of the light from reaching the very top of the well, so add a small dark inset box shadow with a slight positive vertical offset to make sure it doesn’t poke through at the bottom:&lt;/p&gt;&#xA;&lt;p&gt;井的上方会阻挡部分光线，防止它们直接照射到井的最顶部，因此，添加一个轻微正向垂直偏移的小暗色内嵌盒阴影，以确保光线不会在井的底部穿透出来：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/201.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This same treatment works for any element that may need to appear inset, for example text inputs and checkboxes:&lt;/p&gt;&#xA;&lt;p&gt;这种设计技巧同样适用于其他需要呈现嵌入效果的元素，比如文本输入框和复选框：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/202.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Don’t get carried away / 避免过度设计&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Once you understand how to simulate light in an interface, it can be tempting to tinker away for hours, tweaking and tweaking to see how closely you can mimic the real world.&lt;/p&gt;&#xA;&lt;p&gt;理解了如何在界面中模拟光线后，你可能会想要花费大量时间进行微调，以达到接近现实世界的逼真效果。&lt;/p&gt;&#xA;&lt;p&gt;While this can be a fun exercise, in practice it can lead to interfaces that are busy and unclear. Borrowing some visual cues from the real world is a great way to add a bit of depth, but there’s no need to try and make things look photo-realistic.&lt;/p&gt;&#xA;&lt;p&gt;虽然这可以作为一个有趣的练习，但在实际应用中，过度的调整可能会导致界面显得过于复杂和不清晰。从现实世界中借鉴一些视觉线索来增加深度是很好的，但无需追求完全的照相写实主义。&lt;/p&gt;&#xA;&lt;h3 id=&#34;use-shadows-to-convey-elevation--利用阴影表现层级高度&#34;&gt;Use shadows to convey elevation / 利用阴影表现层级高度&lt;/h3&gt;&#xA;&lt;p&gt;Shadows can be more than just a flashy effect — used thoughtfully, they let you position elements on a virtual z-axis to create a meaningful sense of depth.&lt;/p&gt;&#xA;&lt;p&gt;阴影不只是花哨的视觉效果，如果巧妙运用，它们能够在虚拟的 Z 轴上定位元素，创造出深度感。&lt;/p&gt;&#xA;&lt;p&gt;Small shadows with a tight blur radius make an element feel only slightly raised off of the background, while larger shadows with a higher blur radius make an element feel much closer to the user:&lt;/p&gt;&#xA;&lt;p&gt;小而模糊度低的阴影让元素看起来轻微凸起，而大且模糊度高的阴影则让元素感觉更靠近用户：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/203.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The closer something feels to the user, the more it will attract their focus.&lt;/p&gt;&#xA;&lt;p&gt;元素感觉越近，就越能吸引用户的焦点。&lt;/p&gt;&#xA;&lt;p&gt;You might use a smaller shadow for something like a button, where you want the user to notice it but don’t want it to dominate the page:&lt;/p&gt;&#xA;&lt;p&gt;对于按钮这样的元素，你可能会使用较小的阴影，以便用户注意到它，但又不会让它在页面上过于突出：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/204.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Medium shadows are useful for things like dropdowns; elements that need to sit a bit further above the rest of the UI:&lt;/p&gt;&#xA;&lt;p&gt;中等大小的阴影适用于如下拉菜单这样的元素，它们需要在界面中稍微突出一些：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/205.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Large shadows are great for modal dialogs, where you really want to capture the user’s attention:&lt;/p&gt;&#xA;&lt;p&gt;对于模态对话框这样的元素，大型阴影非常合适，因为它们能够显著吸引用户的注意力：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/206.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Establishing an elevation system / 建立层级高度体系&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Just like with color, typography, spacing, and sizing, defining a fixed set of shadows will speed up your workflow and help maintain consistency in your designs.&lt;/p&gt;&#xA;&lt;p&gt;与颜色、字体、间距和尺寸一样，设定一套固定的阴影选项规范体系可以加快设计流程，并保持设计的一致性。&lt;/p&gt;&#xA;&lt;p&gt;You don’t need a ton of different shadows — five options is usually plenty.&lt;/p&gt;&#xA;&lt;p&gt;你不需要太多不同的阴影，通常有五种已经足够。&lt;/p&gt;&#xA;&lt;p&gt;Start by defining your smallest shadow and your largest shadow, then fill in the middle with shadows that increase in size pretty linearly:&lt;/p&gt;&#xA;&lt;p&gt;首先确定你的最小和最大阴影效果，然后以近乎线性递增的方式填充中间的阴影选项：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/207.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Combining shadows with interaction / 结合阴影与用户交互&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Shadows aren’t only useful for positioning elements on the z-axis statically; they’re a great way to provide visual cues to the user as they interact with elements, too.&lt;/p&gt;&#xA;&lt;p&gt;阴影不仅有助于静态地在 Z 轴上定位元素，它们也是在用户与元素交互时提供视觉反馈的有效方式。&lt;/p&gt;&#xA;&lt;p&gt;For example, say you had a list of items where the user could click and drag each item to sort them. Adding a shadow to an item when a user clicks it makes it feel like it pops forward above the other items in the list, and makes it clear to the user that they can drag it:&lt;/p&gt;&#xA;&lt;p&gt;例如，在一个用户可以点击拖动排序的项目列表中，当用户点击某个项目时添加阴影，会让它看起来在列表中其他项目之上突出，清楚地表明用户可以拖动它：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/208.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Similarly, you can make a button feel like it’s being pressed into the page when a user clicks it by switching to a smaller shadow, or perhaps removing the shadow altogether:&lt;/p&gt;&#xA;&lt;p&gt;同样地，你可以通过在用户点击按钮时切换到更小的阴影或完全去除阴影，让按钮产生被按下的感觉：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/209.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Using shadows in a meaningful way like this is a great way to hack the process of choosing what sort of shadow an element should have. Don’t think about the shadow itself, think about where you want the element to sit on the z-axis and assign it a shadow accordingly.&lt;/p&gt;&#xA;&lt;p&gt;这样有意义的使用阴影是帮助决定元素应有何种阴影效果的一个好方法。不要只考虑阴影本身，而要考虑你希望元素在 Z 轴上的位置，并据此分配相应的阴影。&lt;/p&gt;&#xA;&lt;h3 id=&#34;shadows-can-have-two-parts--双重阴影效果&#34;&gt;Shadows can have two parts / 双重阴影效果&lt;/h3&gt;&#xA;&lt;p&gt;Ever inspected a really nice shadow on a site and noticed they were actually using two shadows?&lt;/p&gt;&#xA;&lt;p&gt;你是否曾仔细观察过网站上精致的阴影效果，发现它们实际上运用了两个阴影？&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/210.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;There’s a method to this madness, and it’s actually pretty simple and makes a lot of sense.&lt;/p&gt;&#xA;&lt;p&gt;这种设计并非随意尝试，而是有其特定目的和方法，简单而合理。&lt;/p&gt;&#xA;&lt;p&gt;When you see someone combining two shadows, they’re not just experimenting randomly until things look nice, they’re using each shadow to do a specific job.&lt;/p&gt;&#xA;&lt;p&gt;当设计师结合使用两个阴影时，他们这么做是出于特定的原因，每个阴影都承担着不同的角色。&lt;/p&gt;&#xA;&lt;p&gt;The first shadow is larger and softer, with a considerable vertical offset and large blur radius. It simulates the shadow cast behind an object by a direct light source.&lt;/p&gt;&#xA;&lt;p&gt;第一个阴影尺寸较大且边缘柔和，具有较大的垂直偏移和模糊半径，用以模拟物体背后的直射光产生的阴影。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/211.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The second shadow is tighter and darker, with less of a vertical offset and a smaller blur radius. It simulates the shadowed area underneath an object where even ambient light has a hard time reaching.&lt;/p&gt;&#xA;&lt;p&gt;第二个阴影更紧凑且颜色更深，垂直偏移较小，模糊度也较低，它模拟的是物体下方由于环境光难以照射到而形成的暗区。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/212.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Using two shadows like this gives you a lot more control than you’d get with a single shadow — you can keep the larger shadow nice and subtle while still making the shadow closer the element’s edges nice and defined.&lt;/p&gt;&#xA;&lt;p&gt;通过这种方式使用双重阴影，你可以获得比单一阴影更精细的控制力 —— 你可以让较大的阴影保持细腻和低调，同时让靠近元素边缘的阴影清晰可辨。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/213.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Accounting for elevation / 反映高度变化&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;As an object gets further away from a surface, the small, dark shadow created by a lack of ambient light slowly disappears (&lt;em&gt;go ahead, try it out with something on your desk&lt;/em&gt;).&lt;/p&gt;&#xA;&lt;p&gt;当物体距离表面越远时，由于缺少环境光而形成的小而暗的阴影会逐渐消失（&lt;em&gt;你可以用桌子上的任何物品来验证这一点&lt;/em&gt;）。&lt;/p&gt;&#xA;&lt;p&gt;So if you’re going to use this two-shadow technique in your own projects, make sure you make that shadow more subtle for shadows that represent a higher elevation.&lt;/p&gt;&#xA;&lt;p&gt;因此，如果你打算在自己的设计项目中采用双重阴影技术，确保对于表示较高高度的阴影这部分更加微妙。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/214.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It should be quite distinct for your lowest elevation, and almost (&lt;em&gt;or completely&lt;/em&gt;) invisible at your highest elevation.&lt;/p&gt;&#xA;&lt;p&gt;对于最低的高度，阴影应该非常明显；而在最高的高度，阴影则几乎（&lt;em&gt;或完全&lt;/em&gt;）不可察觉。&lt;/p&gt;&#xA;&lt;h3 id=&#34;even-flat-designs-can-have-depth--扁平设计也能表现深度&#34;&gt;Even flat designs can have depth / 扁平设计也能表现深度&lt;/h3&gt;&#xA;&lt;p&gt;When most people talk about “flat design”, they mean designing without shadows, gradients, or any other effects that try to mimic how light interacts with things in the real-world.&lt;/p&gt;&#xA;&lt;p&gt;通常当人们提到「扁平设计」，他们指的是避免使用阴影、渐变或任何模仿现实世界中光效的设计元素。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/215.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;But the most effective flat designs still convey depth, they just do it in a different way.&lt;/p&gt;&#xA;&lt;p&gt;然而，即使是最有效的扁平设计风格，也能通过不同的方式表现出深度感。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Creating depth with color / 通过颜色创造深度&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;In general (especially with shades of the same color), lighter objects feel closer to us and darker objects feel further away.&lt;/p&gt;&#xA;&lt;p&gt;一般而言（尤其是对于同一色系的不同色调），较浅的物体看起来更接近我们，而较深的物体则看起来更远。&lt;/p&gt;&#xA;&lt;p&gt;Make an element lighter than the background color to make it feel like it’s raised off of the page, or darker than the background color if you want it to feel inset like a well:&lt;/p&gt;&#xA;&lt;p&gt;如果你想让某个元素看起来像是从页面上凸起，就让它的颜色比背景色更浅；如果你想让它看起来像是嵌入页面的井一样，就让它的颜色比背景色更深：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/216.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This is just as applicable to non-flat designs, too — color is just another tool in your toolbelt for conveying distance.&lt;/p&gt;&#xA;&lt;p&gt;这种颜色运用技巧同样适用于非扁平设计 —— 它为你的设计工具箱增添了一种表达远近感的新工具。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Using solid shadows / 使用实心阴影&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Another way to communicate depth in a flat design is to use short, vertically offset shadows with no blur radius at all.&lt;/p&gt;&#xA;&lt;p&gt;在扁平设计中传达深度的另一种方法是使用短小、垂直偏移且不带有模糊效果的实心阴影。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/217.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It’s a great way to make a card or button stand off the page a little bit without sacrificing that flat aesthetic.&lt;/p&gt;&#xA;&lt;p&gt;这种方法非常适合让卡片或按钮在不破坏扁平化外观的前提下，略微突出于页面之上。&lt;/p&gt;&#xA;&lt;h3 id=&#34;overlap-elements-to-create-layers--元素重叠以营造层次感&#34;&gt;Overlap elements to create layers / 元素重叠以营造层次感&lt;/h3&gt;&#xA;&lt;p&gt;One of the most effective ways to create depth is to overlap different elements to make it feel like a design has multiple layers.&lt;/p&gt;&#xA;&lt;p&gt;营造层次感的一个有效方法是通过元素的重叠，使人感觉设计作品具有多重层次。&lt;/p&gt;&#xA;&lt;p&gt;For example, instead of containing a card entirely within another element, offset it so it crosses the transition between two different backgrounds:&lt;/p&gt;&#xA;&lt;p&gt;例如，你可以让一个卡片部分地超出另一个元素的边界，而不是完全被包含其中，以此跨越不同背景之间的界限：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/218.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You could also make an element taller than its parent, so it overlaps on both sides:&lt;/p&gt;&#xA;&lt;p&gt;你也可以让子元素的高度超过其父元素，使其在两侧产生重叠效果：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/219.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Overlapping elements can add depth to smaller components too, for example the controls on this carousel:&lt;/p&gt;&#xA;&lt;p&gt;这种重叠技巧同样可以为较小的组件增添深度，如轮播图上的切换控件。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/220.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Overlapping images / 图像的重叠使用&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;This technique can work great with images as well, but without special consideration it’s easy for overlapping images to clash.&lt;/p&gt;&#xA;&lt;p&gt;图像重叠的技巧同样有效，但如果不加考虑，不同图像之间容易发生视觉冲突。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/221.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A simple trick for avoiding this is to give the images an “invisible border” — one that matches the background color — so there’s always a bit of a gap between images:&lt;/p&gt;&#xA;&lt;p&gt;为了避免这种冲突，可以为图像添加一个与背景颜色相匹配的「隐形边框」，确保图像之间始终保持一定的间隔：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/222.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You’ll still create the appearance of layers but with none of the ugly clashing.&lt;/p&gt;&#xA;&lt;p&gt;这样，既能保持层次分明的视觉效果，又能避免图像间不协调的冲突。&lt;/p&gt;&#xA;&lt;h2 id=&#34;working-with-images--图像处理&#34;&gt;Working with Images / 图像处理&lt;/h2&gt;&#xA;&lt;h3 id=&#34;use-good-photos--使用优质图片&#34;&gt;Use good photos / 使用优质图片&lt;/h3&gt;&#xA;&lt;p&gt;Bad photos will ruin a design, even if everything else about it looks great.&lt;/p&gt;&#xA;&lt;p&gt;质量不佳的照片会破坏设计的整体效果，即使设计的其他部分看起来很出色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/223.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If your design needs photography and you’re not a talented photographer, you’ve got two options:&lt;/p&gt;&#xA;&lt;p&gt;如果你的设计项目需要摄影作品，而你并非专业的摄影师，你可以选择以下两种解决方案：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Hire a professional photographer. / 聘请专业摄影师。&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;If you need very specific photos for your project, entrust a professional. Taking great photos isn’t just about using an expensive camera, it’s about lighting, composition, color — skills that take years to develop.&lt;/p&gt;&#xA;&lt;p&gt;如果你需要特定的照片，最好委托给专业摄影师。拍摄出色的照片不仅需要昂贵的摄影设备，更需要对光线、构图和色彩的掌握，这些技巧需要多年经验才能培养。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Use high quality stock photography. / 使用高质量的图库照片。&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;If your needs are more generic, there are tons of great resources out there where you can purchase great stock photos. There are even sites like Unsplash that offer beautiful photography for free.&lt;/p&gt;&#xA;&lt;p&gt;如果你需要的照片类型较为常见，你可以在许多在线资源中购买到优秀的图库照片。还有一些网站，比如 Unsplash，提供免费的精美照片。&lt;/p&gt;&#xA;&lt;p&gt;Whatever you do, don’t design using placeholder images and expect to be able to take some photos with your smartphone and swap them in later. It never works.&lt;/p&gt;&#xA;&lt;p&gt;重要的是，不要在设计中使用临时占位图，并期望将来能用智能手机拍摄的照片替换它们。这种做法通常不会得到理想的效果。&lt;/p&gt;&#xA;&lt;h3 id=&#34;text-needs-consistent-contrast--确保文本具有一致的对比度&#34;&gt;Text needs consistent contrast / 确保文本具有一致的对比度&lt;/h3&gt;&#xA;&lt;p&gt;Ever tried to slap a headline on a big hero image, only to find that no matter what color you tried for the text, it was still hard to read?&lt;/p&gt;&#xA;&lt;p&gt;你是否曾在一张大型宣传图上放置标题，却发现无论如何调整文本颜色，阅读起来都很困难？&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/224.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;That’s because the problem isn’t the text, it’s the image.&lt;/p&gt;&#xA;&lt;p&gt;问题不在于文本本身，而在于背景图片。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;The problem with background images / 背景图片的问题&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Photos can be very dynamic, with a lot of really light areas, and a lot of really dark areas. White text might look great in the dark areas, but it gets lost in the light areas. Dark text looks great in the light areas, but gets lost in the dark areas.&lt;/p&gt;&#xA;&lt;p&gt;照片可能包含许多明暗对比强烈的区域，这会导致白色文本在暗处显眼，在亮处却难以辨认；同样，深色文本在亮处清晰，在暗处则消失。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/225.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;To solve this problem, you need to reduce the dynamics in the image to make the contrast between the text and the background more consistent.&lt;/p&gt;&#xA;&lt;p&gt;要解决这个问题，你需要降低图片的明暗对比，使文本与背景之间的对比度更加均匀。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Add an overlay / 添加半透明覆盖层&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;One way to increase the overall text contrast is to add a semi-transparent overlay to the background image.&lt;/p&gt;&#xA;&lt;p&gt;提高文本对比度的一个方法是在背景图片上增加一个半透明的覆盖层。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/226.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A black overlay will tone down the light areas and help light text stand out, while a white overlay will brighten up the dark areas and help dark text stand out.&lt;/p&gt;&#xA;&lt;p&gt;使用黑色覆盖层可以降低亮处的亮度，使浅色文本更加突出；而白色覆盖层则能提亮暗处，让深色文本更加明显。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Lower the image contrast / 调整图片的对比度&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;One of the compromises you make when using an overlay is that you’re lightening or darkening the whole image, not just the problem areas.&lt;/p&gt;&#xA;&lt;p&gt;使用覆盖层意味着你对整个图片进行了亮度或暗度的调整，而不仅仅是问题区域。&lt;/p&gt;&#xA;&lt;p&gt;If you want more control, another solution is to lower the contrast of the image itself:&lt;/p&gt;&#xA;&lt;p&gt;如果你需要更精细的控制，另一种方法是直接降低图片本身的对比度：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/227.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Lowering the contrast will change how light or dark the image feels overall, so make sure to adjust the brightness to compensate.&lt;/p&gt;&#xA;&lt;p&gt;调整时要注意整体亮度，以保证图片的视觉效果。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Colorize the image / 给图片着色&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Another way to help text stand out against an image is to colorize the image with a single color.&lt;/p&gt;&#xA;&lt;p&gt;另一种使文本在图片背景中更加突出的方法是给图片应用单一颜色。&lt;/p&gt;&#xA;&lt;p&gt;Some photo editing software includes this as a first-class feature, but if yours doesn’t, you can create this effect in three steps:&lt;/p&gt;&#xA;&lt;p&gt;一些图像编辑软件提供了这一功能，如果你的软件没有，可以通过以下三个步骤实现：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Lower the image contrast&lt;/strong&gt;, to balance things out a bit.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Desaturate the image&lt;/strong&gt;, to remove any existing color.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Add a solid fill&lt;/strong&gt;, using the “multiply” blend mode.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;降低图片的对比度&lt;/strong&gt;，以平衡整体效果。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;去除图片的饱和度&lt;/strong&gt;，消除原有颜色。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;添加纯色填充层&lt;/strong&gt;，使用「正片叠底」混合模式。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/228.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This can also be a great way to make a background image pair more nicely with your existing brand colors.&lt;/p&gt;&#xA;&lt;p&gt;这也能有效地使背景图片与你的品牌形象色彩更协调。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Add a text shadow / 给文本添加阴影&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you want to preserve a bit more of the dynamics in a background image, a text shadow can be a great way to increase contrast only where you need it most.&lt;/p&gt;&#xA;&lt;p&gt;如果你希望保留背景图片的一些细节和动态效果，文本阴影可以针对性地增加对比度。&lt;/p&gt;&#xA;&lt;p&gt;You want it to look more like a subtle glow than an actual shadow, so use a large blur radius and don’t add any kind of offset.&lt;/p&gt;&#xA;&lt;p&gt;阴影应该看起来更像一个柔和的光晕而非传统阴影，因此使用较大的模糊半径，不要设置偏移。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/229.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It’s still a good idea to reduce the overall image contrast, but combining that with a text shadow means you can reduce it a little less.&lt;/p&gt;&#xA;&lt;p&gt;尽管如此，降低图片的整体对比度仍然是一个好方法，结合文本阴影，你可以减少对比度的调整幅度。&lt;/p&gt;&#xA;&lt;h3 id=&#34;everything-has-an-intended-size--每个元素都有其理想尺寸&#34;&gt;Everything has an intended size / 每个元素都有其理想尺寸&lt;/h3&gt;&#xA;&lt;p&gt;Everyone knows that scaling bitmap images to larger than their original size is a bad idea — they immediately feel “fuzzy” and lose their definition.&lt;/p&gt;&#xA;&lt;p&gt;众所周知，将位图图像放大超过原始尺寸会导致图像立刻变得「模糊」，丧失清晰度。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/230.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;But that’s not the only way you can go wrong with scaling, even when you think you’re playing it safe.&lt;/p&gt;&#xA;&lt;p&gt;但这并不是缩放图片时可能出错的唯一方式，即便你以为自己在谨慎操作。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Don’t scale up icons / 避免放大图标&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re designing something that could use some large icons (like maybe the “features” section of a landing page), you might instinctively grab your favorite SVG icon set and bump up the size until they fit your needs.&lt;/p&gt;&#xA;&lt;p&gt;如果你在设计某些需要较大图标的元素（例如，着陆页的「功能」部分），你可能会本能地选择你最喜欢的 SVG 图标集，并调整它们的大小以适应你的设计需求。&lt;/p&gt;&#xA;&lt;p&gt;They’re vector images after all, so the quality isn’t going to suffer if you increase the size, right?&lt;/p&gt;&#xA;&lt;p&gt;毕竟，作为矢量图形，增大尺寸并不会损失图像质量，对吗？&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/231.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;While it’s true that vector images won’t degrade in quality when you increase their size, icons that were drawn at 16–24px are never going to look very professional when you blow them up to 3x or 4x their intended size. They lack detail, and always feel disproportionately “chunky”.&lt;/p&gt;&#xA;&lt;p&gt;虽然矢量图像在尺寸放大时确实不会降低质量，但原本为 16~24px 设计的图标，如果放大到它们预定大小的三倍或四倍，看起来并不专业。它们缺乏细节，总是显得过于「粗糙」。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/232.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If small icons are all you’ve got, try enclosing them inside another shape and giving the shape a background color:&lt;/p&gt;&#xA;&lt;p&gt;如果你手头只有小图标，尝试将它们放置在一个有背景颜色的较大形状中：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/233.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This lets you keep the actual icon closer to its intended size, while still filling the larger space.&lt;/p&gt;&#xA;&lt;p&gt;这样可以让图标保持在其理想尺寸，同时仍然填满更大的空间。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/234.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Don’t scale down screenshots / 避免缩小屏幕截图&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Say you want to include a screenshot of your app on that same features page.&lt;/p&gt;&#xA;&lt;p&gt;假设你想要在同一功能页面上展示你的应用屏幕截图。&lt;/p&gt;&#xA;&lt;p&gt;If you take a full-size screenshot and shrink it by 70% to make it fit, you’ll end up with an image that’s trying to cram way too much detail into far too little space.&lt;/p&gt;&#xA;&lt;p&gt;如果你截取了一个全尺寸屏幕截图，并将其缩小 70% 以适应页面，最终的图像将过于拥挤，细节过多。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/235.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The 16px font in your app becomes a 4px font in your screenshot, and visitors will be squinting with their eyeballs two inches from the screen, struggling to make out what all that text says.&lt;/p&gt;&#xA;&lt;p&gt;应用中的 16px 字体在屏幕截图中可能缩小到 4px，导致访客不得不近距离盯着屏幕，努力辨认文字内容。&lt;/p&gt;&#xA;&lt;p&gt;If you want to include a detailed screenshot in your design, take the screenshot at a smaller screen size (like maybe your tablet layout) and save a lot of space for it so you don’t have to shrink it as much:&lt;/p&gt;&#xA;&lt;p&gt;如果你想在设计中包含详细的屏幕截图，应该在较小的屏幕尺寸（如平板布局）下进行截图，并为其预留足够的空间，以减少缩小的程度：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/236.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Or consider taking just a partial screenshot, so you can display it in less space without needing to scale it down:&lt;/p&gt;&#xA;&lt;p&gt;或者考虑仅截取部分屏幕，这样你可以在不缩小的情况下展示它：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/237.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you really need to fit a whole-app screenshot in a tight space, try drawing a simplified version of the UI with details removed and small text replaced with simple lines:&lt;/p&gt;&#xA;&lt;p&gt;如果你需要在有限的空间内展示整个应用的屏幕截图，尝试绘制一个简化版本的 UI，省略细节，并将小文字替换为简单的线条：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/238.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It’ll still communicate the big-picture design without tempting visitors to try and make out all of the details.&lt;/p&gt;&#xA;&lt;p&gt;这样既能传达设计概念，又不会吸引访客去辨认所有细节。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Don’t scale down icons, either / 避免缩小图标&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Just as icons drawn to be used at 16px look chunky when you scale them up, icons intended to be used at larger sizes look choppy and fuzzy when you scale them down.&lt;/p&gt;&#xA;&lt;p&gt;正如为 16px 设计的图标在放大时显得粗糙一样，为较大尺寸设计的图标在缩小时也会显得破碎和模糊。&lt;/p&gt;&#xA;&lt;p&gt;The most extreme example of this are favicons, those little icons you see next to the page title in a browser tab.&lt;/p&gt;&#xA;&lt;p&gt;最典型的例子是 favicon（浏览器标签页中的小图标）。&lt;/p&gt;&#xA;&lt;p&gt;If you try to shrink a logo drawn at 128px down to favicon size, it all turns to mush as the browser tries its best to render all of that detail in a tiny 16px square:&lt;/p&gt;&#xA;&lt;p&gt;如果你试图将 128px 的 logo 缩小到 favicon 的大小，浏览器在尝试在 16px 的正方形中渲染所有细节时，图像会变得模糊不清：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/239.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A better approach is to redraw a super simplified version of the logo at the target size, so you control the compromises instead of leaving it up to the browser:&lt;/p&gt;&#xA;&lt;p&gt;更好的方法是在目标尺寸下重新绘制一个极度简化的 logo 版本，这样你就可以控制设计中的妥协，而不是让浏览器自动处理。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/240.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;beware-user-uploaded-content--注意用户上传的内容&#34;&gt;Beware user-uploaded content / 注意用户上传的内容&lt;/h3&gt;&#xA;&lt;p&gt;When you’re depending on user-uploaded images, you don’t have the luxury of fine-tuning contrast, carefully adjusting colors, or cropping the perfect frame.&lt;/p&gt;&#xA;&lt;p&gt;在使用用户上传的图片时，你无法像处理自己精心挑选的图片那样，对它们进行细致的对比度调整、颜色校正或构图裁剪。&lt;/p&gt;&#xA;&lt;p&gt;While you’ll always be at your users’ mercy to some extent, there are a few things you can do to make sure their content doesn’t completely undermine your design.&lt;/p&gt;&#xA;&lt;p&gt;虽然你的设计在一定程度上不得不依赖用户上传的内容，但你可以通过一些方法来确保这些内容不会彻底破坏你的设计布局。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Control the shape and size / 控制形状和尺寸&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Displaying user-uploaded images at their intrinsic aspect ratio can really throw off a layout, especially if there are a lot of images on the screen at once.&lt;/p&gt;&#xA;&lt;p&gt;用户上传的图片如果按照其原始的宽高比例显示，可能会破坏页面布局的一致性，尤其是当屏幕上出现大量图片时。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/241.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Instead of letting users wreak havoc on your page structure, center their images inside fixed containers, cropping out anything that doesn’t fit.&lt;/p&gt;&#xA;&lt;p&gt;为了避免用户图片影响页面结构，应将图片居中放置在固定大小的容器内，并裁剪掉超出容器部分的图片。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/242.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This is really easy to do with CSS these days by making the image a background image, and setting the &lt;code&gt;background-size&lt;/code&gt; property to &lt;code&gt;cover&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;使用 CSS 可以轻松实现这一点，将图片设置为背景图片，并使用 &lt;code&gt;background-size: cover;&lt;/code&gt; 属性确保图片覆盖整个容器，同时保持宽高比例。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/243.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Prevent background bleed / 避免背景色混淆&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;When a user provides an image with a background color that’s similar to the background in your UI, the image and the background can bleed together, causing the image to lose its shape.&lt;/p&gt;&#xA;&lt;p&gt;如果用户上传的图片背景颜色与你的UI背景颜色相近，图片和背景可能会融为一体，导致图片轮廓模糊不清。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/244.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Instead of trying to solve this with a border, try using a subtle inner box shadow:&lt;/p&gt;&#xA;&lt;p&gt;解决这个问题，不要依赖边框，而是尝试添加一个微妙的内阴影给图片：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/245.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Borders will often clash with the colors in the image, while most people will barely even realize the shadow is there.&lt;/p&gt;&#xA;&lt;p&gt;直接使用边框可能会与图片中的颜色发生冲突，而阴影效果则更为隐蔽，大多数用户几乎不会注意到它的存在。&lt;/p&gt;&#xA;&lt;p&gt;If you don’t like the slight “inset” look you get from using a box shadow, a semi-transparent inner border works great, too.&lt;/p&gt;&#xA;&lt;p&gt;如果你不喜欢内阴影带来的轻微「凹陷」效果，也可以尝试使用半透明的内边框，这同样可以很好地区分图片和背景。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/246.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;finishing-touches--完善设计&#34;&gt;Finishing Touches / 完善设计&lt;/h2&gt;&#xA;&lt;h3 id=&#34;supercharge-the-defaults--强化现有元素&#34;&gt;Supercharge the defaults / 强化现有元素&lt;/h3&gt;&#xA;&lt;p&gt;You don’t always have to add new elements to a design to add flare — there are a lot of ways to liven up a page by “supercharging” what’s already there.&lt;/p&gt;&#xA;&lt;p&gt;你不必总是在设计中引入全新元素来增加吸引力 —— 通过「强化」现有元素，你可以用许多方法让页面焕发活力。&lt;/p&gt;&#xA;&lt;p&gt;For example, if your design includes a bulleted list, try replacing the bullets with icons:&lt;/p&gt;&#xA;&lt;p&gt;比如，如果你的设计中包含一个带有项目符号的列表，你可以尝试用图标来替换这些项目符号：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/247.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Checkmarks and arrows are great generic choices for a lot of situations, but you can also use something more specific to your content, like a padlock icon for a list of security-related features:&lt;/p&gt;&#xA;&lt;p&gt;勾号和箭头在许多情况下是很好的通用图标，但你也可以用更具体地与你内容相关的图标，例如，对于安全特性列表，你可以使用一个挂锁图标：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/248.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Similarly, if you’re working on a testimonial try “promoting” the quotes into visual elements by increasing the size and changing the color:&lt;/p&gt;&#xA;&lt;p&gt;同样，如果你在设计一个客户推荐语，试着通过增大字号和改变颜色，将引用的文字「提升」为视觉元素：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/249.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Links are another great candidate for special styling. You can do something as simple as changing the color and font weight, or something as fancy as a thick and colorful custom underline that partially overlaps the text:&lt;/p&gt;&#xA;&lt;p&gt;链接是另一个适合进行特别设计的元素。你可以简单地改变颜色和字体粗细，或者做一些更精致的设计，比如添加一个粗大且颜色丰富的自定义下划线，让它部分重叠在文本上：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/250.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re working on a form, using custom checkboxes and radio buttons is an easy way to add some color to the design:&lt;/p&gt;&#xA;&lt;p&gt;如果你在设计一个表单，使用自定义的复选框和单选按钮是为设计添加色彩的简单方法：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/251.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Just using one of your brand colors for the selected states instead of the browser defaults is often enough to take something from feeling boring to feeling polished and well-designed.&lt;/p&gt;&#xA;&lt;p&gt;仅使用你的品牌色彩之一来表示选中状态，而不是使用浏览器的默认颜色，通常就足以将一个元素从单调转变为精致且设计精良。&lt;/p&gt;&#xA;&lt;h3 id=&#34;add-color-with-accent-borders--添加彩色强调边框&#34;&gt;Add color with accent borders / 添加彩色强调边框&lt;/h3&gt;&#xA;&lt;p&gt;If you’re not a graphic designer, how do you add that dash of visual flair to your UI that other designs get from beautiful photography or colorful illustrations?&lt;/p&gt;&#xA;&lt;p&gt;如果你不是专业平面设计师，如何为你的用户界面添加那些通常需要精美摄影或多彩插图才能实现的视觉吸引力呢？&lt;/p&gt;&#xA;&lt;p&gt;One simple trick that can make a big difference is to add colorful accent borders to parts of your interface that would otherwise feel a bit bland.&lt;/p&gt;&#xA;&lt;p&gt;一个简单却效果显著的方法是在界面中那些可能显得过于平淡的部分添加彩色的强调边框。&lt;/p&gt;&#xA;&lt;p&gt;For example, across the top of a card:&lt;/p&gt;&#xA;&lt;p&gt;比如，在卡片的顶部添加一条彩色边框：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/252.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;or to highlight active navigation items:&lt;/p&gt;&#xA;&lt;p&gt;或者用它来突出当前激活的导航项：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/253.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;or along the side of an alert message:&lt;/p&gt;&#xA;&lt;p&gt;或者在警告信息的一侧加上边框：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/254.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;or as a short accent underneath a headline:&lt;/p&gt;&#xA;&lt;p&gt;或者在标题下方作为简短的强调色条：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/255.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;or even across the top of your entire layout:&lt;/p&gt;&#xA;&lt;p&gt;甚至可以在整个布局的顶部横贯一条彩色边框：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/256.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It doesn’t take any graphic design talent to add a colored rectangle to your UI, and it can go a long way towards making something feel more “designed.”&lt;/p&gt;&#xA;&lt;p&gt;添加一个彩色矩形到你的 UI 中并不需要专业的图形设计技能，但它可以极大地提升设计的整体感觉，让作品看起来更具「设计感」。&lt;/p&gt;&#xA;&lt;h3 id=&#34;decorate-your-backgrounds--装饰背景&#34;&gt;Decorate your backgrounds / 装饰背景&lt;/h3&gt;&#xA;&lt;p&gt;Even if you do a great job with hierarchy, spacing, and typography, sometimes a design will still feel a little bit plain.&lt;/p&gt;&#xA;&lt;p&gt;即便你在层级划分、间距设置和字体选择上都做得很好，有时你的设计看起来可能仍然有些单调。&lt;/p&gt;&#xA;&lt;p&gt;A great way to break up some of the monotony without drastically altering the design is to add some excitement to a few of your backgrounds.&lt;/p&gt;&#xA;&lt;p&gt;一个在不大幅改变现有设计的前提下，增加设计多样性的好方法是对背景进行一些创意调整。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Change the background color / 改变背景颜色&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;One way to add some excitement to a background is to simply change the color.&lt;/p&gt;&#xA;&lt;p&gt;为背景增添活力的一个简单方法是改变其颜色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/257.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This works great for emphasizing an individual panel, as well as for adding some distinction between entire page sections.&lt;/p&gt;&#xA;&lt;p&gt;这不仅有助于突出显示单独的面板，还能在页面的不同部分之间创造出明显的区分。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/258.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;For a more energetic look, you could even use a slight gradient:&lt;/p&gt;&#xA;&lt;p&gt;若要营造更加生动的外观，你甚至可以尝试使用轻微的渐变效果：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/259.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;For best results, use two hues that are no more than about 30° apart.&lt;/p&gt;&#xA;&lt;p&gt;为了达到最佳视觉效果，建议选择色相之间相隔不超过 30° 的两种颜色。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Use a repeating pattern / 使用重复性图案&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Another approach is to add a subtle repeatable pattern, like this one from Hero Patterns:&lt;/p&gt;&#xA;&lt;p&gt;另一种增加背景趣味性的方法是添加一个微妙的重复性图案，比如来自 Hero Patterns 的这个例子：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/260.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You don’t have to necessarily repeat it across the entire background, either — a pattern designed to repeat along a single edge can look great, too.&lt;/p&gt;&#xA;&lt;p&gt;你不必让图案在整个背景上重复 —— 设计一个仅沿着单一边沿重复的图案同样可以看起来很好。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/261.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Keep the contrast between the background and the pattern pretty low to ensure readability.&lt;/p&gt;&#xA;&lt;p&gt;确保背景与图案之间的对比度保持较低，以保证文字的可读性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Add a simple shape or illustration / 添加简单图形或插图&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Instead of decorating an entire background, you can also try including an individual graphic or two in specific positions.&lt;/p&gt;&#xA;&lt;p&gt;除了装饰整个背景，你还可以考虑在特定位置放置一些单独的图形或插图。&lt;/p&gt;&#xA;&lt;p&gt;Simple geometric shapes work well for this:&lt;/p&gt;&#xA;&lt;p&gt;简单的几何形状非常适合这种用途：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/262.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;as do small chunks of a repeatable pattern:&lt;/p&gt;&#xA;&lt;p&gt;同样，使用可重复图案的一小部分也是不错的选择：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/263.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You can even do something more complex, like a simplified world map:&lt;/p&gt;&#xA;&lt;p&gt;你甚至可以尝试一些更复杂的设计，比如一个简化版的世界地图：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/264.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Just like with a full background pattern, it’s best to keep the contrast low so nothing interferes with the content.&lt;/p&gt;&#xA;&lt;p&gt;与完整的背景图案一样，最好是保持低对比度，以免影响内容的呈现。&lt;/p&gt;&#xA;&lt;h3 id=&#34;dont-overlook-empty-states--重视初始状态设计&#34;&gt;Don’t overlook empty states / 重视初始状态设计&lt;/h3&gt;&#xA;&lt;p&gt;Imagine you’re designing a new feature for an app you’re working on.&lt;/p&gt;&#xA;&lt;p&gt;设想你正在为一款应用开发一个新功能。&lt;/p&gt;&#xA;&lt;p&gt;You’ve spent a ton of time crafting the perfect realistic sample data, picking out usernames and avatars, and putting together a beautiful and electrifying screen.&lt;/p&gt;&#xA;&lt;p&gt;你投入了大量时间来制作逼真的样本数据，挑选合适的用户名和头像，并设计了一个既美观又激动人心的界面。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/265.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You code it all up and deploy it to production. But when an excited user clicks the new item in the nav, they see this:&lt;/p&gt;&#xA;&lt;p&gt;你完成了编码并将其部署上线。但当用户满怀期待地点击导航栏中的新功能时，他们看到了一片空白：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/266.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re designing something that depends on user-generated content, the empty state should be a priority, not an afterthought.&lt;/p&gt;&#xA;&lt;p&gt;如果你正在设计的功能需要用户自己生成内容，那么初始状态的设计应该是一个重点，而不是事后才考虑的问题。&lt;/p&gt;&#xA;&lt;p&gt;Try incorporating an image or illustration to grab the user’s attention, and emphasizing the call-to-action to encourage them to take the next step:&lt;/p&gt;&#xA;&lt;p&gt;试着加入一些图像或插图来吸引用户的注意，并强调行动号召，以激励他们采取下一步行动：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/267.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re working on something that has a bunch of supporting UI like tabs or filters, consider hiding that stuff entirely. There’s no point in presenting a bunch of actions that don’t do anything until the user has created some content.&lt;/p&gt;&#xA;&lt;p&gt;如果你正在设计的功能包含许多辅助性用户界面元素，如标签或过滤器，考虑在用户尚未创建任何内容之前完全隐藏这些元素。在用户开始创建内容之前，展示这些暂时无法执行的操作是没有意义的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/268.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Empty states are a user’s first interaction with a new product or feature. Use them as an opportunity to be interesting and exciting — don’t settle for plain and boring.&lt;/p&gt;&#xA;&lt;p&gt;初始状态往往是用户与新产品或功能的第一次接触。利用这个机会让用户体验变得有趣和激动人心 —— 不要满足于平庸和乏味的设计。&lt;/p&gt;&#xA;&lt;h3 id=&#34;use-fewer-borders--减少边框的使用&#34;&gt;Use fewer borders / 减少边框的使用&lt;/h3&gt;&#xA;&lt;p&gt;When you need to create separation between two elements, try to resist immediately reaching for a border.&lt;/p&gt;&#xA;&lt;p&gt;在两个元素之间需要分隔时，应避免立即采用边框的方式。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/269.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;While borders are a great way to distinguish two elements from one another, they aren’t the only way, and using too many of them can make your design feel busy and cluttered.&lt;/p&gt;&#xA;&lt;p&gt;边框虽然能有效区分元素，但过度使用会使得设计显得过于复杂和混乱。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Use a box shadow / 采用盒阴影&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Box shadows do a great job of outlining an element like a border would, but can be more subtle and accomplish the same goal without being as distracting.&lt;/p&gt;&#xA;&lt;p&gt;盒阴影能够像边框一样为元素提供清晰的轮廓，同时更为细腻，不会分散用户的注意力。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/270.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This approach works best when the element you are applying the box shadow to is not the same color as the background.&lt;/p&gt;&#xA;&lt;p&gt;这种方法在元素颜色与背景颜色不一致时效果最佳。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Use two different background colors / 使用不同的背景颜色&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Giving adjacent elements slightly different background colors is usually all you need to create distinction between them.&lt;/p&gt;&#xA;&lt;p&gt;为相邻元素设置略有差异的背景颜色，通常足以区分它们。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/271.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you’re already using different background colors in addition to a border, try removing the border; you might not need it.&lt;/p&gt;&#xA;&lt;p&gt;如果你已经通过背景颜色和边框来区分元素，可以尝试去掉边框，看看是否仍然能够达到区分的效果。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Add extra spacing / 增加间距&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;What better way to create separation between elements than to simply increase the separation?&lt;/p&gt;&#xA;&lt;p&gt;在元素之间增加间距是创建分隔的直接方法。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/272.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Spacing things further apart is a great way to create distinction between groups of elements without introducing any new UI at all.&lt;/p&gt;&#xA;&lt;p&gt;通过增加元素间的空间，你可以在不增加额外界面元素的情况下，清晰地区分不同的元素组。&lt;/p&gt;&#xA;&lt;h3 id=&#34;think-outside-the-box--打破常规&#34;&gt;Think outside the box / 打破常规&lt;/h3&gt;&#xA;&lt;p&gt;Most people have a lot of preconceived notions about how certain components are supposed to look. But just because we’ve been conditioned to believe that there’s only one way to design a particular component, doesn’t mean it’s true.&lt;/p&gt;&#xA;&lt;p&gt;大多数人对于某些组件的外观有很多先入为主的想法。但仅仅因为我们习惯于相信只有一种方法来设计特定组件，并不意味着这是真的。&lt;/p&gt;&#xA;&lt;p&gt;For example, picture a dropdown menu. You’re probably picturing a white box with a bit of a drop shadow and a list of links stacked inside of it:&lt;/p&gt;&#xA;&lt;p&gt;以一个下拉菜单为例。你可能会想到一个带阴影的白色盒子，里面排列着一些链接：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/273.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;But who says a dropdown needs to be a boring list of links? It’s just a floating box on the screen, you can do anything you want with it.&lt;/p&gt;&#xA;&lt;p&gt;但下拉菜单不必是乏味的链接列表。它是一个屏幕上的浮动框，你可以自由地发挥创意。&lt;/p&gt;&#xA;&lt;p&gt;Break it into sections, use multiple columns, add supporting text or colorful icons — do something fun with it!&lt;/p&gt;&#xA;&lt;p&gt;你可以将其分割成几个部分，使用多列布局，添加辅助文本或彩色图标，让它变得更有趣！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/274.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And don’t just stop at dropdowns; what about something like a table?&lt;/p&gt;&#xA;&lt;p&gt;除了下拉菜单；考虑下表格设计呢？&lt;/p&gt;&#xA;&lt;p&gt;When you imagine a table, you probably think of columns that each contain one specific piece of data:&lt;/p&gt;&#xA;&lt;p&gt;你可能会想象一个表格，每列都包含特定的数据：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/275.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Tables don’t have to work this way, though — if a column doesn’t need to be sortable, there’s no reason you can’t combine it with a related column and introduce some interesting hierarchy:&lt;/p&gt;&#xA;&lt;p&gt;但表格的设计可以更加灵活 —— 如果某列不需要排序功能，你可以将它与相关列合并，创建有趣的层级：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/276.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Table content doesn’t have to be plain text, either. Add images if it makes sense, or introduce some color to enrich the existing data:&lt;/p&gt;&#xA;&lt;p&gt;表格内容也可以不局限于纯文本。如果合适，可以添加图像，或使用颜色来丰富数据展示：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/277.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;How about radio buttons? There’s nothing more boring than a stack of labels with little circles next to them.&lt;/p&gt;&#xA;&lt;p&gt;那么单选按钮呢？一 堆旁边带有小圆圈的标签可能非常单调。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/278.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If a set of radio buttons are an important part of the UI you’re designing, try something like selectable cards instead:&lt;/p&gt;&#xA;&lt;p&gt;如果单选按钮在你的 UI 设计中占据重要位置，尝试使用可选卡片等替代方案：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/279.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Don’t let your existing beliefs hold back your designs — constraints are powerful but sometimes a bit of freedom is just what you need to take an interface to the next level.&lt;/p&gt;&#xA;&lt;p&gt;不要让现有观念限制了你的设计思路 —— 约束可以是有益的，但有时一点点自由就能将界面设计提升到新的高度。&lt;/p&gt;&#xA;&lt;h2 id=&#34;leveling-up--提升设计技能&#34;&gt;Leveling Up / 提升设计技能&lt;/h2&gt;&#xA;&lt;p&gt;Hopefully after reading this book you feel much more confident in your ability to make something look awesome, without relying on a designer. But even though we’ve tried our best to cram in every good idea we could possibly think of, there will always be more out there to learn.&lt;/p&gt;&#xA;&lt;p&gt;在阅读完这本书后，希望你对自己的设计能力更有信心，能够独立创造出令人赞叹的作品，无需依赖专业设计师。尽管我们已经尽力在书中包含了所有能想到的好建议，但总有更多知识等待你去探索。&lt;/p&gt;&#xA;&lt;p&gt;Here are two of the best ways you can continue to hone your skills, and add new tools to your toolbelt.&lt;/p&gt;&#xA;&lt;p&gt;以下是两个有效的方法，帮助你持续提升设计技能，并丰富你的设计工具箱。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Look for decisions you wouldn’t have made / 寻找你未曾想到的决策&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Whenever you stumble across a design you really like, ask yourself:&lt;/p&gt;&#xA;&lt;p&gt;每当你发现一个你喜欢的设计时，反问自己：&lt;/p&gt;&#xA;&lt;p&gt;“Did the designer do anything here that I never would have thought to do?”&lt;/p&gt;&#xA;&lt;p&gt;「设计师在这里做了哪些我从未考虑过的事情？」&lt;/p&gt;&#xA;&lt;p&gt;Maybe it’s the way they inverted the background color on a datepicker:&lt;/p&gt;&#xA;&lt;p&gt;可能是他们在日期选择器上创新地反转了背景颜色：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/280.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;or the way they positioned a button within a text input instead of on the outside:&lt;/p&gt;&#xA;&lt;p&gt;或者是他们将按钮放置在文本输入框内部而非外部的方式：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/281.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;or something as simple as using two different font colors for a headline:&lt;/p&gt;&#xA;&lt;p&gt;又或者仅仅是为标题使用了两种不同的字体颜色：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/282.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Paying attention to these sorts of unintuitive decisions is a great way to discover new ideas that you can apply to your own designs.&lt;/p&gt;&#xA;&lt;p&gt;关注这些非传统的决策，有助于你发现新的设计思路，并将其应用于你自己的设计中。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Rebuild your favorite interfaces / 重建你喜爱的界面&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The absolute best way to notice the little details that make a design look really polished is to recreate that design from scratch, without peeking at the developer tools.&lt;/p&gt;&#xA;&lt;p&gt;要真正注意到那些让设计显得精致细腻的细节，最好的方法是不依赖开发者工具，自己从头开始重建那个设计。&lt;/p&gt;&#xA;&lt;p&gt;When you’re trying to figure out why your version looks different than the original, you’ll discover tricks like “reduce your line height for headings”, “add letter-spacing to uppercase text”, or “combine multiple shadows” all on your own.&lt;/p&gt;&#xA;&lt;p&gt;在你尝试理解你的版本为何与原作存在差异时，你将独立发现一些技巧，比如「减少标题的行高」、「为大写文本添加字间距」或「组合多个阴影」。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/283.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;By continually studying the work that inspires you with a careful eye, you’ll be picking up design tricks for years to come.&lt;/p&gt;&#xA;&lt;p&gt;通过不断地细致研究那些激发你灵感的设计作品，你将能够持续学习并掌握新的设计技巧。&lt;/p&gt;&#xA;&lt;p&gt;— Adam Wathan &amp;amp; Steve Schoger&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:1313/pdfs/Refactoring-UI-v1.0.2.pdf&#34;&gt;⬇️ Download PDF&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>我的海外手机号方案 - giffgaff</title>
      <link>http://localhost:1313/p/giffgaff/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/giffgaff/</guid>
      <description>&lt;p&gt;长期以来，我都是通过接码平台注册 Claude，但是这个方式现在越来越行不通了，并且对于注册得越来越多的海外平台，有一个稳定的海外手机号对我来说变得非常重要。&lt;/p&gt;&#xA;&lt;p&gt;我选择的方案是注册 giffgaff 英国卡（实体卡），免月租（但是激活需要充值 10 英镑话费），接收短信免费，每半年发送一次短信保号（成本 0.3 英镑/条短信）。&lt;/p&gt;&#xA;&lt;p&gt;由于我的需求就是「接码」，稳定的「接码」，所以使用这个方案对我来说性价比最高。&lt;/p&gt;&#xA;&lt;h2 id=&#34;申请&#34;&gt;申请&lt;/h2&gt;&#xA;&lt;h3 id=&#34;官网途径&#34;&gt;官网途径&lt;/h3&gt;&#xA;&lt;p&gt;通过官网申请 SIM 卡是完全免费的，SIM 卡到手之后激活号卡才需要充值 10 英镑话费。&lt;/p&gt;&#xA;&lt;p&gt;访问 &lt;a href=&#34;https://www.giffgaff.com/&#34;&gt;giffgaff 官网&lt;/a&gt;，点击「Order your free SIM」。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;❌ 如果点击后跳转的 URL 是 &lt;a href=&#34;https://www.giffgaff.com/free-sim-cards&#34;&gt;https://www.giffgaff.com/free-sim-cards&lt;/a&gt;，那么后续订购填写邮寄地址时将只能选择英国的地址。&lt;/p&gt;&#xA;&lt;p&gt;✅ 如果要将 SIM 卡邮寄国内（非英国），则需要通过 &lt;a href=&#34;https://www.giffgaff.com/freesim-international&#34;&gt;https://www.giffgaff.com/freesim-international&lt;/a&gt; 订购，如果访问该 URL 后报错，则是代理问题。&lt;/p&gt;&#xA;&lt;p&gt;可邮寄国内（非英国）的订购页面如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这里忽略页面上方选择国家，继续下划页面到「Choose your plan」，这里点击「No thanks, I just want a free SIM」。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后会弹出「Your details」页面，如图提示填写即可。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;填写完成后点击「Order you free SIM」，页面提示「Your SIM has been ordered」，即表示订购成功。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;接下来就是等待邮寄，是通过平邮到国内，能不能顺利收到纯看一路上的快递员了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;开箱&#34;&gt;开箱&lt;/h2&gt;&#xA;&lt;p&gt;等收到快递后再写。&lt;/p&gt;&#xA;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.maizimi.com/oversea/oversea-tel-giffgaff/&#34;&gt;https://www.maizimi.com/oversea/oversea-tel-giffgaff/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://fast.v2ex.com/t/971919&#34;&gt;https://fast.v2ex.com/t/971919&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://telegra.ph/Giffgaff-SIM-Card-in-China-Channel-10-29&#34;&gt;https://telegra.ph/Giffgaff-SIM-Card-in-China-Channel-10-29&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>译&gt; 领先于时代，落后于潮流：Evernote 为何未能发挥其潜力</title>
      <link>http://localhost:1313/p/evernote-history/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/evernote-history/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文由 AI 翻译，人工修正。&lt;/p&gt;&#xA;&lt;p&gt;原文链接：&lt;a href=&#34;https://nira.com/evernote-history/&#34;&gt;https://nira.com/evernote-history&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Legendary investor, programmer, and Y Combinator co-founder Paul Graham once wrote that one of the best ways to come up with ideas for your next startup is to ask what product you wish someone else would make for you.&lt;/p&gt;&#xA;&lt;p&gt;传奇投资者、程序员、Y Combinator 联合创始人 Paul Graham 曾经写道，为下一次创业提出想法的最佳方法之一就是询问你希望其他人为你生产什么产品。&lt;/p&gt;&#xA;&lt;p&gt;For Stepan Pachikov, founder of Evernote, that product was a way to help him remember things.&lt;/p&gt;&#xA;&lt;p&gt;对于 Evernote 的创始人 Stepan Pachikov 来说，那个产品是一种帮助他记住事情的方式。&lt;/p&gt;&#xA;&lt;p&gt;Although Pachikov first began working on what ultimately became Evernote back in 2002, his fascination with human memory stems from his experiences growing up in the former Soviet Union. To Pachikov, Evernote wasn’t just another app or a way to capitalize on Silicon Valley’s burgeoning obsession with personal productivity. It was an extension of the human mind itself that would let users remember everything.&lt;/p&gt;&#xA;&lt;p&gt;尽管 Pachikov 早在 2002 年就开始研究最终成为 Evernote 的东西，但他对人类记忆的迷恋源于他在前苏联的成长经历。对他来说，Evernote 不仅仅是一个应用程序，也不是为了利用硅谷对个人生产力的日益增长的痴迷。它是一种人类思维的延伸，可以让用户记住一切。&lt;/p&gt;&#xA;&lt;p&gt;Evernote has come a long way since Pachikov began working on the app seventeen years ago. Evernote was and remains one of the best examples of what a freemium product can be. Despite this, Evernote has been plagued by a series of managerial missteps and failed product launches, and the company’s future is far from certain.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 自 Pachikov 17 年前开始开发这款应用以来，已经取得了长足的进步。它曾经，并且仍然是免费增值产品中的佼佼者。尽管如此，Evernote 一直受到一系列管理失误和失败产品推出的困扰，公司的未来远未确定。&lt;/p&gt;&#xA;&lt;p&gt;Here are some of the things I’ll be exploring in this article:&lt;/p&gt;&#xA;&lt;p&gt;在这篇文章里，我会研究以下几点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Why timing was so crucial to Evernote’s success, and how co-founder and former CEO Phil Libin’s vision for the product created vital tailwind for Evernote’s growth&lt;/li&gt;&#xA;&lt;li&gt;How the company resisted investor pressure and remained true to their convictions about the value of Evernote as a freemium product&lt;/li&gt;&#xA;&lt;li&gt;How Evernote lost sight of its original vision and how this almost doomed the company&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;为什么时机对 Evernote 的成功至关重要，以及联合创始人和前 CEO Phil Libin 对产品的愿景如何为 Evernote 的增长创造了重要的顺风&lt;/li&gt;&#xA;&lt;li&gt;公司如何抵制投资者的压力，并坚持他们对 Evernote 作为免费增值产品的价值的信念&lt;/li&gt;&#xA;&lt;li&gt;Evernote 如何迷失了它的原始愿景，以及这是如何几乎让公司陷入绝境的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The idea for Evernote began with the personal quest of its founder, Stepan Pachikov. He aimed to solve a giant problem: overcoming the limitations of human memory.&lt;/p&gt;&#xA;&lt;p&gt;印象笔记的灵感源于其创始人 Stepan Pachikov 的个人追求，他致力于解决一个重大问题：克服人类记忆的局限。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2008-2011-creating-an-impossible-vision&#34;&gt;2008-2011: Creating an Impossible Vision&lt;/h2&gt;&#xA;&lt;h2 id=&#34;2008-2011-构建一个难以实现的愿景&#34;&gt;2008-2011: 构建一个难以实现的愿景&lt;/h2&gt;&#xA;&lt;p&gt;Stepan Pachikov wanted to remember everything.&lt;/p&gt;&#xA;&lt;p&gt;Stepan Pachikov 想要记住所有事情。&lt;/p&gt;&#xA;&lt;p&gt;Pachikov is one of Silicon Valley’s most visionary technologists. A pioneer of virtual reality, computerized handwriting analysis, and optical character recognition, Pachikov has spent much of his life working to solve some of computing’s most challenging problems.&lt;/p&gt;&#xA;&lt;p&gt;Pachikov 是硅谷最富有远见的科技专家之一，他在虚拟现实、计算机手写分析和光学字符识别方面是先行者。他一生致力于解决计算机领域最棘手的问题。&lt;/p&gt;&#xA;&lt;p&gt;Trained in economic mathematics, Pachikov earned his doctorate in fuzzy logic from the Academy of Sciences of the Union of Soviet Socialist Republics in Moscow. As a scientist living and working under Communist rule in Soviet Russia, Pachikov was no stranger to the forgotten. He saw firsthand how generations of culture and collective memory were jeopardized by the gradual collapse of Soviet Russia. With few ways to preserve them, even key moments from his own past had been lost to the march of time.&lt;/p&gt;&#xA;&lt;p&gt;Pachikov 接受了经济数学的训练，并在莫斯科的苏联科学院获得了模糊逻辑的博士学位。作为一名在苏联俄罗斯共产主义统治下生活和工作的科学家，他对被遗忘的事物并不陌生。他亲眼目睹了几代人的文化和集体记忆如何因苏联的逐渐崩溃而受到危害。由于几乎没有保存它们的方法，即使是他自己过去的关键时刻也已经被时间的流逝所吞噬。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Even 30 years ago, I had already lost so much information. Names. Jokes. Phrases. Facts. I can study and re-learn what I have forgotten, but I cannot go back to my school years, my college years, and recollect what I knew. Teachers. Friends. Experiences. In the past 20 years, I have put 75,000 pictures into my photo database. But pictures from before that are lost.&amp;rdquo; — Stepan Pachikov, founder of Evernote&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「即使是在 30 年前，我已经遗忘了许多信息。包括名字、笑话、短语和事实。我可以重新学习和研究那些我遗忘的东西，但我无法回到我的学生时代或大学时代，去回忆起我所知道的一切。那些老师、朋友和经历。在过去的 20 年里，我已经将 75000 张照片存入了我的照片数据库，但在此之前的老照片已经丢失了。」—— Stepan Pachikov, Evernote 创始人&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Pachikov saw computers as a means of not only preserving individual and cultural memories, but also as a way to empower children growing up in the political and social turmoil of Russia in the 1980s. To that end, Pachikov began working with his friend and world-renowned chess grandmaster Garry Kasparov in 1986, and the two men formed the country’s first computer club in Moscow. Pachikov and Kasparov devised a way of encouraging Russian children to develop their handwriting skills under the guise of a simple game. This game ultimately became Paragraph, the world’s first commercial computerized handwriting recognition software.&lt;/p&gt;&#xA;&lt;p&gt;Pachikov 认为计算机不仅是保存个人和文化记忆的一种手段，也是赋予在 20 世纪 80 年代俄罗斯政治和社会动荡中长大的儿童权力的一种手段。1986 年，他与国际象棋大师 Garry Kasparov 合作，在莫斯科创立了首个计算机俱乐部。他们设计了一款游戏，鼓励俄罗斯儿童在游戏中练习书写技能，最终发展成了全球首个商业化手写识别软件 Paragraph。&lt;/p&gt;&#xA;&lt;p&gt;The results of Pachikov’s educational experiments were mixed, but his work attracted the attention of Apple, Inc., which asked Pachikov to develop his handwriting recognition software for the Newton handheld computer. Pachikov left the frigid temperatures of Moscow for the warmth of Cupertino in Northern California, and made a new home in the United States.&lt;/p&gt;&#xA;&lt;p&gt;Pachikov 的教育实验结果好坏参半，但他的工作引起了 Apple 公司的注意，Apple 请他为其 Newton 掌上电脑开发手写识别软件。他离开了莫斯科的严寒，前往北加州温暖的库比蒂诺，并在美国定居。&lt;/p&gt;&#xA;&lt;p&gt;Apple’s Newton project — and, by extension, Paragraph — ultimately failed. Undeterred, Pachikov once again turned his attention to educating children. He embarked on a range of projects in the ’90s, including a cutting-edge virtual reality product that allowed children to learn about history by traveling back through time to the age of the ancient Greeks.&lt;/p&gt;&#xA;&lt;p&gt;Apple 的 Newton 项目 —— 以及由此延伸的 Paragraph —— 最终失败了。尽管如此，Pachikov 再次将注意力转向了儿童教育。他在 90 年代开展了一系列项目，包括一个先进的虚拟现实产品，该产品允许孩子们通过回到古希腊时代来学习历史。&lt;/p&gt;&#xA;&lt;p&gt;It wasn’t until 2002 that Pachikov began working on what would later become Evernote.&lt;/p&gt;&#xA;&lt;p&gt;直到 2002 年，Pachikov 才开始开发后来成为 Evernote 的产品。&lt;/p&gt;&#xA;&lt;p&gt;Aside from his lifelong obsession with preserving and expanding human memory, Pachikov’s career has been defined by the ambition of his ideas. Pachikov’s vision of the future has always been a step ahead of the technology of the day. Initially, Pachikov’s vision for Evernote was much closer to the brain-machine interfaces promised by neurotech companies such as Elon Musk’s Neuralink. Pachikov wanted to develop a technology that would serve as an intermediary between man and machine.&lt;/p&gt;&#xA;&lt;p&gt;除了他对保存和扩展人类记忆的终身迷恋，Pachikov 的职业生涯一直以其思想的野心为特征。Pachikov 对未来的愿景总是领先于当时的科技。最初，Pachikov 对 Evernote 的愿景更接近于神经科技公司如 Elon Musk（埃隆·马斯克）的 Neuralink 所承诺的脑机接口。Pachikov 希望开发一种技术，作为人与机器之间的中介。&lt;/p&gt;&#xA;&lt;p&gt;However, despite the fantastical nature of Evernote as a concept, the product would have solidly practical applications.&lt;/p&gt;&#xA;&lt;p&gt;然而，尽管 Evernote 作为一个概念具有奇幻性质，这个产品将会有坚实的实际应用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;When you can’t remember somebody’s name, you look stupid. Memory and smartness are integrated. We all have hundreds of thousands of pieces of information, but it’s useless if we can’t find any of it. In business, the worst thing we can say is, ‘Oh, I’m sorry, I forgot your name.’ This is a product I need myself.&amp;rdquo; — Stepan Pachikov, founder of Evernote&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「当你记不起某人的名字时，你会显得很愚蠢。记忆力和聪明是相辅相成的。我们都有成百上千的信息片段，但如果我们找不到任何信息，那也是无用的。在商业中，最糟糕的事情之一就是对别人说：“哦，对不起，我忘了你的名字。”，这是一个我自己也需要的产品。」—— Stepan Pachikov，Evernote 的创始人&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Although Pachikov’s nascent idea shared little in common with Google, both products were grounded in the same basic principle: in the future, knowing how to find information would be far more important than remembering information.&lt;/p&gt;&#xA;&lt;p&gt;尽管 Pachikov 的新兴想法与谷歌几乎没有共同点，但这两种产品都基于相同的基本原则：在未来，知道如何查找信息将比记住信息重要得多。&lt;/p&gt;&#xA;&lt;p&gt;Pachikov worked on the prototype of Evernote (which was initially known as EverNote) for two years, and released a beta version of the tool for Windows in 2004. Pachikov’s decision to target Microsoft’s flagship operating system made sense. In 2002, &lt;a href=&#34;https://www.itworld.com/article/2804237/operating-systems/microsoft-dominance-of-os-market-grows--idc-study-says.html&#34;&gt;Microsoft controlled almost 94% of the client-side operating system market&lt;/a&gt;. Apple’s OS X, which had been released just a year previously in March 2001, accounted for little more than 2% of the market. Pachikov’s early prototype was a little rough around the edges, but much of the core functionality was there––including the electronic handwriting recognition tech that Pachikov had pioneered at Paragraph.&lt;/p&gt;&#xA;&lt;p&gt;Pachikov 花了两年时间开发 Evernote 的原型（最初被称为 EverNote），并在 2004 年发布了 Windows 平台的测试版工具。Pachikov 决定针对微软的主流操作系统是有道理的。在 2002 年，&lt;a href=&#34;https://www.itworld.com/article/2804237/operating-systems/microsoft-dominance-of-os-market-grows--idc-study-says.html&#34;&gt;微软控制了几乎 94% 的客户端操作系统市场&lt;/a&gt;。Apple 的 OS X 在 2001 年 3 月刚刚发布，市场份额仅略高于 2%。Pachikov 的早期原型在某些方面还比较粗糙，但核心功能基本齐全，包括 Pachikov 在 Paragraph 公司首创的电子手写识别技术。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image.png&#34; alt=&#34;Source: phoneArena&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;In 2006, on the other side of the United States in Boston, serial entrepreneur Phil Libin was planning his next move. Like Pachikov, Libin had emigrated from Russia to the United States as a young man. And, like Pachikov, Libin was fascinated by the limitations of human memory. Having launched and sold a successful e-commerce software company and an information technology security firm, Libin was researching the possibilities of augmenting human memory electronically. His third venture, which Libin called Ribbon, would be an organizational tool that would help people save and access the information they needed, when they needed it.&lt;/p&gt;&#xA;&lt;p&gt;2006 年，在美国另一边的波士顿，连续创业者 Phil Libin 正在规划他的下一步行动。和 Pachikov 一样，Libin 年轻时从俄罗斯移民到了美国。同样，Libin 对人类记忆的局限性感到着迷。在成功推出并出售了一家电子商务软件公司和一家信息技术安全公司后，Libin 开始研究通过电子方式增强人类记忆的可能性。他的第三次创业，利宾称之为 Ribbon，将是一个组织工具，帮助人们在需要时保存和访问他们所需的信息。&lt;/p&gt;&#xA;&lt;p&gt;It was then that Libin first heard about Pachikov’s EverNote project.&lt;/p&gt;&#xA;&lt;p&gt;正是在那时，Libin 第一次听说了 Pachikov 的 EverNote 项目。&lt;/p&gt;&#xA;&lt;p&gt;EverNote and Ribbon were very similar in both form and function. However, Pachikov had made significant headway with EverNote by the time Libin was ready to begin developing his company’s own technology. Libin traveled from Boston to Silicon Valley to meet Pachikov and the two men decided to merge their two fledgling companies rather than compete with one another.&lt;/p&gt;&#xA;&lt;p&gt;EverNote 和 Ribbon 在形式和功能上都非常相似。然而，当 Libin 准备开始开发他公司的技术时，Pachikov 的 EverNote 已经取得了显著进展。Libin 从波士顿前往硅谷会见 Pachikov，两人决定合并他们两家新兴公司，而不是相互竞争。&lt;/p&gt;&#xA;&lt;p&gt;Both Pachikov and Libin were dissatisfied with the limitations of the human mind. However, while both men were idealistic, even philosophic, about their idea, Libin possessed the keen eye for business that Pachikov lacked –– a quality that Pachikov believed made Libin an ideal partner.&lt;/p&gt;&#xA;&lt;p&gt;Pachikov 和 Libin 都对人类思维的局限性感到不满。然而，尽管两人都对他们的想法抱有理想主义，甚至带有哲学色彩，Libin 却有着 Pachikov 所缺乏的敏锐商业眼光 —— 一种 Pachikov 认为 Libin 能成为理想合作伙伴的品质。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Phil Libin was smart, educated, and I was completely confident that he would be a much better CEO than I was. His Russian is better than my English. I believed he would transform the company and make it successful.&amp;rdquo; — Stepan Pachikov, founder of Evernote&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「Phil Libin 很聪明，受过良好教育，我完全相信他会是一个比我更好的 CEO。他的俄语比我的英语还要好。我相信他会改变公司并使其成功。」—— Evernote 创始人 Stepan Pachikov&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Upon the merging of the two companies, Libin set to work. One of Libin’s first tasks was to streamline the various internal projects that Pachikov and his team had been working on, and he insisted that the company focus the entirety of its efforts on refining the idea behind their product: empowering users to capture, search, and store any and all information, wherever they were.&lt;/p&gt;&#xA;&lt;p&gt;合并两家公司后，Libin 开始工作。Libin 的第一个任务之一是简化 Pachikov 和他的团队一直在工作的各种内部项目，他坚持公司应该将全部精力集中在完善其产品的理念上：赋予用户在任何地方捕捉、搜索和存储任何信息的权力。&lt;/p&gt;&#xA;&lt;p&gt;However, Libin’s most significant contribution to the growing company came very early on, when Libin steered Evernote away from Windows towards a bold new frontier –– mobile.&lt;/p&gt;&#xA;&lt;p&gt;然而，Libin 对这家成长中的公司最重大的贡献非常早，当时 Libin 将 Evernote 从 Windows 转向了一个大胆的新领域 —— 移动设备。&lt;/p&gt;&#xA;&lt;p&gt;The central premise behind Evernote was accessibility. If Evernote was to help people remember everything, then users had to be able to capture everything. That meant mobile. However, in 2006, mobile was far from the dominant platform it is today. Apple’s flagship iPhone wouldn’t be released for another year, and &lt;a href=&#34;https://mashable.com/2011/08/11/evernote-phil-libin-interview/&#34;&gt;by Libin’s own admission&lt;/a&gt; betting big on mobile was exactly that—a gamble.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 的核心前提是易访问性。如果 Evernote 要帮助人们记住一切，那么用户必须能够捕捉到一切。那就是移动设备。然而，在 2006 年，移动设备远非今天的主导平台。Apple 的旗舰 iPhone 将在一年后发布，而&lt;a href=&#34;https://mashable.com/2011/08/11/evernote-phil-libin-interview/&#34;&gt;根据 Libin 自己的说法&lt;/a&gt;，在移动设备上下大赌注正是一场豪赌。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;From the start, we made a big promise to our users—we would help them remember everything. In order to live up to that, Evernote would need to be easily accessible from every computer, phone or other device that a person used, for the rest of their lives. So, it wasn’t that we predicted the rise of mobile, as much as we felt that mobile would be critical to our success.&amp;rdquo; — Phil Libin, former CEO of Evernote&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「从一开始，我们就对我们的用户做出了一个重要的承诺 —— 我们将帮助他们记住一切。为了实现这一点，Evernote 需要能够轻松地从一个人使用的每一台电脑、手机或其他设备上访问，直到他们的生命结束。因此，我们并不是预测了移动设备的兴起，而是感觉移动设备对我们的成功至关重要。」—— Phil Libin，前 Evernote CEO&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;That gamble paid off. When the iPhone launched in 2007, Evernote was ready. The product looked and felt completely different from its earlier incarnation. Evernote’s aesthetic was sleek, clean, and stylish, and it felt fantastic to use on mobile.&lt;/p&gt;&#xA;&lt;p&gt;那次赌博得到了回报。当 iPhone 在 2007 年推出时，Evernote 已经准备好了。这款产品看起来和感觉完全不同于它之前的版本。Evernote 的设计既时尚又简洁，在移动设备上使用起来感觉棒极了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-1.png&#34; alt=&#34;Source: Archive.org&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;However, what drove much of Evernote’s initial adoption wasn’t the aesthetic of its mobile app––it was the emergence of the App Store. Just as smartphone apps were a brand-new way of using software, app marketplaces were brand-new, ready-made distribution channels that offered developers immediate access to millions of potential users. Evernote’s engineers worked tirelessly to ensure that Evernote would be available as each new app marketplace launched, each of which expanded Evernote’s footprint considerably.&lt;/p&gt;&#xA;&lt;p&gt;然而，推动 Evernote 最初获得大量用户的主要因素并不是其移动应用程序的美学，而是 App Store 的出现。就像智能手机应用程序是一种全新的使用软件的方式一样，应用程序市场也是全新的、现成的分销渠道，为开发者提供了立即接触到数百万潜在用户的机会。Evernote 的工程师夜以继日地工作，以确保 Evernote 在每个新的应用程序市场推出时都可用，每个市场都显著扩大了 Evernote 的影响力。&lt;/p&gt;&#xA;&lt;p&gt;Libin’s singular focus drove much of Evernote’s initial development. In 2008, Evernote launched in a limited private beta that was aimed squarely at the cult of productivity that had taken root across Silicon Valley.&lt;/p&gt;&#xA;&lt;p&gt;Libin 的专注推动了 Evernote 最初很大一部分的发展。2008 年，Evernote 在一个有限的私人测试版中启动，这个测试版直接针对在硅谷生根发芽的生产力狂热群体。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-2.png&#34; alt=&#34;Source: Keyword Suggest&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Libin’s vision for Evernote was a seamless experience that successfully bridged the gap between the physical and digital worlds. To accomplish this, Evernote treated every piece of information—from actual handwritten notes to saved URLs—as a “note,” which are organized into thematic “notebooks.” It’s a clever, familiar convention that Evernote uses to this day. Even early on, Evernote’s functionality was impressive. Users could save all kinds of information within seconds. Digitized handwritten notes, audio recordings, links, pictures taken on a user’s mobile device, saved images, to-do lists, clipped articles—virtually anything users could find online could be saved, archived, and synched across multiple devices.&lt;/p&gt;&#xA;&lt;p&gt;Libin 对 Evernote 的愿景是提供一种无缝体验，成功地弥合了物理世界和数字世界之间的差距。为了实现这一目标，Evernote 将每条信息 —— 从手写的笔记到保存的 URL —— 视为一个「笔记」，这些笔记被组织成主题性的「笔记本」。这是一个聪明、熟悉的惯例，Evernote 至今仍在使用。即使是在早期，Evernote 的功能也非常令人印象深刻。用户可以在几秒钟内保存各种信息。数字化的手写笔记、音频记录、链接、在用户移动设备上拍摄的照片、保存的图片、待办事项列表、剪贴的文章 —— 几乎任何用户在线找到的内容都可以被保存、归档并在多个设备之间同步。&lt;/p&gt;&#xA;&lt;p&gt;However, the real brilliance of Evernote was its search functionality, what Libin described as “the electronic version of having something at the tip of your tongue.” Users could search for saved items using an amazing range of search criteria, including date, keyword, topic, location, contacts, or any combination of the above. Users could even download add-ons that allowed notes to be searched by the dominant color of an image. This made it much easier to find saved notes, as users only had to recall a single detail to start a search, much like the way our memories work. This wasn’t just vital to Evernote’s core purpose. It was essential in recreating the rewarding, satisfying feeling of remembering something that would come to define the experience of using Evernote as a product.&lt;/p&gt;&#xA;&lt;p&gt;然而，Evernote 真正的亮点是其搜索功能，Libin 将其描述为「触手可及的电子版本」。用户可以使用一系列令人惊叹的搜索条件来搜索保存的项目，包括日期、关键词、主题、位置、联系人或上述任何组合。用户甚至可以安装插件，允许通过图像的主要颜色搜索笔记。这使得查找保存的笔记变得更加容易，因为用户只需回想起一个细节即可开始搜索，就像我们的记忆工作方式一样。这不仅对 Evernote 的核心目的至关重要。这对于重新创造那种记住某事的令人满意的乐趣和满足感也至关重要，这将定义为 Evernote 的使用体验。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Evernote finds the way your mind works and gives you more and more hooks into your memories.&amp;rdquo; — Andrew Sinkov, former VP of Marketing for Evernote&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「Evernote 找到了你的思维模式，并为你提供了越来越多的记忆钩子。」—— Andrew Sinkov，前 Evernote 市场营销副总裁&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;This sense of fun and satisfaction was critical in Libin’s view. Evernote’s unique position in the rapidly growing personal productivity space wasn’t lost on the company’s CEO. Evernote faced incumbent competitors at every turn. Box, Dropbox, iCloud, and Google Drive were already dominating online storage. Instapaper offered web clipping tools, as did its main competitor, the now-defunct Spool. Evernote preceded the wave of free online image editing tools that began with the launch of Canva back in 2012, but Evernote’s image-editing tools were far from unique.&lt;/p&gt;&#xA;&lt;p&gt;这种乐趣和满足感在 Libin 看来是至关重要的。Evernote 在快速增长的个人生产力领域中的独特地位并没有被公司的 CEO 忽视。Evernote 在每个转角都面临着现有的竞争对手。Box、Dropbox、iCloud 和 Google Drive 已经在在线存储领域占据主导地位。Instapaper 提供了网页剪辑工具，它的主要竞争对手，现已停业的 Spool 也是如此。Evernote 在 2012 年 Canva 推出之前就已经存在，但 Evernote 的图像编辑工具远非独一无二。&lt;/p&gt;&#xA;&lt;p&gt;To Libin, the experience of using Evernote would be its competitive advantage.&lt;/p&gt;&#xA;&lt;p&gt;对于 Libin 来说，使用 Evernote 的体验感将是 Evernote 的竞争优势。&lt;/p&gt;&#xA;&lt;p&gt;Libin’s product philosophy was responsible for one of Evernote’s few hardware-based flaws—storing data natively on users’ machines and devices. Libin believed that a responsive feel was crucial to the Evernote experience, and that the delay between searching for something and finding something should be infinitesimal. This is the same principle that drove much of Spotify’s early development. Daniel Ek wanted &lt;a href=&#34;https://producthabits.com/how-spotify-built-a-20-billion-business-by-changing-how-people-listen-to-music/&#34;&gt;Spotify to feel like users had the entirety of the world’s music right on their hard drives&lt;/a&gt;. Libin wanted the Evernote experience to feel similarly responsive, and believed that this would be central to user satisfaction with that experience.&lt;/p&gt;&#xA;&lt;p&gt;Libin 的产品哲学导致了 Evernote 少数基于硬件的缺陷之一 —— 在用户的机器和设备上本地存储数据。Libin 认为，快速响应对于 Evernote 的体验至关重要，而且搜索和找到东西之间的延迟应该无限低。这是推动 Spotify 早期发展的一大原则。Daniel Ek 希望&lt;a href=&#34;https://producthabits.com/how-spotify-built-a-20-billion-business-by-changing-how-people-listen-to-music/&#34;&gt;Spotify 能够让用户感觉就像他们硬盘上拥有全世界所有的音乐&lt;/a&gt;。Libin 希望 Evernote 的体验也能有类似的快速响应的感受，并认为这将是用户对该体验满意的核心。&lt;/p&gt;&#xA;&lt;p&gt;Unfortunately, Libin was fighting a losing battle. As Evernote doubled down on native storage, every other service provider was focusing on the cloud. Although this decision didn’t create any existential problems for Evernote in 2008, it was the first sign that Evernote was diverging from the broader trends in tech that would cause the company so many headaches later on.&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，Libin 正在打一场注定要失败的仗。随着 Evernote 加大了对本地存储的投入，其他每一家服务提供商都在专注于云计算。尽管这一决定在 2008 年并没有给 Evernote 带来任何生存问题，但它却是 Evernote 偏离科技领域更广泛趋势的第一个迹象，这些趋势后来给公司带来了许多头痛的问题。&lt;/p&gt;&#xA;&lt;p&gt;Evernote launched as a freemium product. This was vitally important to Libin. He believed that Evernote would become increasingly valuable to users the longer they used the product and the more they captured and stored within it. As such, Libin wanted to make Evernote as sticky as possible—and he did so by making the free version of the product incredibly generous. There were virtually no feature restrictions or other incentives for users to upgrade from free to paid plans. In fact, the only benefit of upgrading to a paid, $5-per-month subscription was additional storage space.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 以 freemium（免费增值）产品形式推出。这对 Libin 来说非常重要。他认为，随着用户使用时间的增加以及他们在产品中捕获和存储的内容越来越多，Evernote 对用户的价值将越来越大。因此，Libin 希望使 Evernote 尽可能具有粘性 —— 他通过提供免费版本的产品来做到这一点，这个版本非常慷慨。几乎没有任何功能限制或其他激励措施促使用户从免费版升级到付费计划。事实上，升级到每月 5 美元的付费订阅的唯一好处是额外的存储空间。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;I don’t need to squeeze money out of you. I’ll have the rest of your life to take your money. It’s my long-term greedy strategy. Our slogan is, ‘We’d rather you stay than pay.&amp;rsquo;&amp;rdquo; — Phil Libin, former CEO of Evernote&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「我不需要从你身上榨取金钱。我还有你的一生时间来拿走你的钱。这是我的长期贪婪策略。我们的口号是，‘我们宁愿你留下而不是支付。’」—— Phil Libin，前 Evernote CEO&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Libin’s attitudes toward freemium software may have been popular with Evernote’s growing userbase, but it was repellent to investors. One VC after another turned Libin’s company down. There were no complaints about the product — far from it — but there just wasn’t enough incentive for free users to upgrade to paid plans.&lt;/p&gt;&#xA;&lt;p&gt;Libin 对免费增值软件的态度可能受到了 Evernote 不断增长的用户群体的热烈欢迎，但对于投资者来说却是个问题。一个又一个的风险投资公司拒绝了 Libin 的公司。产品本身没有任何问题 —— 恰恰相反 —— 但就是没有足够的激励措施让免费用户升级到付费计划。&lt;/p&gt;&#xA;&lt;p&gt;After struggling to secure institutional investment, Evernote entered into an agreement with a European VC that would have seen the company receive $10M in funding. On the morning in October 2008 when the two parties were due to meet to sign the papers, the investor canceled the meeting and pulled the offer of funding. With just three weeks’ worth of cash at hand, Libin came to the grim realization that Evernote as a company would not survive. With little money and fewer prospects, Libin agonized about how he would break the news to his team and employees.&lt;/p&gt;&#xA;&lt;p&gt;在努力争取获得机构投资的过程中，Evernote 与一家欧洲风险投资公司达成了协议，该公司将向 Evernote 提供 1000 万美元的资金。在 2008 年 10 月的某个早晨，双方原定会面签署文件，投资者却取消了会议并撤回了资金提供。手中只剩下三周的现金，Libin 痛苦地意识到，作为一家公司，Evernote 将无法生存。资金短缺，前景黯淡，Libin 痛苦地思考如何向他的团队和员工传达这个消息。&lt;/p&gt;&#xA;&lt;p&gt;It was around that time that Libin received an email from a Swedish user who loved Evernote. The user, whose identity remains a secret to this day, told Libin that Evernote had made him happier and more productive. However, the Swedish user didn’t want to just tell Libin how much they loved the app—they wanted to invest. Libin admitted that the company was in need of funding, at which point the mysterious Swedish Evernote evangelist offered to front the company $500,000.&lt;/p&gt;&#xA;&lt;p&gt;大约在这个时候，Libin 收到了一封来自一个瑞典用户的电子邮件，这个用户非常喜欢 Evernote。这位用户的身份至今仍然是个秘密，他告诉 Libin Evernote 让他更快乐、更高效。然而，这位瑞典用户并不只是想告诉 Libin 他有多喜欢这个应用程序 —— 他还想进行投资。Libin 承认公司需要资金，这时，这位神秘的瑞典 Evernote 传道者提出要为公司提供 50 万美元的前期资金。&lt;/p&gt;&#xA;&lt;p&gt;Evernote was saved.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 被拯救了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;He was just a computer nerd and entrepreneur. He had some money and fell in love with our product, simple as that. It was just good luck. Had I gone to bed ten minutes earlier, I wouldn’t have opened his email right away and probably gone into work and closed the business.&amp;rdquo; — Phil Libin, former CEO of Evernote&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「他只是一个电脑极客和企业家。他有一些钱，爱上了我们的产品，就这么简单。这只是好运。如果我早十分钟上床睡觉，我就不会立刻打开他的电子邮件，可能就去上班了，然后关闭了这家公司。」—— Phil Libin，前 Evernote CEO&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Evernote’s anonymous benefactor didn’t just save the company, they opened the door to the kind of institutional investment Evernote had been chasing before the global economy tanked. Evernote kicked off a series of funding rounds over the next two years that propelled the company to new heights of growth. The company started by raising $26M as part of its Series A round led by DoCoMo Capital in September 2009. Two months later in November 2009, Evernote raised another $10M as part of its Series B round led by Morgenthaler Ventures and Sequoia Capital. Just under a year later in October 2010, Evernote raised another $20M as part of its Series C round, again led by Sequoia, as well as another $50M as part of a venture round led by Sequoia in July 2011.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 的匿名投资者不仅拯救了公司，还为 Evernote 打开了在全球经济低迷之前一直求追的那种机构投资的大门。在接下来的两年里，Evernote 启动了一系列的融资轮次，推动了公司的增长达到新的高度。公司首先在 2009 年 9 月由 DoCoMo Capital 领投的 A 轮融资中筹集了 2600 万美元。两个月后的 2009 年 11 月，Evernote 在 Morgenthaler Ventures 和 Sequoia Capital 领投的 B 轮融资中又筹集了 1000 万美元。不到一年后的 2010 年 10 月，Evernote 在 Sequoia 领投的 C 轮融资中又筹集了 2000 万美元，并在 2011 年 7 月由 Sequoia 领投的另外一轮风险投资中筹集了 5000 万美元。&lt;/p&gt;&#xA;&lt;p&gt;Evernote had gone from venture capital pariah to Silicon Valley darling in less than three years, raising a total of more than $100M in the process.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 从风险投资界的弃婴变成了硅谷的宠儿，这个过程不到三年，总共筹集了超过 1 亿美元。&lt;/p&gt;&#xA;&lt;p&gt;Libin’s company took full advantage of its sudden reversal of fortunes, using much of its new funding to expand its engineering teams and expand beyond the company’s headquarters in Redwood City, California. One thing Evernote didn’t spend a cent of its newfound fortune on, however, was advertising.&lt;/p&gt;&#xA;&lt;p&gt;Libin 的公司充分利用了其突然的好运，将大部分新资金用于扩大其工程团队，并在加利福尼亚州红木城的公司总部之外进行扩张。然而，Evernote 没有在广告上花费其新资金的一分钱。&lt;/p&gt;&#xA;&lt;p&gt;Since launching in private beta in 2008, Evernote’s growth had been gradual, steady, and entirely organic. The product had more than 125,000 users before Evernote emerged from its closed beta, thanks in part to an article on TechCrunch that drove several thousand sign-ups.&lt;/p&gt;&#xA;&lt;p&gt;自 2008 年推出私人测试版以来，Evernote 的增长一直是渐进式的、稳定的，并且完全是自然的。在 Evernote 结束内测之前，该产品拥有超过 125,000 名用户，部分原因是 TechCrunch 上的一篇文章吸引了数千人注册。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-3.png&#34; alt=&#34;Source: SlideShae&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;During the closed beta, Evernote was invite-only. However, while many products use invites as a marketing strategy to capitalize on exclusivity of access, Evernote did so out of an abundance of caution. Between the technical overhead of synchronizing native applications across multiple platforms in real time and working with a new type of backend server architecture, Libin’s engineers were more concerned with the stability of their systems than manufacturing hype.&lt;/p&gt;&#xA;&lt;p&gt;在封闭测试期间，Evernote 是邀请制的。然而，尽管许多产品使用邀请作为一种营销策略，以利用独家访问的排他性，但 Evernote 这样做是出于谨慎。在实时同步跨多个平台的原生应用程序的技术开销和与新型后端服务器架构的合作之间，Libin 的工程师更关心他们系统的稳定性，而不是炒作。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;The fact that you have to sign up and send around invites to get in actually generated some buzz. That was never our intention; we never thought of the closed beta as a marketing exercise. We were frankly terrified that everything would crash all the time.&amp;rdquo; — Phil Libin, former CEO of Evernote&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「事实上，你必须注册并发送邀请才能加入，这实际上产生了一些轰动。那从来不是我们的意图；我们从未将封闭测试视为营销活动。我们坦白说害怕一切都会一直崩溃。」—— Phil Libin，前 Evernote CEO&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Evernote’s freemium model may have been a dislike for investors, but Libin’s instincts about slow-burn, long-term growth had been proven right. In early 2011, just three years after launching, Evernote became profitable. Evernote had 80 employees, more than 10M users, and annual sales of approximately $16M.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 的免费增值模式可能不受投资者欢迎，但 Libin 关于缓慢、长期增长的直觉被证明是正确的。2011 年初，仅仅在推出三年后，Evernote 就实现了盈利。Evernote 拥有 80 名员工，超过 1000 万用户，以及大约 1600 万美元的年销售额。&lt;/p&gt;&#xA;&lt;p&gt;Having been dangerously close to the brink of disaster, Evernote had emerged from the global financial crisis not only unscathed, but flush with VC cash. The company had achieved profitability in just three years, and the future looked bright for Evernote––until the company began to lose its way in 2011 with a series of failed product launches that jeopardized everything the company had built.&lt;/p&gt;&#xA;&lt;p&gt;距离灾难边缘曾仅一步之遥，Evernote 不仅从全球金融危机中毫发无损地走了出来，而且还获得了充足的 VC（风险投资）资金。公司仅用了短短三年时间就实现了盈利，Evernote 的未来看起来一片光明 —— 直到 2011 年，公司在一系列失败的产品发布中迷失了方向，这危及了公司所建立的一切。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2011-2015-new-products-new-markets-new-problems&#34;&gt;2011-2015: New Products, New Markets, New Problems&lt;/h2&gt;&#xA;&lt;h2 id=&#34;2011-2015-新产品新市场新问题&#34;&gt;2011-2015: 新产品，新市场，新问题&lt;/h2&gt;&#xA;&lt;p&gt;Evernote began the period from 2011 to 2015 in an incredibly strong position. Evernote was already profitable and had more money in the bank than it knew what to do with. The company was growing steadily, hiring new talent and expanding into new locations. And, most importantly, the product was attracting upward of a million new users every month. However, the honeymoon period didn’t last. In an attempt to diversify its revenue streams, the company embarked upon a series of disastrous product launches that confused users and investors alike—all of which took the company farther and farther away from the core vision of its founders.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 在 2011 年到 2015 年期间仍然处于令人难以置信的强大地位。Evernote 已经盈利，银行里的钱多得不知道怎么花。公司稳步增长，招聘新人才，扩展新地点。最重要的是，产品每个月吸引多达一百万新用户。然而，蜜月期并没有持续太久。为了多元化其收入来源，公司进行了一系列灾难性的产品发布，这些发布让用户和投资者感到困惑 —— 所有这些都使公司越来越远离其创始人的核心愿景。&lt;/p&gt;&#xA;&lt;p&gt;In the summer of 2011, Evernote released the first of three standalone products it would launch over the next six months: Evernote Peek. The first Smart Cover app for Apple’s newly released iPad 2, Peek was a simple trivia application that leveraged the responsive wake and sleep function of the iPad’s Smart Cover feature. Users could lift part of their iPad’s Smart Cover to see a trivia question on-screen. To reveal the answer, all they had to do was lift up the rest of the cover. Users could use either Peek’s questions or their own answers as the basis of Notebooks within the main Evernote app, but Peek offered users little real utility besides a momentary distraction.&lt;/p&gt;&#xA;&lt;p&gt;2011 年夏天，Evernote 发布了将在未来六个月内推出的三款独立产品中的第一款：Evernote Peek。这是 Apple 新发布的 iPad 2 的第一个 Smart Cover 应用程序，Peek 是一个简单的问答应用程序，它利用了 iPad Smart Cover 功能的响应式唤醒和睡眠功能。用户可以提起 iPad Smart Cover 的一部分来查看屏幕上的一个问答问题。要显示答案，他们只需要揭开剩下的封面。用户可以使用 Peek 的问题或自己的答案作为主 Evernote 应用程序中笔记本的基础，但 Peek 除了提供短暂的干扰之外，并没有给用户带来多少真正的实用性。&lt;/p&gt;&#xA;&lt;p&gt;A few months later in December 2011, Evernote released two more standalone apps for iOS: Evernote Food and Evernote Hello. Essentially a simplified, specialized version of the main Evernote app, Evernote Food allowed users to record and log their meals in digital notebooks in much the same way the main Evernote app allowed them to capture and store everything else. Users could organize their culinary memories by tagging locations and other people, making it easier for users to remember what they ate, with whom, and where. The only real differences between Food and the main Evernote app were the integrations with Facebook and Twitter. Customers could use these integrations to share details of their last amazing meal with their networks, and some food-specific navigational elements.&lt;/p&gt;&#xA;&lt;p&gt;几个月后的 2011 年 12 月，Evernote 又发布了两个独立的 iOS 应用程序：Evernote Food 和 Evernote Hello。本质上，Evernote Food 是主 Evernote 应用程序的简化、专一版，它允许用户在数字笔记本中记录他们的餐事，与主 Evernote 应用程序允许他们捕获和存储所有其他内容的方式大致相同。用户可以通过标记位置和其他人来组织他们的用餐记忆，这使得用户更容易记住他们吃了什么，和谁一起，在哪里。Food 和主 Evernote 应用程序之间唯一的真正区别是它们与 Facebook 和 Twitter 的集成。客户可以使用这些集成在他们的社交网络分享他们最近一次美妙餐事的细节，以及一些特定的食物导航元素。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-4.png&#34; alt=&#34;Source: Behance&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Evernote Hello was an even stranger app than Evernote Food. The purpose of Hello was ostensibly to make it easier for users to remember people. Users could create contact listings within Hello in a similar way as adding a new contact in their phone. However, what made Hello such a bizarre — and ultimately damaging — product was the fact that everything in Evernote Hello had to be done manually. The app did not support &lt;a href=&#34;https://squareup.com/guides/nfc&#34;&gt;near-field communication&lt;/a&gt; (NFC), the communication protocol that powers contactless payment systems such as Apple Pay and allows mobile devices to exchange small amounts of data. Hello didn’t even have a rudimentary electronic business card reader. Every field had to be completed by hand.&lt;/p&gt;&#xA;&lt;p&gt;Evernote Hello 是一个比 Evernote Food 更奇怪的应用程序。Hello 的目的表面上是为了让用户更容易记住人。用户可以在 Hello 中创建联系人列表，方式类似于在手机中添加新联系人。然而，让 Hello 成为一个如此奇怪且最终是有害的产品的原因是，Evernote Hello 中的所有事情都必须手动完成。该应用程序不支持&lt;a href=&#34;https://squareup.com/guides/nfc&#34;&gt;近场通信&lt;/a&gt;（NFC），这是一种通信协议，它为无接触支付系统如 Apple Pay 提供支持，并允许移动设备交换少量数据。Hello 甚至没有一个基本的电子名片阅读器。每个字段都必须手工填写。&lt;/p&gt;&#xA;&lt;p&gt;Users and investors alike were completely baffled by Food and Hello. Firstly, the main Evernote app could already do everything Evernote Food could do and more. There was no incentive whatsoever for people to use Food over the main Evernote app. Secondly, the lack of NFC or e-card support for Hello was an unforgivable sin for a contact manager product. Asking either users themselves or their new acquaintances to enter contact details manually was an immense barrier for the product to overcome and one with virtually no payoff for users.&lt;/p&gt;&#xA;&lt;p&gt;用户和投资者都对 Food 和 Hello 感到完全困惑。首先，主 Evernote 应用程序已经可以做 Evernote Food 可以做的一切甚至更多。人们没有任何动力在使用主 Evernote 应用程序的情况下再使用 Food。其次，缺乏对 NFC 或电子卡支持的 Hello 对于联系人管理产品来说是不可原谅的罪过。要求用户本人或他们的新熟人手动输入联系方式是该产品需要克服的巨大障碍，而且对用户来说几乎没有任何好处。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-5.png&#34; alt=&#34;Source: El androide libre&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It isn’t hard to see the reasoning behind the two products.&lt;/p&gt;&#xA;&lt;p&gt;不难看出这两款产品背后的原因。&lt;/p&gt;&#xA;&lt;p&gt;Food selfies wouldn’t become the pop-cultural staple they are today for several years, but &lt;a href=&#34;https://www.nytimes.com/2010/04/07/dining/07camera.html&#34;&gt;many people were already enthusiastically photographing their food&lt;/a&gt; and sharing it on social media by 2011. Evernote Food was a transparent attempt by Evernote to become the primary destination for food photography, a position dominated by Flickr at that time.&lt;/p&gt;&#xA;&lt;p&gt;食物自拍在几年内还不会成为当今流行文化的主流，但到 2011 年，&lt;a href=&#34;https://www.nytimes.com/2010/04/07/dining/07camera.html&#34;&gt;许多人已经在热情地拍摄他们的食物&lt;/a&gt;并在社交媒体上分享。Evernote Food 是 Evernote 试图成为食物摄影首选的明显尝试，当时这个位置被 Flickr 占据。&lt;/p&gt;&#xA;&lt;p&gt;Although it may not have seemed like it at the time, Evernote Hello aligned strongly with Pachikov’s original vision to help users remember everything. Pachikov himself often used forgetting people’s names in professional settings as a prime example of how Evernote could be an indispensable part of people’s everyday lives. What Hello got wrong, however, was the execution. If Hello had shipped with NFC support, it could have potentially opened up Evernote’s products to an entirely new market of business users. It had to be effortless to work. As it stood, Evernote Hello was virtually useless and accomplished little besides diluting the Evernote brand.&lt;/p&gt;&#xA;&lt;p&gt;尽管当时看起来可能并非如此，但 Evernote Hello 与 Pachikov 最初帮助用户记住一切的愿景高度一致。Pachikov 本人经常用在专业场合中忘记别人的名字作为 Evernote 如何成为人们日常生活不可或缺的一部分的典型例子。然而，Hello 在执行上犯了错误。如果 Hello 发布时支持 NFC，它可能已经潜在地为 Evernote 的产品开辟了一个全新的商业用户市场。它必须毫不费力地工作。就目前而言，Evernote Hello 几乎毫无用处，除了稀释 Evernote 品牌之外，几乎没有取得任何成就。&lt;/p&gt;&#xA;&lt;p&gt;Evernote’s increasing range of products was confusing, but didn’t dissuade investors. In May 2012, Evernote officially earned “unicorn” status—a valuation of $1B or more—after raising $70M as part of its Series D round led by CBC Capital.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 的产品种类越来越多，让人感到困惑，但这并没有阻止投资者的热情。2012 年 5 月，Evernote 在 CBC Capital 领投的 D 轮融资中筹集了 7000 万美元，正式获得了「独角兽」地位 —— 估值达到 10 亿美元或以上。&lt;/p&gt;&#xA;&lt;p&gt;Evernote didn’t need to raise any more funding. The company still had much of the $96M it had raised to date, but the company planned to use its latest round to expand further into the Chinese market. Unlike most Western tech companies, whose products are often quickly copied and rebranded by Chinese firms, Evernote decided to create its own clone for the Chinese market, Yinxiang Biji, or “memory notebook.” This would ultimately prove to be a smart play, and China would later become Evernote’s second largest market outside the United States.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 没有必要再筹集更多资金。公司迄今为止已筹集的 9600 万美元的资金大部分仍在账上，但公司计划使用其最新一轮获得的资金进一步进军中国市场。与大多数西方科技公司的产品经常被中国公司迅速复制和重新命名不同，Evernote 决定为中国市场创建自己的克隆版本「印象笔记」。这最终证明是一个明智的举动，中国后来成为 Evernote 在美国以外的第二大市场。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-6.png&#34; alt=&#34;Source: Ars Technica&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;After a series of worrisome decisions and bewildering product launches, Evernote attempted to course-correct in August 2012 with the launch of Evernote Business.&lt;/p&gt;&#xA;&lt;p&gt;在经历了一系列令人担忧的决策和令人困惑的产品发布后，Evernote 试图在 2012 年 8 月通过推出 Evernote Business 来纠正方向。&lt;/p&gt;&#xA;&lt;p&gt;This was a logical, if predictable, move for the company. By the time Evernote Business launched, Evernote was wildly popular. The company had around 230 employees worldwide, tripled the number of developers working with Evernote’s API, and more than trippled its userbase from 12M to &lt;a href=&#34;https://techcrunch.com/2012/08/24/evernote-business-launch/&#34;&gt;more than 38M in just one year&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;对于公司来说，这是一项合乎逻辑举措，尽管是可预见的。当 Evernote Business 推出时，Evernote 已经非常受欢迎。该公司在全球拥有约 230 名员工，使用 Evernote API 的开发者数量增加了三倍，用户基础从 12M 增长&lt;a href=&#34;https://techcrunch.com/2012/08/24/evernote-business-launch/&#34;&gt;一年内超过 38M&lt;/a&gt;，增长了不止三倍。&lt;/p&gt;&#xA;&lt;p&gt;Having accepted almost $100M in venture funding, Evernote was under considerable pressure to diversify its revenue streams and pursue business users more aggressively. Professional users could connect their business account to their personal account effortlessly. This encouraged business users to bring Evernote to work with them, in &lt;a href=&#34;https://producthabits.com/how-slack-became-a-5-billion-business-by-making-work-less-boring/&#34;&gt;much the same way Slack had done in its early growth stage&lt;/a&gt;. To sweeten the deal, users who connected personal accounts to business accounts had their basic freemium accounts upgraded to Evernote Premium.&lt;/p&gt;&#xA;&lt;p&gt;在接受了近 1 亿美元的风险投资后，Evernote 面临着巨大的压力，需要多元化其收入来源并更积极地吸引企业用户。专业用户可以轻松地将他们的企业账户与个人账户连接起来。这鼓励企业用户将 Evernote 带到工作中，&lt;a href=&#34;https://producthabits.com/how-slack-became-a-5-billion-business-by-making-work-less-boring/&#34;&gt;与 Slack 在其早期增长阶段所做的方式大致相同&lt;/a&gt;。为了增加吸引力，将个人账户与企业账户连接的用户，其基础免费账户将升级为 Evernote Premium。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-7.png&#34; alt=&#34;Source: Engadget&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The pressure to go after business users intensified further in November 2012, when Evernote raised an additional $85M as part of its secondary market round led by British venture fund M8 Capital. This brought Evernote’s total venture funding to more than $250M and a valuation of $2B.&lt;/p&gt;&#xA;&lt;p&gt;2012 年 11 月，Evernote 在英国风险投资基金 M8 Capital 的带领下完成了其二级市场的一轮额外 8500 万美元的融资，这使得 Evernote 的总风险投资超过了 2.5 亿美元，估值达到 20 亿美元。进一步加剧了其对获取商业用户的压力。&lt;/p&gt;&#xA;&lt;p&gt;Evernote’s next major product launch came almost a year later in September 2013. However, this product wasn’t another specialized version of the Evernote app, it was an extensive range of physical Evernote-branded products that the company would sell via its new Evernote Market.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 的下一个主要产品发布是在一年后的 2013 年 9 月。然而，这个产品不是另一个专门版本的 Evernote 应用程序，而是一系列 Evernote 品牌的实体产品，公司将通过其新的 Evernote Market 进行销售。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-8.png&#34; alt=&#34;Source: The Verge&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;In the space of a few short years, Evernote had achieved profitability, had millions of dollars in the bank, and the company was growing fast.&lt;/p&gt;&#xA;&lt;p&gt;在短短几年内，Evernote 实现了盈利，银行里有数百万美元，公司增长迅速。&lt;em&gt;（PS：这段话不知道为啥会出现在这里，但是原文确实在这里。）&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Evernote Market squandered almost all of the company’s brand equity for nothing.&lt;/p&gt;&#xA;&lt;p&gt;Evernote Market 几乎白白浪费了公司的所有品牌价值。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;If you make different products and they’re great, people are like, ‘That’s genius! Clearly, the right thing to do.’ And if you focus on one product and it fails, people are like, ‘That company is no longer capable of innovating.&amp;rsquo;&amp;rdquo; — Phil Libin, former CEO of Evernote&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「如果你做出不同的产品，它们很棒，人们就会说，“这太天才了！显然，这是正确的事情。”，如果你专注于一个产品，它失败了，人们就会说，“那家公司已经不再有能力创新了。”」—— Phil Libin，前 Evernote CEO&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;It’s hard to understate the damage that the branded products sold through the Evernote Market inflicted on the Evernote brand. It made absolutely no sense. Users didn’t want Evernote-branded tablet styluses or Evernote Moleskine notebooks or Evernote backpacks. They wanted an organizational and productivity product that worked.&lt;/p&gt;&#xA;&lt;p&gt;很难低估通过 Evernote Market 销售的品牌产品对 Evernote 品牌造成的损害。这完全没有意义。用户不想要 Evernote 品牌的平板笔或 Evernote Moleskine 笔记本或 Evernote 背包。他们想要的是一种有效的组织性和生产力产品。&lt;/p&gt;&#xA;&lt;p&gt;The fact that the 2013 version of Evernote was widely considered the buggiest, most unstable version the company had released at that point added insult to injury.&lt;/p&gt;&#xA;&lt;p&gt;2013 年版本的 Evernote 被广泛认为是公司当时发布的最有 bug、最不稳定的版本，这一事实更是雪上加霜。&lt;/p&gt;&#xA;&lt;p&gt;Rather than fixing the software problems that users actually cared about, Evernote started selling branded backpacks instead.&lt;/p&gt;&#xA;&lt;p&gt;但 Evernote 不是修复用户真正关心的软件问题，而是开始销售品牌背包。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Evernote Market wasn’t just a troubling sign that the company — and Phil Libin himself — had begun to lose its way. It was another major step away from Pachikov’s vision of what Evernote could be.&lt;/p&gt;&#xA;&lt;p&gt;Evernote Market 不仅仅是一个令人担忧的信号，表明公司以及 Phil Libin 本人已经开始迷失方向。它也是 Evernote 背离 Pachikov 希望 Evernote 可能成为什么的愿景的重要一步。&lt;/p&gt;&#xA;&lt;p&gt;Both Pachikov and Libin shared a desire to create a “100-year company,” but Evernote Market did nothing to work toward or advance Pachikov’s vision of Evernote as an extension of the human mind. Pachikov’s vision was bold, ambitious, and transformative. By comparison, Evernote Market felt like a cheap cash grab.&lt;/p&gt;&#xA;&lt;p&gt;Pachikov 和 Libin 都希望创建一个「百年公司」，但 Evernote Market 没有做任何行动来支持或推进 Pachikov 将 Evernote 视为人类思维延伸的愿景。Pachikov 的愿景是勇敢的、雄心勃勃的和具有变革性的。相比之下，Evernote Market 感觉就像是一个廉价的现金抢夺。&lt;/p&gt;&#xA;&lt;p&gt;The company’s fortunes went from bad to worse in 2014.&lt;/p&gt;&#xA;&lt;p&gt;公司的命运在 2014 年每况愈下。&lt;/p&gt;&#xA;&lt;p&gt;Despite its popularity, Evernote had developed a reputation among its growing userbase for being a buggy, unstable product. For the most part, such grumbling was largely restricted to complaints on the product’s official forums and the occasional rant on social media.&lt;/p&gt;&#xA;&lt;p&gt;尽管 Evernote 很受欢迎，但在其不断增长的用户群中也因其不稳定和存在 bug 而名声不佳。在很大程度上，这种不满主要限于产品官方论坛上的抱怨和社交媒体上的偶尔咆哮。&lt;/p&gt;&#xA;&lt;p&gt;That changed when Jason Kincaid, a former TechCrunch writer, published a post on his &lt;a href=&#34;https://jasonkincaid.net/evernote-the-bug-ridden-elephant/&#34;&gt;personal blog&lt;/a&gt; titled “Evernote, the bug-ridden elephant.”&lt;/p&gt;&#xA;&lt;p&gt;当 Jason Kincaid，一位前 TechCrunch 作家，在他的&lt;a href=&#34;https://jasonkincaid.net/evernote-the-bug-ridden-elephant/&#34;&gt;个人博客&lt;/a&gt;上发表了一篇名为「Evernote，这个充满 bug 的大象」的文章时，情况发生了变化。&lt;/p&gt;&#xA;&lt;p&gt;Kincaid had been an Evernote power user for years, having captured almost 7,000 notes since discovering the product. The post was a reluctant but scathing take-down of Evernote’s notorious instability, which Kincaid felt compelled to write after experiencing a slew of technical problems including corrupted files, incomplete backups, and a poor response from Evernote’s customer support team. The post went viral and garnered so much attention that Libin personally contacted Kincaid to apologize.&lt;/p&gt;&#xA;&lt;p&gt;Kincaid 多年来一直是 Evernote 的重度用户，自从使用 Evernote 以来，他已经创建了近 7000 条笔记。这篇文章是对 Evernote 臭名昭著的不稳定性的不情愿但严厉的批评，Kincaid 在经历了包括文件损坏、备份不完整以及 Evernote 客户支持团队的糟糕响应在内的一系列技术问题后，感到有责任写下这篇文章。这篇文章病毒式传播并引起了很多的关注，以至于 Libin 亲自联系了 Kincaid 道歉。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;None of this has been life-shattering, but given how reliant I am on Evernote, it is deeply unnerving — now each note I instinctively leave myself is tinged with anxiety. I’m concerned that as I dig through my Evernote archive, I’ll encounter more corrupted audio notes, and, worse, my paranoia is increasingly convinced that there may have been notes that never were saved to the archive at all.&amp;rdquo; — Jason Kincaid&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「这一切都没有摧毁我的生活，但考虑到我对 Evernote 的依赖程度，这让我感到非常不安 —— 现在每次我本能地给自己写下笔记时，都会伴随着焦虑。我担心，当我翻阅 Evernote 档案时，我会遇到更多损坏的音频笔记，更糟糕的是，我的担忧越来越强烈，担心可能有些笔记根本就没有保存到档案中。」—— Jason Kincaid&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;A little more than a year later in October 2014, Evernote unveiled its latest product, Work Chat. A simple messaging client, Work Chat was designed to complement Evernote’s Business plans.&lt;/p&gt;&#xA;&lt;p&gt;一年多后，2014 年 10 月，Evernote 推出了其最新产品 Work Chat。这是一个简单的消息客户端，旨在补充 Evernote 的商业计划。&lt;/p&gt;&#xA;&lt;p&gt;It was also long overdue. Team-based collaboration had been an enormous blind spot in Evernote’s vision for years. The company had already missed one major consumer tech trend by ignoring the exodus of products and services migrating to the cloud and insisting on developing Evernote as a native app.&lt;/p&gt;&#xA;&lt;p&gt;这也早就应该做了。多年来，团队协作一直是 Evernote 愿景中的一个巨大盲点。公司已经错过了一个主要的消费科技趋势，那就是忽视了产品和服务向云端迁移的大规模趋势，并且坚持将 Evernote 作为一个原生应用程序进行开发。&lt;/p&gt;&#xA;&lt;p&gt;Similarly, Evernote had been designed as an organizational tool for individuals, when virtually every other productivity tool on the market emphasized team-based collaboration. Work Chat was the first small step toward solving this urgent problem.&lt;/p&gt;&#xA;&lt;p&gt;同样地，Evernote 最初被设计为个人组织工具，而市场上几乎所有其他生产力工具都强调团队协作。Work Chat 是解决这个紧迫问题迈出的第一步。&lt;/p&gt;&#xA;&lt;p&gt;Unfortunately for Evernote, that ship had sailed.&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，对于 Evernote 来说，那艘船已经开走了。&lt;/p&gt;&#xA;&lt;p&gt;As a whole, the company had been distracted by chasing the wrong revenue streams. Instead of building a solid team-based product, Evernote built a food app. The company had expanded too quickly in the wrong direction.&lt;/p&gt;&#xA;&lt;p&gt;总的来说，公司一直因追逐错误的收入来源而分心。不是建立一个基于团队的坚实产品，而是建立了一个食品应用程序。公司在错误的方向上扩张得太快了。&lt;/p&gt;&#xA;&lt;p&gt;Everything besides the main Evernote app was a distraction from the company’s core mission to help people remember everything. Products like Slack and Google’s G Suite had successfully made the leap from personal product to collaborative product, whereas Evernote had not.&lt;/p&gt;&#xA;&lt;p&gt;除了主应用程序 Evernote 之外的一切，都是对公司核心使命（即帮助人们记住一切）的干扰。像 Slack 和 Google 的 G Suite 这样的产品已经成功地从个人产品转型为协作产品，而 Evernote 却没有。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-10.png&#34; alt=&#34;Source: Up&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Aside from raising an additional $20M as part of its Series E round in November 2014, Evernote kept a low profile for the next year or so until July 2015, when the company introduced major changes to its pricing. Under the new structure, Evernote’s Premium plans increased from $45 to $50 per year. The other major change to the product’s pricing was the introduction of a new, middle-tier option called Evernote Plus, which cost $25 per year.&lt;/p&gt;&#xA;&lt;p&gt;除了在 2014 年 11 月作为其 E 轮融资的一部分筹集了额外的 2000 万美元，Evernote 在接下来的大约一年的时间里保持了低调，直到 2015 年 7 月，当时公司对 Evernote 定价进行了重大调整。在新结构下，Evernote 的 Premium 计划从每年 45 美元增加到 50 美元。产品定价的另一个重大变化是推出了一个新的中间选项 Evernote Plus，每年费用为 25 美元。&lt;/p&gt;&#xA;&lt;p&gt;Evernote changed more than just its pricing structure in 2015, it also changed the company’s leadership. In July 2015, Libin announced that he would be stepping down as Evernote’s CEO and handing the reins to former Google Glass executive, Chris O’Neill, as his successor.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 在 2015 年改变的不仅仅是其定价结构，公司的领导层也改变了。2015 年 7 月，Libin 宣布他将辞去 Evernote CEO 的职务，并将领导权交给前 Google Glass 高管 Chris O&amp;rsquo;Neill。&lt;/p&gt;&#xA;&lt;p&gt;The disastrous launch of Evernote Market, the instability and bugginess of the product, the lack of a clear direction for the company — they had all taken their toll on Evernote as a company, and Libin as Chief Executive in particular. Apparently discouraged by Evernote’s failure to capitalize on its earlier success, Libin reportedly showed little interest in the business side of the company. He described himself as “not passionate” in the announcement about O’Neill’s appointment, an admission as frank as it was surprising.&lt;/p&gt;&#xA;&lt;p&gt;Evernote Market 的不幸推出、产品的不稳定性和漏洞、公司缺乏明确的指导方向 —— 所有这些都对作为一家公司的 Evernote 造成了影响，特别是对作为 CEO 的 Libin 产生了影响。据报道，Libin 对公司业务方面表现出很少的兴趣，显然对 Evernote 未能利用其早期成功感到沮丧。在宣布 O&amp;rsquo;Neill 任命的公告中，他形容自己「没有激情」，这是一个既坦率又令人惊讶的承认。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Attracting and retaining talent is a core responsibility of the CEO, and if Libin is seriously disinterested in the latter, he should have departed long ago. I can’t imagine the feeling of being an Evernote employee who hears your long-time CEO (and still executive chairman) publicly admit to not giving a shit about your future.&amp;rdquo; — Josh Dickson, founder of Syrah&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「吸引和留住人才是 CEO 的核心责任，如果 Libin 对后者真的不感兴趣，他早就应该离开了。我无法想象作为一名 Evernote 员工，听到你的长期 CEO（仍然担任执行主席）公开承认不关心你的未来是什么感觉。」—— Josh Dickson，Syrah 的创始人&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Libin wasn’t the only one who saw the writing on the wall. As news of O’Neill’s position as Evernote’s new CEO spread, many people expressed doubts about O’Neill’s suitability and experience – not to mention the product’s ongoing identity crisis.&lt;/p&gt;&#xA;&lt;p&gt;Libin 并不是唯一一个看到不祥之兆的人。随着 O&amp;rsquo;Neill 担任 Evernote 新 CEO 的消息传开，许多人对其适合性和经验表示怀疑，更不用说 Evernote 持续的身份危机了。&lt;/p&gt;&#xA;&lt;p&gt;Libin’s failure to hire a COO until June 2015, when the company promoted Linda Kozlowski from VP of Worldwide Operations, was seen as yet another symptom of the company’s leadership problems.&lt;/p&gt;&#xA;&lt;p&gt;Libin 的失败直到 2015 年 6 月才聘请了一位 COO，当时公司提升了 Linda Kozlowski 担任全球运营的 VP，这被视为公司领导问题的又一症状。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;From 2011 to 2015, it seemed as though Evernote took two steps backward with each step forward. The company had continued to invest in the development of new products, but none of these products expanded or built upon Evernote’s core functionality or purpose. With each new experiment and failed product, Evernote drifted farther and farther away from Pachikov’s vision—an identity crisis from which Evernote never really recovered.&lt;/p&gt;&#xA;&lt;p&gt;从 2011 年到 2015 年，似乎每当 Evernote 向前迈出一步，就会向后退两步。公司持续投资于新产品的开发，但这些产品没有一项扩展或构建了 Evernote 的核心功能或目的。随着每一次新的尝试和失败的产品，Evernote 越来越远离 Pachikov 的愿景 —— 这一场身份危机，Evernote 从未真正从中恢复过来。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2015-present-returning-to-evernotes-roots&#34;&gt;2015-Present: Returning to Evernote’s Roots&lt;/h2&gt;&#xA;&lt;h2 id=&#34;2015-至今回归-evernote-的根源&#34;&gt;2015-至今：回归 Evernote 的根源&lt;/h2&gt;&#xA;&lt;p&gt;For Evernote, the period from 2015 until the present day can be summed up in four short words: too little, too late. Evernote’s various failed experiments to diversify its products and revenue streams hadn’t just wasted millions of dollars — it wasted precious time the company didn’t have. Moving away from the core value proposition of the Evernote product had been a huge mistake. The only thing that could save Evernote was returning to the product’s roots. For O’Neill, this meant getting back to Pachikov’s original vision for Evernote as an extension of the human mind. Unfortunately for the company, it never managed.&lt;/p&gt;&#xA;&lt;p&gt;对于 Evernote 来说，2015 年到现在的这段时期可以用两个简短的词来概括：太少，太晚。Evernote 各种失败的实验，以多元化其产品和收入来源，不仅浪费了数百万美元，它还浪费了公司宝贵的、没有的时间。远离 Evernote 产品的核心价值主张是一个巨大的错误。唯一能拯救 Evernote 的是回归产品的根源。对于 O&amp;rsquo;Neill 来说，这意味着回到 Pachikov 对 Evernote 作为人类思维延伸的原始愿景。不幸的是，对于公司来说，它从未做到这一点。&lt;/p&gt;&#xA;&lt;p&gt;One of O’Neill’s first tasks as CEO was to get Evernote’s house in order. This began with the prompt closure of Evernote Food in August 2015. Evernote Food had been relatively popular, but ultimately, it wasn’t worth the time and resources necessary to maintain it—especially considering the primary Evernote app could already do virtually everything Food could do.&lt;/p&gt;&#xA;&lt;p&gt;作为 CEO，O’Neill 的第一个任务之一是让 Evernote 的运营走上正轨。这首先从 2015 年 8 月迅速关闭 Evernote Food 开始。Evernote Food 曾经相当受欢迎，但最终，它不值得投入维持它所需的时间和资源，特别是考虑到主 Evernote 应用程序几乎可以做 Food 能做的一切。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-12.png&#34; alt=&#34;Source: Evernote Forums&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Around six months later, the company announced it was also closing the Evernote Market. According to Evernote, the company had sold approximately $12M worth of &lt;a href=&#34;https://techcrunch.com/2014/10/02/evernote-market-has-sold-12m-in-products-since-launch/&#34;&gt;branded goods&lt;/a&gt; through the Evernote Market. Even if sales figures had been higher, the Evernote Market had done considerable damage to the Evernote brand. Closing it was both long overdue and urgently necessary if the company was to regain its users and investors’ trust.&lt;/p&gt;&#xA;&lt;p&gt;大约六个月后，公司宣布也将关闭 Evernote Market。根据 Evernote 的说法，公司通过 Evernote Market 销售了大约价值 1200 万美元的&lt;a href=&#34;https://techcrunch.com/2014/10/02/evernote-market-has-sold-12m-in-products-since-launch/&#34;&gt;品牌商品&lt;/a&gt;。即使销售额很高，Evernote Market 也对 Evernote 品牌造成了相当大的损害。如果公司要重新获得用户和投资者的信任，关闭它是早就应该且迫切必要的。&lt;/p&gt;&#xA;&lt;p&gt;A little more than two months after Evernote shuttered its Market, the company lost the first of many executives it would lose over the coming years. Dave Engberg, the company’s founding CTO, left the organization after almost nine years. Like many other Evernote execs who departed the company around the same time, Engberg’s departure was decidedly low-key.&lt;/p&gt;&#xA;&lt;p&gt;在 Evernote 关闭其 Market 不到两个月后，该公司失去了将在未来几年内失去的众多高管中的第一位。公司创始 CTO Dave Engberg 在工作近九年后离开了公司。与同一时期离开公司的许多其他 Evernote 高管一样，Engberg 的离职显得相当低调。&lt;/p&gt;&#xA;&lt;p&gt;Shortly after Engberg’s exit, Evernote introduced sweeping changes to the product’s pricing. First, serious restrictions were introduced to Evernote’s free plans. Free users were limited to synching their Evernote data across just two devices. Second, Evernote raised the price of its Plus and Premium tiers to $34.99 and $69.99 per year respectively, a price increase of roughly 40%.&lt;/p&gt;&#xA;&lt;p&gt;Engberg 离职后不久，Evernote 对产品的定价进行了全面调整。首先，对 Evernote 免费计划实施了严格的限制。免费用户被限制仅可在两个设备上同步他们的 Evernote 数据。其次，Evernote 将其 Plus 和 Premium 会员的定价分别提高至每年 34.99 美元和 69.99 美元，价格涨幅大约为 40%。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-13.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;One of the biggest and most unpopular changes to Evernote, however, wasn’t its new pricing. It was the 60MB upload limit applied to Evernote’s free plans. For customers who used Evernote to upload primarily text-based notes, the new restriction may have felt less punitive.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 最大的、最不受欢迎的变化，不是它的定价。而是对 Evernote 免费计划实施的 60MB 上传限制。对于那些主要创建文本笔记的 Evernote 用户来说，新的限制可能感觉不那么严厉。&lt;/p&gt;&#xA;&lt;p&gt;For users who relied on Evernote to save images and other media files, however, the new upload cap was brutal.&lt;/p&gt;&#xA;&lt;p&gt;但对于那些依赖 Evernote 来保存图片和其他媒体文件的用户来说，新的上传限制是残酷的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Our goal is to continue improving Evernote for the long term, investing in our core products to make them more powerful and intuitive while also delivering often-requested new features. But that requires a significant investment of energy, time and money.&amp;rdquo; — Chris O’Neill, CEO of Evernote&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;「我们的目标是持续改进 Evernote，长期投资核心产品，使它们更加强大和直观，同时提供被大量要求的新功能。但这需要大量的精力、时间和金钱投入。」—— Chris O&amp;rsquo;Neill，Evernote CEO&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;For Evernote, the restructuring of its freemium product was both long overdue and urgently necessary. For Evernote’s users, however, it was a slap in the face. Not only had Evernote crippled its free version, severely limiting its utility to free users, it had also failed to fix many of the bugs that still plagued even paid versions of the product.&lt;/p&gt;&#xA;&lt;p&gt;对于 Evernote 来说，对其免费增值产品的重组既早该进行又迫切需要。然而，对于 Evernote 的用户来说，这就像是一记耳光。Evernote 不仅削弱了其免费版本，严重限制了免费用户的实用性，而且还未能修复许多仍然困扰着付费版本产品的 bug。&lt;/p&gt;&#xA;&lt;p&gt;To be fair to Evernote, the company had little choice but to increase prices. Years of Evernote’s extremely permissible freemium product had spoiled users who had grown accustomed to making use of Evernote for free and had harmed the company’s revenue growth. What the company should have done to monetize the product while aligning with customers would have been to gradually introduce restriction incentives to its free version over time, rather than transitioning from a generous freemium product to a comparatively expensive paid service.&lt;/p&gt;&#xA;&lt;p&gt;公平地说，Evernote 别无选择，只能提高价格。多年来，Evernote 极其宽容的免费增值产品宠坏了用户，他们习惯了免费使用 Evernote，并损害了公司的收入增长。公司本应该在与用户保持一致的同时，逐步在免费版本中引入限制性激励措施，而不是从一个慷慨的免费增值产品转变为相对昂贵的付费服务。&lt;/p&gt;&#xA;&lt;p&gt;Pricing changes are some of the most impactful things a company can do. Evernote didn’t put enough thought into its pricing over the years, which is why their once loyal userbase wasted little time in criticizing them over the new pricing plan.&lt;/p&gt;&#xA;&lt;p&gt;定价变化是公司能够做的最具影响力的事情之一。Evernote 多年来没有对其定价投入足够的思考，这就是为什么他们曾经忠实的用户群体几乎很少浪费时间批评他们新的定价计划。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-14.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The company’s primary competitors — Microsoft’s OneNote and Apple’s Notes — weren’t as fully featured as Evernote, but they offered a lot more functionality free of charge, making Evernote’s new pricing even less appealing.&lt;/p&gt;&#xA;&lt;p&gt;公司的主要竞争对手 —— 微软的 OneNote 和 Apple 的 Notes —— 功能没有 Evernote 那么全面，但它们提供了更多免费功能，这让 Evernote 的新定价更不吸引人。&lt;/p&gt;&#xA;&lt;p&gt;The next major change to Evernote under O’Neill’s leadership came a few months after the product’s pricing restructure when the company announced it was migrating from Evernote’s own proprietary data infrastructure to Google Cloud. This was no small feat.&lt;/p&gt;&#xA;&lt;p&gt;在 O’Neill 的领导下，Evernote 的下一个重大变化是在产品定价结构调整后的几个月后，公司宣布将从 Evernote 自己的专有数据基础设施迁移到 Google Cloud。这并非易事。&lt;/p&gt;&#xA;&lt;p&gt;At the time, Evernote had approximately &lt;a href=&#34;http://fortune.com/2016/09/13/evernote-google-cloud/&#34;&gt;3.5 petabytes&lt;/a&gt; –– or 3.5 million GB –– of data on its &lt;a href=&#34;https://www.statista.com/statistics/446885/number-of-evernote-users/&#34;&gt;200 million users&lt;/a&gt;. Evernote could have opted to use Amazon Web Services or Microsoft’s Azure infrastructure to host its data. The company reportedly chose Google as its cloud provider due to the potential applications of Google’s machine-learning technology. Despite the costs and sheer amount of work involved in the migration, the decision could have been seen as another small step toward Evernote becoming the company Stepan Pachikov envisioned all those years before. Evernote had long been rumored to be developing voice recognition and translation features to the product to make capturing information even easier. This made &lt;a href=&#34;https://cloud.google.com/customers/evernote/&#34;&gt;Google’s Cloud Machine Learning Engine&lt;/a&gt; the ideal choice for intelligent, responsive features such as voice recognition.&lt;/p&gt;&#xA;&lt;p&gt;当时，Evernote 拥有其 &lt;a href=&#34;https://www.statista.com/statistics/446885/number-of-evernote-users/&#34;&gt;2 亿用户&lt;/a&gt;大约有 &lt;a href=&#34;http://fortune.com/2016/09/13/evernote-google-cloud/&#34;&gt;3.5 PB&lt;/a&gt; —— 或者说 350 万 GB 的数据。Evernote 本可以选择使用亚马逊网络服务或微软的 Azure 基础设施来托管其数据。据报道，该公司选择谷歌作为其云服务提供商，是因为谷歌的机器学习技术有潜在的应用。尽管迁移涉及的成本和工作量很大，但这一决定可能被视为 Evernote 成为 Stepan Pachikov 多年前所设想的公司迈出的又一小步。有传言称 Evernote 正在开发语音识别和翻译功能，以使捕捉信息变得更加容易。这使得 &lt;a href=&#34;https://cloud.google.com/customers/evernote/&#34;&gt;Google 的 Cloud Machine Learning Engine（云机器学习引擎）&lt;/a&gt;成为其实现语音识别等智能、响应式功能的理想选择。&lt;/p&gt;&#xA;&lt;p&gt;Data security had been a thorny problem at Evernote for some time. Roughly 50 million user accounts were compromised following a &lt;a href=&#34;https://nakedsecurity.sophos.com/2013/03/02/evernote-hacked-almost-50-million-passwords-reset-after-security-breach/&#34;&gt;security breach&lt;/a&gt; in 2013, and Evernote’s decision to migrate its data infrastructure to Google Cloud was seen as a smart move for a company with so much data and so many users. However, the company suffered another PR black eye when TechCrunch reported that the company’s &lt;a href=&#34;https://techcrunch.com/2016/12/14/evernotes-new-privacy-policy-allows-employees-to-read-your-notes/&#34;&gt;new privacy policy&lt;/a&gt; allowed Evernote employees to read users’ private notes.&lt;/p&gt;&#xA;&lt;p&gt;数据安全一直是 Evernote 的一个棘手问题。2013 年的一次&lt;a href=&#34;https://nakedsecurity.sophos.com/2013/03/02/evernote-hacked-almost-50-million-passwords-reset-after-security-breach/&#34;&gt;安全漏洞&lt;/a&gt;导致大约 5000 万用户账户被泄露，Evernote 决定将其数据基础设施迁移到 Google Cloud，被认为是对拥有大量数据和众多用户的公司来说是一个明智之举。然而，当 TechCrunch 报道公司的&lt;a href=&#34;https://techcrunch.com/2016/12/14/evernotes-new-privacy-policy-allows-employees-to-read-your-notes/&#34;&gt;新隐私政策&lt;/a&gt;允许 Evernote 员工阅读用户的私人笔记时，公司再次遭受了公关危机。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;The latest update to the Privacy Policy allows some Evernote employees to exercise oversight of machine learning technologies applied to account content. While our computer systems do a pretty good job, sometimes a limited amount of human review is simply unavoidable in order to make sure everything is working exactly as it should.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;最新版的隐私政策更新允许部分 Evernote 员工对应用于账户内容的机器学习技术进行监督。尽管我们的计算机系统表现相当不错，但有时为了确保一切都能正常运行，少量的人为审查是不可避免的。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;The policy was framed as a way for Evernote to ensure the accuracy of its machine-learning technologies. What users took exception to was how the policy was structured. Despite the company’s attempts to backtrack later, the original update to Evernote’s privacy policy clearly stated that users could not opt out of Evernote employees examining their notes.&lt;/p&gt;&#xA;&lt;p&gt;该政策被构建为 Evernote 确保其机器学习技术准确性的一种方式。用户反对的是政策的结构方式。尽管公司后来试图撤回，但 Evernote 隐私政策的原始更新明确指出，用户不能选择不接受 Evernote 员工查看他们的笔记。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-15.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The backlash was powerful and immediate. Many users took to Twitter to point out the intrusive nature of the policy, and many agreed that the company’s response had been [tepid and frustratingly vague](&lt;a href=&#34;https://mashable.com/2016/12/16/evernote-privacy-reversal/&#34;&gt;tepid and frustratingly vague&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;反对非常强烈且立即发生。许多用户在 Twitter 上指出该政策的侵入性本质，许多人认为公司的回应&lt;a href=&#34;https://mashable.com/2016/12/16/evernote-privacy-reversal/&#34;&gt;冷淡且令人沮丧的含糊其词&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;In February 2017, O’Neill confirmed that after several difficult years, &lt;a href=&#34;https://evernote.com/blog/turning-an-elephant/&#34;&gt;Evernote was cash-flow positive&lt;/a&gt;. This might not have been as warmly welcomed as an announcement that the company was once again profitable, but it was an important step for the beleaguered company.&lt;/p&gt;&#xA;&lt;p&gt;2017 年 2 月，O’Neill 确认经过几年的困难时期后，&lt;a href=&#34;https://evernote.com/blog/turning-an-elephant/&#34;&gt;Evernote 实现了正现金流&lt;/a&gt;。这可能不像宣布公司再次盈利那样受到热烈欢迎，但对于这家陷入困境的公司来说，这是重要的一步。&lt;/p&gt;&#xA;&lt;p&gt;Evernote kept a relatively low profile following the machine-learning privacy debacle. A year or so later, in February 2018, Evernote took another important step forward with the launch of Evernote Spaces, the company’s first truly collaborative team-based product.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 在机器学习隐私丑闻之后保持了相对低调。大约一年后，在 2018 年 2 月，Evernote 推出了 Evernote Spaces，这是该公司第一个真正基于团队的协作产品，又向前迈出了重要一步。&lt;/p&gt;&#xA;&lt;p&gt;Spaces’ biggest problem wasn’t the product itself –– it was the fact that Spaces was released about six years too late. Evernote should have developed Spaces back in 2012, rather than wasting time, money, and brand equity with Evernote Market.&lt;/p&gt;&#xA;&lt;p&gt;Spaces 最大的问题不是产品本身 —— 而是 Spaces 发布晚了大约六年。Evernote 应该在 2012 年就开发 Spaces，而不是浪费时间、金钱和品牌价值在 Evernote Market 上。&lt;/p&gt;&#xA;&lt;p&gt;By the time Spaces was released, the team-based productivity market was already saturated with far superior products, including Slack for real-time communication, Box and Google Drive for online storage, and G Suite for personal and team-based collaboration. There was simply no need for Evernote Spaces.&lt;/p&gt;&#xA;&lt;p&gt;当 Spaces 发布时，基于团队的生产力市场已经充斥着许多更优越的产品，包括用于实时通信的 Slack，用于在线存储的 Box 和 Google Drive，以及用于个人和团队协作的 G Suite。根本不需要 Evernote Spaces。&lt;/p&gt;&#xA;&lt;p&gt;Even more ironic was the rationale behind the development of Spaces. In an interview, O’Neill claimed that 70% of Evernote users were using the product in their personal lives and at work. Had Evernote developed Spaces sooner, it could have leveraged the significant overlap between individual and business use-cases to make greater headway into the productivity tools market.&lt;/p&gt;&#xA;&lt;p&gt;更具讽刺意味的是开发 Spaces 背后的理由。O’Neill 在接受采访时声称，70% 的 Evernote 用户在个人生活和工作中使用该产品。如果 Evernote 早点开发 Spaces，它本可以利用个人和商业使用案例之间的显着重叠，在生产力工具市场中取得更大进展。&lt;/p&gt;&#xA;&lt;p&gt;As Evernote sought to get back to its roots as a product that would help users remember everything, the brand underwent a significant overhaul in August 2018. Evernote was in dire need of a clean start, and a major rebrand would embody the company’s new sense of purpose.&lt;/p&gt;&#xA;&lt;p&gt;随着 Evernote 视图回归其作为帮助用户记住一切的产品的根源，该品牌在 2018 年 8 月经历了一次重大的重新设计。Evernote 急需一个干净的开始，而重大的品牌重塑将体现公司的新的使命感。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-16.png&#34; alt=&#34;Source: Evernote Brand&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Evernote’s new branding was fresh, but it did little to solve the company’s underlying problems.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 的新品牌形象是全新的，但它几乎没有解决公司任何潜在的问题。&lt;/p&gt;&#xA;&lt;p&gt;The next month in September, TechCrunch reported that Evernote had lost the majority of its ranking executives within the past month alone, including CFO Vincent Toolan, CPO Erik Wrobel, CTO Anirban Kundu, and Head of HR Michelle Wagner. These departures didn’t just broadcast to the world that Evernote was a company in trouble. They were symptomatic of a company that had completely lost its way.&lt;/p&gt;&#xA;&lt;p&gt;9 月的下一月，TechCrunch 报道说 Evernote 在过去的仅仅一个月内就失去了多名高管，包括 CFO Vincent Toolan、CPO Erik Wrobel、CTO Anirban Kundu，以及人力资源主管 Michelle Wagner。这些人的离职不仅仅向世界宣告 Evernote 是一家陷入困境的公司。这也是公司完全迷失方向的症状。&lt;/p&gt;&#xA;&lt;p&gt;Evernote didn’t know what it should be, only what it shouldn’t be. The company had bet big and won by being on as many devices as possible, but had ignored product reliability. Evernote wasn’t able to keep up with consumer expectations which led the company to expand too rapidly in the wrong directions and, ultimately, it was left behind by newer entrants in the market.&lt;/p&gt;&#xA;&lt;p&gt;Evernote 并不知道它应该是什么，只知道它不应该是什么。公司下了很大的赌注，想尽办法来获胜，但却忽视了产品可靠性。Evernote 无法跟上消费者的期望，这导致公司在不正确的方向上扩张得太快，最终被市场上新兴的竞争者抛在后面。&lt;/p&gt;&#xA;&lt;p&gt;O’Neill’s efforts to right the ship after taking the helm were admirable and badly needed, but it’s painfully clear that Evernote will probably never be the extension of the human mind that Stepan Pachikov first imagined all those years ago.&lt;/p&gt;&#xA;&lt;p&gt;O&amp;rsquo;Neill 在接手后为公司所做的努力是值得尊敬的，也是迫切需要的，但很显然，Evernote 可能永远不会成为 Stepan Pachikov 多年前最初想象中的那个思维延伸工具。&lt;/p&gt;&#xA;&lt;p&gt;The only question now is how Evernote’s story will end and how the company will be remembered.&lt;/p&gt;&#xA;&lt;p&gt;唯一的问题是现在 Evernote 的故事将如何结束，以及这家公司将被如何记住。&lt;/p&gt;&#xA;&lt;h2 id=&#34;where-could-evernote-go-from-here&#34;&gt;Where Could Evernote Go From Here?&lt;/h2&gt;&#xA;&lt;h2 id=&#34;evernote-能去哪里&#34;&gt;Evernote 能去哪里？&lt;/h2&gt;&#xA;&lt;p&gt;Despite the problems that have besieged the company and product for years, Evernote still has a relatively large user base. Where could Evernote go from here?&lt;/p&gt;&#xA;&lt;p&gt;尽管公司及其产品多年来一直面临问题，Evernote 仍然拥有相当庞大的用户群。Evernote 接下来会走向何方？&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Development of a truly collaborative team-based product.&lt;/strong&gt; The most optimistic step that Evernote might take is to double-down on development of Spaces or another team-based collaborative product. Evernote may have won its big bet on mobile in 2006, but it missed the boat on cloud-based collaboration, which profoundly reshaped the personal and professional productivity spaces. If Evernote hopes to survive and become the 100-year company that Phil Libin always thought Evernote could be, it will need to develop a strong, team-based product that can compete with G Suite and similar tools.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Committing to fixing and improving the core Evernote product.&lt;/strong&gt; Evernote’s reputation for bugs and instability is well-deserved. The company neglected critical technical flaws for years, and users took note. Just as Evernote must develop a team-based tool if it hopes to survive, the company will also have to take its legacy technical issues seriously if the company wants to win back the hearts and minds of formerly enthusiastic users.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Finding a buyer.&lt;/strong&gt; Evernote’s fall from grace should be a cautionary tale for any aspiring founder or entrepreneur. At this time, one of Evernote’s few remaining options is to hope that a buyer will acquire the company. Evernote is nowhere near ready to IPO, and while the company is likely to sell for much less than anyone would like, an acquisition would be an ideal end-game for the beleaguered company.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;开发一个真正协作的团队产品&lt;/strong&gt;。Evernote 最乐观的步骤可能是加倍投资于 Spaces 或其他基于团队的协作产品的发展。Evernote 本可能在 2006 年赢得了它在移动设备上的大赌注，但它错过了基于云的协作，这彻底改变了个人和专业生产力空间。如果 Evernote 希望生存下来并成为 Phil Libin 一直认为 Evernote 可以成为的百年公司，它将需要开发一个强大的、基于团队的、能够与 G Suite 和其他类似工具竞争的产品。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;致力于修复和改进 Evernote 核心产品&lt;/strong&gt;。Evernote 因漏洞和不稳定性而名声不佳，这是有充分理由的。公司多年来忽视了关键的技术缺陷，用户也注意到了这一点。正如 Evernote 必须开发一个团队协作工具才能生存下去，如果公司希望重新赢得那些曾经热情洋溢的用户的心，它也必须认真对待遗留的技术问题。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;寻找买家&lt;/strong&gt;。Evernote 的衰落应该是对任何有抱负的创始人或企业家的警示故事。目前，Evernote 剩下的选择之一是希望有买家收购公司。Evernote 远未准备好进行 IPO，尽管公司很可能会以低于所有人期望的价格出售，但被收购将是这家受困公司理想的结局。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;what-can-we-learn-from-evernote&#34;&gt;What Can We Learn from Evernote?&lt;/h2&gt;&#xA;&lt;h2 id=&#34;我们能从-evernote-中学到什么&#34;&gt;我们能从 Evernote 中学到什么？&lt;/h2&gt;&#xA;&lt;p&gt;As sad as it is, Evernote’s story offers plenty of lessons to entrepreneurs hoping to launch similarly ambitious products. What can we learn from Evernote?&lt;/p&gt;&#xA;&lt;p&gt;尽管令人难过，但 Evernote 的故事为希望推出同样雄心勃勃产品的企业家提供了许多教训。我们能从 Evernote 中学到什么？&lt;/p&gt;&#xA;&lt;p&gt;1. &lt;strong&gt;Timing is everything even if it’s accidental.&lt;/strong&gt; By Phil Libin’s own admission, Evernote’s timing was crucial to the company’s success. Had Evernote’s development schedule been even six months off, it would have missed the huge growth driven by its status as a launch application when the iPhone was released in 2007. Evernote’s timing may have been at least partially accidental, but it played an outsized role in the company’s growth trajectory.&lt;/p&gt;&#xA;&lt;p&gt;1. &lt;strong&gt;时机就是一切，即使它是偶然的&lt;/strong&gt;。 根据 Phil Libin 自己的承认，Evernote 的时机对公司的成功至关重要。 如果 Evernote 的开发进度哪怕只晚了六个月，它就会错过在 2007 年 iPhone 发布时作为首发应用所驱动的巨大增长。Evernote 的时机可能至少有一部分是偶然的，但它在公司的发展轨迹中扮演了不成比例的角色。&lt;/p&gt;&#xA;&lt;p&gt;Consider your own product:&lt;/p&gt;&#xA;&lt;p&gt;想想你自己的产品：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Let’s say you have a chance to travel back through time to one year before your product’s launch. What, if anything, would you have done differently? How could you capitalize upon external trends or developments to drive initial growth, as Evernote did?&lt;/li&gt;&#xA;&lt;li&gt;Would timing the release of your product have an impact on initial adoption? Put another way, is there anything you could do (or have done) to time your product’s launch to make a bigger impact?&lt;/li&gt;&#xA;&lt;li&gt;What’s the “tailwind” at your back? Aside from your own hard work, what tailwinds will push your product forward?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;假设你有机会倒退时间，回到你的产品发布前一年。你会做哪些不同的事情吗？你会如何利用外部趋势或发展来推动初始增长，就像 Evernote 所做的那样？&lt;/li&gt;&#xA;&lt;li&gt;产品发布的时间是否会影响产品的初始增长？换句话说，有没有什么你可以做（或已经做了）的来安排产品的发布时间以产生更大的影响？&lt;/li&gt;&#xA;&lt;li&gt;你背后的「顺风」是什么？除了你自己的努力，什么顺风会推动你的产品前进？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;2. &lt;strong&gt;Stay true to your convictions even in the face of overwhelming opposition.&lt;/strong&gt; Phil Libin was criticized for years for giving so much away in Evernote’s freemium product. Contrary to conventional wisdom, Libin was right to be so protective of Evernote’s freemium version. Evernote is a classic — if not the classic — freemium product, and Libin was right to insist on maintaining the free version’s features as long as he did, because it drove growth and encouraged users to become heavily invested in Evernote as a product.&lt;/p&gt;&#xA;&lt;p&gt;2. &lt;strong&gt;即使面对巨大的反对，也要坚持你的信念&lt;/strong&gt;。 多年来，Phil Libin 因为 Evernote 的免费增值产品提供了太多而受到批评。与传统智慧相反，Libin 坚持保护 Evernote 的免费增值版本是正确的。Evernote 是一个经典的 —— 如果不是最经典的 —— 免费增值产品，Libin 坚持维护免费版本的特性是正确的，因为这推动了增长，并鼓励用户对 Evernote 产品进行大量投入精力。&lt;/p&gt;&#xA;&lt;p&gt;Think about your product’s journey thus far:&lt;/p&gt;&#xA;&lt;p&gt;思考一下你产品的旅程到目前为止：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Can you recall a time in which you compromised on a product or business decision that you later came to regret? If so, why did you give in? Did you or your product gain anything by doing so, and conversely, would you have gained anything if you had resisted that pressure?&lt;/li&gt;&#xA;&lt;li&gt;How well does your actual product align with your original vision for the product? Is it true to your vision, or have you lost sight of what your product should be?&lt;/li&gt;&#xA;&lt;li&gt;Libin’s leadership was widely criticized over the years, but he did an excellent job of framing Evernote as a freemium company, especially when dealing with investors. How have you evangelized or advocated for the decisions you’ve made for your product?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你能否回忆起一次你在产品或业务决策上妥协，后来又后悔的经历？如果是这样，你为什么让步？这样做你或你的产品获得了什么，反过来，如果你抵制了这种压力，你会获得什么吗？&lt;/li&gt;&#xA;&lt;li&gt;你的实际产品与你的原始产品愿景有多吻合？它是否忠于你的愿景，还是你已经失去了对你的产品应该是什么的看法？&lt;/li&gt;&#xA;&lt;li&gt;Libin 的领导能力多年来受到了广泛的批评，但他非常出色地将 Evernote 定位为一家免费增值公司，尤其是在与投资者打交道时。你是如何推广或为你的产品的决策辩护的？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;3. &lt;strong&gt;Pay close attention to broader trends even if they don’t affect you right now.&lt;/strong&gt; Evernote bet big — and won — on mobile. Evernote missed out on an immense opportunity by failing to respond to the ongoing evolution of consumer tech and opting to double-down on Evernote as a product for individuals, not teams. This arguably set the company up to fail later on, as there was no way for Evernote to course-correct in time to fend off emerging competitors that capitalized on the team-based collaboration trend.&lt;/p&gt;&#xA;&lt;p&gt;3. &lt;strong&gt;密切关注更广泛的趋势，即使它们现在不直接影响你&lt;/strong&gt;。Evernote 在移动领域下了大赌注并且赢了。但是 Evernote 错失了一个巨大的机会，因为它未能应对消费技术持续的演变，选择加倍投资于将 Evernote 作为一个面向个人而非团队的产品。这可以说为公司后来的失败埋下了伏笔，因为 Evernote 无法及时调整方向，以抵御那些利用团队协作趋势崛起的竞争对手。&lt;/p&gt;&#xA;&lt;p&gt;Consider your product and its place in the broader tech ecosystem:&lt;/p&gt;&#xA;&lt;p&gt;思考你的产品及其在更广泛的科技生态系统中的位置：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What’s the single most important trend in tech facing your product and why?&lt;/li&gt;&#xA;&lt;li&gt;Similarly, what broader technological development poses the greatest risk to your product? How have you mitigated this threat, and could your product move quickly enough in response?&lt;/li&gt;&#xA;&lt;li&gt;How are you innovating on your original vision? Could you go after different segments of your primary market?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你的产品面临的最重要的技术趋势是什么，为什么？&lt;/li&gt;&#xA;&lt;li&gt;同样地，哪些更广泛的技术发展对你的产品构成了最大的风险？你是如何缓解这种威胁的，以及你的产品是否能够快速应对？&lt;/li&gt;&#xA;&lt;li&gt;你是如何在你的原始愿景上进行创新的？你能否追求你主要市场（一级市场）中的不同细分市场？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;elephants-never-forget&#34;&gt;Elephants Never Forget&lt;/h2&gt;&#xA;&lt;h2 id=&#34;大象从不忘记&#34;&gt;大象从不忘记&lt;/h2&gt;&#xA;&lt;p&gt;They say that elephants never forget, and Silicon Valley is no different. Despite its potential and the boldness of vision of the company’s founder, Evernote ultimately lost sight of that vision. By the time it realized this, it was too late.&lt;/p&gt;&#xA;&lt;p&gt;他们说大象永远不会忘记，而硅谷也不例外。尽管 Evernote 具有潜力，并且公司的创始人也有远大愿景，但 Evernote 最终还是失去了对这一愿景的视野。当它意识到这一点时，已经太晚了。&lt;/p&gt;&#xA;&lt;p&gt;Despite still having a loyal base of hardcore users, Evernote’s future is far from certain. Whether the company can dig itself out of its current predicament remains to be seen, but there’s little doubt that Evernote will not be remembered kindly.&lt;/p&gt;&#xA;&lt;p&gt;尽管仍然拥有忠实的核心用户群，Evernote 的未来仍远非确定。公司能否摆脱目前的困境还有待观察，但毫无疑问，Evernote 不会被人们温柔地记住。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Favicon 最佳实践</title>
      <link>http://localhost:1313/p/how-to-favicon/</link>
      <pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/how-to-favicon/</guid>
      <description>&lt;p&gt;Favicon 是 favorite icon 的缩写，在网站的用户侧，用户看到的一个图标实际上是由很多很多个图标文件组成，这主要是为了适配各种各样的设备和屏幕。&lt;/p&gt;&#xA;&lt;p&gt;使用 Favicon 生成器可以便捷的生成非常全面的 Favicon 集，但是这显然不是一个优雅的解。Andrey Sitnik 提出了下面这个最小化的 Favicon 配置，这些图标将在所有情况下和所有浏览器中工作，即使在某些边缘情况，这仍然有效，只是不是 100% 完美。&lt;/p&gt;&#xA;&lt;h2 id=&#34;最小化配置&#34;&gt;最小化配置&lt;/h2&gt;&#xA;&lt;p&gt;大多数情况下，只需要 5 个图标（各种文件格式）和一个 JSON 文件。&lt;/p&gt;&#xA;&lt;p&gt;首先在 HTML 代码中使用如下配置：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#8839ef&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;icon&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;/favicon.ico&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;sizes&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;32x32&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#8839ef&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;icon&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;/icon.svg&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;image/svg+xml&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#8839ef&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;apple-touch-icon&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;/apple-touch-icon.png&amp;#34;&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#9ca0b0;font-style:italic&#34;&gt;&amp;lt;!-- 180×180 --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#8839ef&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;manifest&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;/manifest.webmanifest&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而对应的 manifest 则使用如下配置：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#9ca0b0;font-style:italic&#34;&gt;// manifest.webmanifest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#9ca0b0;font-style:italic&#34;&gt;&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;#34;icons&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    { &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;#34;src&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;/icon-192.png&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;image/png&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;#34;sizes&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;192x192&amp;#34;&lt;/span&gt; },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    { &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;#34;src&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;/icon-512.png&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;image/png&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;#34;sizes&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;512x512&amp;#34;&lt;/span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置解释&#34;&gt;配置解释&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;favicon.ico&lt;/code&gt; 适用于那些古老的浏览器，注意一定将该文件放在网站根目录下，即 &lt;code&gt;https://rokcso.com/favicon.ico&lt;/code&gt;，尺寸建议始终坚持使用 &lt;code&gt;32x32&lt;/code&gt; 大小。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;icon.svg&lt;/code&gt; 一个文件就可以提供给现代浏览器明/暗两个版本的图标，SVG 是一种矢量格式，它描述的是曲线而非像素，SVG 本质上是一种 XML 格式的文件，可以包含一个 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 标签来描述 CSS，所以可以使用 CSS 的一些特性（包含媒体查询），比如利用 &lt;code&gt;@media (prefers-color-scheme: dark)&lt;/code&gt; 来&lt;a href=&#34;https://web.dev/articles/building/an-adaptive-favicon?hl=zh-cn&#34;&gt;切换同一个图标的明/暗版本&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;180x180&lt;/code&gt; 大小的 PNG 图像适用于 Apple 设备，Apple touch icon 是 Apple 设备将网页添加到桌面快捷方式时显示的 App icon，尺寸使用 &lt;code&gt;180x180&lt;/code&gt;，即使在某些设备上被压缩后也能得到一个较高质量的图标，如果给 Apple touch icon 提供 20px 的 padding 填充并添加一些背景色，会让图标在视觉上更好看。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;manifest.webmanifest&lt;/code&gt; 包含适用于 Android 设备的 &lt;code&gt;192x192&lt;/code&gt; 和 &lt;code&gt;512x512&lt;/code&gt; 尺寸的 PNG 图像，与 Apple touch icon 类似，这种格式的图标来自于 Google PWA 的倡议，都是应用于将网站添加为桌面快捷方式时作为 App icon 使用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;如何制作-favicon&#34;&gt;如何制作 Favicon&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-准备-svg-文件&#34;&gt;1. 准备 SVG 文件&lt;/h3&gt;&#xA;&lt;p&gt;一切的开始都是图标的 SVG 文件，注意确保该 SVG 是正方形，具体如何制作 SVG 图标这里不介绍。&lt;/p&gt;&#xA;&lt;p&gt;将图标保存为 &lt;code&gt;icon.svg&lt;/code&gt; 后，使用文本编辑器（比如 Visual Studio Code）打开该文件，文件内容是使用 &lt;code&gt;&amp;lt;svg&amp;gt; ... &amp;lt;/svg&amp;gt;&lt;/code&gt; 标签包裹着 &lt;code&gt;&amp;lt;path /&amp;gt;&lt;/code&gt; 标签的 XML 代码，图标的内容就是通过 &lt;code&gt;&amp;lt;path /&amp;gt;&lt;/code&gt; 实现（绘制曲线）的。&lt;/p&gt;&#xA;&lt;p&gt;我们可以在 &lt;code&gt;&amp;lt;svg&amp;gt; ... &amp;lt;/svg&amp;gt;&lt;/code&gt; 中第一层级添加一个 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 标签，使用 CSS 语法来添加一个媒体查询，并且设置暗色主题下 SVG 的样式。比如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;svg&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;http://www.w3.org/2000/svg&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;viewBox=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;0 0 447 428&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .favicon-stroke {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            stroke-width: 8px;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            stroke: #8929ff;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        #skull-outline { fill: white }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        #eyes-and-nose, #hat-outline { fill: #8929ff }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        #hat-fill, #hat-bill { fill: #e662e6 }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#9ca0b0;font-style:italic&#34;&gt;&amp;lt;!-- 设置暗色主题下 SVG 图标的样式 --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        @media (prefers-color-scheme: dark) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .favicon-stroke { stroke: #343a40 }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            #skull-outline { fill: #adb5bd }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            #hat-outline { fill: #343a40 }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            #eyes-and-nose { fill: #343a40 }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;g&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;skull&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;path&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;skull-outline&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;favicon-stroke&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;stroke-linejoin=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;round&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;d=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;M19.62 188.39A166.62 166.62 0 0 1 186.24 21.77c115.25 0 166.61 74.59 166.61 166.62 0 1.83-.08 3.64-.13 5.46h.13s.68 175.09.68 178.65c0 30.11-16.26 41.67-36.32 41.67-12.7 0-35.22-3.93-36.22-32.69h-.2c-1 28.76-16.81 32.69-36.22 32.69-18 0-32.87-6.78-35.77-32.53-2.9 25.75-17.8 32.53-35.8 32.53-20.06 0-36.32-11.56-36.32-41.67 0-2.48.36-24.88.36-24.88A166.68 166.68 0 0 1 19.62 188.39Z&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8839ef&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;path&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;eyes-and-nose&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;d=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;M180.77 205.76c0 23.64 12.84 42.81 28.68 42.81s28.68-19.17 28.68-42.81-12.84-42.82-28.68-42.82-28.68 19.17-28.68 42.82M275 205.76c0 23.64 12.84 42.81 28.68 42.81s28.68-19.17 28.68-42.81-12.84-42.82-28.68-42.82S275 182.11 275 205.76M264.51 276.85s-29.26 43.53-20.12 49.23c7.07 4.41 20.49-16.71 20.49-16.71s12.82 22.58 16.76 20c16.24-10.71-17.13-52.5-17.13-52.5&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;path&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;jawline&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;favicon-stroke&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;fill=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;stroke-linecap=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;round&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;d=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;M114.92 284.33c22.54-1 22 7 22 62.48&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8839ef&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;/g&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-创建-ico-文件&#34;&gt;2. 创建 ICO 文件&lt;/h3&gt;&#xA;&lt;p&gt;将第 1 步中的 &lt;code&gt;icon.svg&lt;/code&gt; 转换为 &lt;code&gt;32x32&lt;/code&gt; 尺寸的 &lt;code&gt;favicon.ico&lt;/code&gt; 文件。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-创建-png-文件&#34;&gt;3. 创建 PNG 文件&lt;/h3&gt;&#xA;&lt;p&gt;将第 1 步中的 &lt;code&gt;icon.svg&lt;/code&gt; 转换为 &lt;code&gt;512x512&lt;/code&gt; 和 &lt;code&gt;192x192&lt;/code&gt; 尺寸的 PNG 文件。&lt;/p&gt;&#xA;&lt;p&gt;将第 1 步中的 &lt;code&gt;icon.svg&lt;/code&gt; 中的图像本身调整为 &lt;code&gt;140x140&lt;/code&gt; 尺寸，图像的画布调整为 &lt;code&gt;180x180&lt;/code&gt; 导出尺寸为 &lt;code&gt;180x180&lt;/code&gt; 的 PNG 文件，作为 Apple touch icon 使用。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-优化文件大小&#34;&gt;4. 优化文件大小&lt;/h3&gt;&#xA;&lt;p&gt;使用你喜欢的工具在保证图像质量的前提下尽可能的压缩文件大小，推荐使用 Google 开源的 &lt;a href=&#34;https://squoosh.app/&#34;&gt;Squoosh&lt;/a&gt; 图像压缩工具，网站、免费、可离线使用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://evilmartians.com/chronicles/how-to-favicon-in-2021-six-files-that-fit-most-needs&#34;&gt;How to Favicon in 2024: Six files that fit most needs&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>译&gt; Duolingo 是如何重新点燃用户增长的</title>
      <link>http://localhost:1313/p/duolingo-user-growth/</link>
      <pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/duolingo-user-growth/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文由 AI 翻译，人工修正。&lt;/p&gt;&#xA;&lt;p&gt;原文链接：&lt;a href=&#34;https://www.lennysnewsletter.com/p/how-duolingo-reignited-user-growth&#34;&gt;https://www.lennysnewsletter.com/p/how-duolingo-reignited-user-growth&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;I was at a small event a few months back where &lt;a href=&#34;https://www.linkedin.com/in/jorgemazal/&#34;&gt;Jorge Mazal&lt;/a&gt; (former CPO of Duolingo) shared the story behind Duolingo’s growth reaccelerating. I was captivated. I’ve never seen a growth story like this before—4.5x growth for a mature product, driven by a small handful of product changes, rooted in an innovative growth model, and explained in such actionable detail. I asked Jorge if he’d be willing to share (and expand on) the story with a broader audience, and I’m so happy he agreed. Many products already look to Duolingo for inspiration, and I suspect this story will only increase that trend. Enjoy!&lt;/p&gt;&#xA;&lt;p&gt;在我几个月前参加的一个小活动上，&lt;a href=&#34;https://www.linkedin.com/in/jorgemazal/&#34;&gt;Jorge Mazal&lt;/a&gt;（Duolingo 的前 CPO）分享了他关于 Duolingo 增长重新加速的故事。我被深深吸引。我从未见过这样的增长故事：一个成熟产品的增长达到了之前的 4.5 倍，这仅仅得益于一小部分产品变化，而这些变化根植于一个创新的增长模型，Jorge 的分享解释得如此详细，以至于可以直接付诸行动。我问 Jorge 是否愿意将这个故事分享给更广泛的听众，并对此进行扩展，我非常高兴他同意了。许多产品已经以 Duolingo 为灵感，我认为这个故事只会增加这一趋势。接下来请尽情享受吧！&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;I joined Duolingo as the Head of Product in late 2017. Duolingo was already the most downloaded education app in the world, with hundreds of millions of users, fulfilling its mission to “develop the best education in the world and make it universally available.” However, user growth was slowing down. By mid-2018, daily active users (DAU) were growing at a single-digit rate year-over-year, which was troubling, given the explosive growth the company had seen in the past. This was a problem for a startup with investors anxious to see fast monetization growth.&lt;/p&gt;&#xA;&lt;p&gt;我于 2017 年底加入 Duolingo，担任产品部门负责人。当时，Duolingo 已是全球下载量最大的教育应用，拥有数以亿计的用户，正致力于实现其「打造世界一流教育，并使之普及」的使命。然而，用户增长开始放缓。到 2018 年年中，日活跃用户（DAU）的同比增长率降至个位数，这对于一家曾见证过快速增长的初创公司而言，无疑是一个令人担忧的信号。这一情况也让那些期待看到快速货币化增长的投资者感到忧虑。&lt;/p&gt;&#xA;&lt;p&gt;In this post I’ll cover some of our early failures and then our first big wins that helped us turn around growth, including launching leaderboards, refocusing on push notifications, and optimizing the “streak” feature. These, together with several other efforts across Product and Marketing, helped us grow DAU by 4.5x over four years. Robust organic user growth supercharged Duolingo toward its 2021 IPO.&lt;/p&gt;&#xA;&lt;p&gt;在本文中，我将分享我们早期的一些失败经历，并介绍帮助我们实现增长逆转的首次重大成功，包括推出排行榜、重新聚焦于推送通知以及优化「连胜」功能。这些措施，加上产品和营销方面的其他努力，共同帮助我们实现了日活跃用户数在四年内增长 4.5 倍的成就。这种强劲的自然用户增长为 Duolingo 在 2021 年的 IPO 提供了强劲动力。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This article is an in-depth look into that journey. It is my hope that sharing this work will help others find their own growth breakthroughs faster.&lt;/p&gt;&#xA;&lt;p&gt;这篇文章详细探讨了这段旅程。我希望通过分享这些内容，能够帮助其他人更快地实现自己的增长突破。&lt;/p&gt;&#xA;&lt;h2 id=&#34;phase-1-increasing-gamification&#34;&gt;Phase 1: Increasing gamification&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第一阶段增加游戏化&#34;&gt;第一阶段：增加游戏化&lt;/h2&gt;&#xA;&lt;p&gt;Our first attempt at reigniting growth was focused on improving retention, i.e. fixing our “leaky bucket” problem. We prioritized working on retention over new-user acquisition because all of our new-user acquisition was organic, and, at the time, we didn’t have an obvious lever to pull to supercharge that. Also, some of us had a suspicion that we could improve retention through gamification. There were two main reasons why this felt like the right approach to me. First, Duolingo had already implemented several gamification mechanics successfully, such as the progression system on the home screen, streaks, and an achievements system. And second, top digital games at the time had much higher retention rates than our product, which I took as evidence that we hadn’t yet reached the ceiling for gamification’s impact.&lt;/p&gt;&#xA;&lt;p&gt;我们第一次尝试重新点燃增长的重点是解决留存率问题，即修复我们的「漏桶」。我们优先考虑留存率而不是新用户获取，因为我们的新用户获取是自然的，而且当时我们没有明显的杠杆可以撬动来加速这一进程。此外，我们中的一些人认为可以通过游戏化来提高留存率。这对我来说感觉是正确的做法，有两个主要原因。首先，Duolingo 已经成功实施了多种游戏化机制，比如主屏幕上的进度系统、连胜和成就系统。其次，当时最受欢迎的数字游戏比我们的产品有更高的留存率，这表明我们还没有达到游戏化的极限。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-2.png&#34; alt=&#34;Duolingo 的游戏化首页和成就页面&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Armed with a short presentation I co-created with our chief designer, we were able to get just enough buy-in from the rest of the executive team to create a new team, the Gamification Team. The team consisted of an engineering manager, an engineer, a designer, an APM, and me.&lt;/p&gt;&#xA;&lt;p&gt;拿着与我们的首席设计师合作制作的一个简短演示，我们成功说服了其他执行团队成员，从而组建了一个新的团队：游戏化团队。这个团队由一名工程经理、一名工程师、一名设计师、一名 APM 和我组成。&lt;/p&gt;&#xA;&lt;p&gt;But there was one small issue: we had no idea which incremental gamification mechanics would work for Duolingo.&lt;/p&gt;&#xA;&lt;p&gt;但有一个小问题：我们完全不知道哪种渐进式游戏化机制对 Duolingo 有效。&lt;/p&gt;&#xA;&lt;p&gt;Our team at the time was hooked on a game called Gardenscapes, a mobile, match-3 puzzle game similar to Candy Crush. This mobile game became our first inspiration.&lt;/p&gt;&#xA;&lt;p&gt;我们当时团队沉迷于一款名为 Gardenscapes 的移动端三消游戏，类似于 Candy Crush。这款移动游戏成为了我们的第一个灵感来源。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-3.png&#34; alt=&#34;一个花园场景的消除谜题游戏&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;As we looked at the different game mechanics in Gardenscapes, we didn’t really know what we were looking for—we just knew that Gardenscapes seemed stickier than Duolingo, and we saw several parallels. A three-minute Duolingo lesson felt similar to a Gardenscapes match-3 level, and Duolingo and Gardenscapes both used progress bars to provide visual feedback on how close the user was to completing the session. Gardenscapes, however, paired its progress bar with a moves counter, which Duolingo didn’t do. The moves counter allowed users only a finite number of moves to complete a level, which added a sense of scarcity and urgency to the gameplay. We decided to incorporate the counter mechanic into our product. We gave our users a finite number of chances to answer questions correctly before they had to start the lesson over.&lt;/p&gt;&#xA;&lt;p&gt;当我们研究 Gardenscapes 中的各种游戏机制时，我们并不清楚我们在寻找什么，我们只是感觉到 Gardenscapes 比 Duolingo 更有吸引力，我们发现了几个相似之处。一个三分钟的 Duolingo 课程体验类似于 Gardenscapes 的一个游戏关卡，Duolingo 和 Gardenscapes 都使用进度条来显示用户完成当前任务的进度。然而，Gardenscapes 在进度条旁边加入了移动次数的显示，这是 Duolingo 所没有的。移动次数的限制让用户在完成关卡时感到时间的紧迫和资源的稀缺。因此，我们决定在我们的产品中加入这种计数器机制。 我们给了用户有限的机会来正确回答问题，失败之后他们不得不重新开始课程。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It took our team a couple of months of work to add the counter. With the release of the update, I expectantly waited for an unmitigated success. Depressingly, the result of all that effort was completely neutral. No change to our retention. No increase in DAU. We hardly got any user feedback at all. I was deflated. The greatest effect the initiative had was on our team. After the results came out, we quickly fell into dissension. Some wanted to continue iterating on the idea, while others wanted to pivot. The team almost immediately (and dramatically) disbanded, and the idea was abandoned. It was pretty awful. The one silver lining of this failure was that I learned a lot about the company culture and about how to improve my personal leadership style—though that’s for a different article.&lt;/p&gt;&#xA;&lt;p&gt;我们的团队花了几个月的时间来添加计数器。随着更新的发布，我满怀期待地等待着一个无可指责的成功。令人沮丧的是，所有这些努力的结果是完全中性的。我们的留存率没有变化。日活跃用户数没有增加。我们几乎没有任何用户反馈。我感到非常沮丧。这个举措最大的影响是我们的团队。结果出来后，我们很快就陷入了分歧。一些人想继续对这个想法进行迭代，而另一些人则想转向其他方向。团队几乎立即（并且戏剧性地）解散了，这个想法也被放弃了。这相当糟糕。这次失败的唯一积极之处是我学到了很多关于公司文化和如何改进我的个人领导风格的知识，尽管那是另一篇文章的内容。&lt;/p&gt;&#xA;&lt;h2 id=&#34;phase-2-referrals&#34;&gt;Phase 2: Referrals&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第二阶段推荐计划&#34;&gt;第二阶段：推荐计划&lt;/h2&gt;&#xA;&lt;p&gt;Feeling burned after our gamification effort, we completely pivoted away from improving retention and put together a new product team focused on acquiring new users, called the Acquisition Team. At the time, Uber was doing well with user acquisition and had reputedly grown largely because of its referral program. Inspired by this, we created a referral program similar to Uber’s. The reward was a free month of our premium subscription, Super Duolingo (at the time, it was called Duolingo Plus). Seemed like a pretty good offer to us!&lt;/p&gt;&#xA;&lt;p&gt;我们的游戏化努力失败后，我们完全放弃了提高留存率，组建了一个新的产品团队，专注于获取新用户，称为获取团队。当时，Uber 在用户获取方面做得很好，据报道，它的用户增长主要得益于其推荐计划。受到启发，我们创建了一个类似于 Uber 的推荐计划。奖励是免费提供一个月我们的高级订阅，超级 Duolingo（当时，它被称为 Duolingo Plus）。对我们来说，这似乎是一个相当不错的提议！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;We implemented the feature and hoped our second attempt would be more successful. Instead, new users increased by only 3%. It was positive, but not the type of breakthrough we needed. Still, the team doubled down and pushed through, shipping iterations to the referral program and making some other bets, but no avail.&lt;/p&gt;&#xA;&lt;p&gt;我们实现了这个功能，并希望我们的第二次尝试会更加成功。然而，新用户只增加了 3%。这是一个积极的结果，但不是我们所需要的突破性进展。尽管如此，团队还是加倍努力并坚持到底，将推荐计划持续迭代，并进行了其他一些尝试，但都没有成功。&lt;/p&gt;&#xA;&lt;p&gt;While the team continued to iterate, it became clear to me that we had to find a different approach to tackle our growth problem.&lt;/p&gt;&#xA;&lt;p&gt;当团队继续迭代时，我清楚地意识到我们必须找到一种不同的方法来解决我们的增长问题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;time-to-regroup&#34;&gt;Time to regroup&lt;/h2&gt;&#xA;&lt;h2 id=&#34;总结时间&#34;&gt;总结时间&lt;/h2&gt;&#xA;&lt;p&gt;The aftermath of these back-to-back failures in only a few months was a period of reflection for me about making better product bets.&lt;/p&gt;&#xA;&lt;p&gt;这些连续的失败在短短几个月内发生，让我反思如何做出更好的产品决策。&lt;/p&gt;&#xA;&lt;p&gt;In hindsight, it became clear why the Gardenscapes moves counter was not a good fit for our product. When you are playing Gardenscapes, each move feels like a strategic decision, because you have to outmaneuver dynamic obstacles to find a path to victory. But strategic decision-making isn’t required to complete a Duolingo lesson—you mostly either know the answer to a question or you don’t. Because there wasn’t any strategy to it, the Duolingo moves counter was simply a boring, tacked-on nuisance. It was the wrong gamification mechanic to adopt into Duolingo. I realized that I had been so focused on the similarities between Gardenscapes and Duolingo that I had failed to account for the importance of the underlying differences.&lt;/p&gt;&#xA;&lt;p&gt;事后看来，很明显为什么 Gardenscapes 的移动计数器不适合我们的产品。当你玩 Gardenscapes 时，每一次移动都感觉像是一个战略决策，因为你必须智取动态障碍物，找到通往胜利的道路。但是完成一个 Duolingo 课程并不需要战略决策，你大多要么知道问题的答案，要么不知道。因为没有策略，Duolingo 的移动计数器只是一个无聊的、附加的麻烦。这是错误的游戏化机制，不适合 Duolingo 采用。我意识到我一直在专注于 Gardenscapes 和 Duolingo 之间的相似之处，以至于我未能考虑到基础差异的重要性。&lt;/p&gt;&#xA;&lt;p&gt;It also did not take long to understand why our referral program did not produce Uber-like success. Referrals work for Uber because riders are paying for rides on a never-ending pay-as-you-go system. A free ride is a constant incentive. For Duolingo, we were trying to incentivize users by offering a free month of Super Duolingo. However, our best and most active users already had Super Duolingo, and we couldn’t give them a free month when they were already in a plan. This meant that our strategy, which needed to rely on our best users, actually excluded them.&lt;/p&gt;&#xA;&lt;p&gt;很快我们就明白了为什么我们的推荐计划没有取得像 Uber 那样的成功。推荐机制在 Uber 有效，是因为在需要支付费用才能使用的按需系统中，免费乘车是一个持续的激励。对于多邻国来说，我们试图通过提供一个月免费的超级 Duolingo 来激励用户。然而，我们最优质和最活跃的用户已经有了超级 Duolingo，我们不能在他们已经订阅的情况下给他们一个免费月。这意味着我们的策略，本应该依赖于我们最好的用户，实际上却排除了他们。&lt;/p&gt;&#xA;&lt;p&gt;In both of these situations, we had borrowed successful features from other products, but the wrong way. We had failed to account for how a change in context can impact the success of a feature. I came away from these attempts realizing that I needed a better understanding of how to borrow ideas from other products intelligently. Now when looking to adopt a feature, I ask myself:&lt;/p&gt;&#xA;&lt;p&gt;在这两种情况下，我们都从其他产品中借用了其成功功能，但方式不对。我们没有考虑到环境变化如何影响功能的成功。我从这些尝试中意识到，我需要更好地理解如何智能地从其他产品中借鉴想法。现在，当我想采用一个功能时，我会问自己：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Why is this feature working in that product?&lt;/li&gt;&#xA;&lt;li&gt;Why might this feature succeed or fail in our context, i.e. will it translate well?&lt;/li&gt;&#xA;&lt;li&gt;What adaptations are necessary to make this feature succeed in our context?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;为什么这个功能在那个产品中有效？&lt;/li&gt;&#xA;&lt;li&gt;为什么这个功能在我们的环境中可能成功或失败，也就是说，它能很好地转换吗？&lt;/li&gt;&#xA;&lt;li&gt;为了使这一功能在我们的环境中取得成功，需要哪些适应性改变？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In other words, we needed to use better judgment in adapting when adopting. Being more systematic in just this area would have made a big difference in what gamification mechanics we chose to pursue. And we would have probably been dissuaded from focusing on referrals altogether. I was committed to making sure our next attempts would be more methodical. We needed to be better at basing our decisions on data, insights, and foundational principles.&lt;/p&gt;&#xA;&lt;p&gt;换句话说，我们需要在采纳时做出更好的判断。在这个领域更加系统化，将会对我们选择追求的游戏化机制产生很大的影响。我们可能就不会被说服去专注于推荐计划了。我致力于确保我们的下一次尝试会更加有条不紊。我们需要在基于数据、洞察和基础原则做出决策方面做得更好。&lt;/p&gt;&#xA;&lt;h2 id=&#34;phase-3-using-data-and-models&#34;&gt;Phase 3: Using data and models&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第三阶段使用数据和模型&#34;&gt;第三阶段：使用数据和模型&lt;/h2&gt;&#xA;&lt;p&gt;Duolingo has always excelled at collecting data, especially in support of A/B testing. But there hadn’t been much effort put into using the data for insights generation. Having seen from the inside how Zynga and MyFitnessPal used data, I felt we could use Duolingo’s data to find a North Star metric and get the breakthrough we needed.&lt;/p&gt;&#xA;&lt;p&gt;Duolingo 一直擅长收集数据，特别是在支持 A/B 测试方面。但是，在利用数据生成洞察力方面并没有投入太多努力。从内部看到了 Zynga 和 MyFitnessPal 如何使用数据，我觉得我们可以利用 Duolingo 的数据找到一个北极星指标，并获得我们需要的突破。&lt;/p&gt;&#xA;&lt;p&gt;My time at Zynga and MyFitnessPal gave us inspiration on how to segment and model our users by engagement level. Zynga separated their users and measured retention based on the following weekly retention metrics:&lt;/p&gt;&#xA;&lt;p&gt;Zynga 和 MyFitnessPal 给了我们关于如何根据参与度水平对用户进行细分和建模的灵感。Zynga 将他们的用户分开，并根据以下每周保留指标测量保留率：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Current users retention rate (CURR): The chance a user comes back this week if they came to the product each of the past two weeks&lt;/li&gt;&#xA;&lt;li&gt;New users retention rate (NURR): The chance a user comes back this week if they were new to the product last week&lt;/li&gt;&#xA;&lt;li&gt;Reactivated user retention rates (RURR): The chance a user comes back this week if they reactivated last week&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当前用户留存率（CURR）：用户在过去两周内每周都访问产品的情况下，本周返回产品的概率&lt;/li&gt;&#xA;&lt;li&gt;新用户留存率（NURR）：如果用户上周是新产品的新用户，他们这周返回产品的几率&lt;/li&gt;&#xA;&lt;li&gt;激活用户留存率（RURR）：用户如果上周激活，本周返回的概率&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Later, when I worked at MyFitnessPal, I found that they had adopted and expanded Zynga’s retention work. They not only used CURR, NURR, and RURR to measure growth but also to model future scenarios. They also added SURR:&lt;/p&gt;&#xA;&lt;p&gt;后来，当我为 MyFitnessPal 工作时，我发现他们采纳并扩展了 Zynga 的留存。他们不仅使用 CURR、NURR 和 RURR 来衡量增长，而且还用来建模未来场景。他们还添加了 SURR：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Resurrected user retention rate (SURR): The chance a user comes back this week if they resurrected (from a longer absence) last week&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;复活用户留存率（SURR）：如果用户上周重新活跃（从较长时间的流失），他们这周回来的几率&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;I hypothesized that we could use these metrics at Duolingo as a starting point to create a more sophisticated model, and use that model to identify a North Star metric. Working with the data scientist and the engineer manager in the Acquisition Team, we came up with the model below. We used the same retention rates as Zynga and MyFitnessPal, but we tweaked from a weekly view to a daily view and we added several more metrics.&lt;/p&gt;&#xA;&lt;p&gt;我假设我们可以将这些指标作为 Duolingo 的起点，创建一个更复杂的模型，并使用该模型来确定一个北极星指标。与获取团队的数据科学家和工程师经理合作下，我们提出了以下模型。我们使用了与 Zynga 和 MyFitnessPal 相同的留存率，但我们从每周视图调整到每日视图，并添加了几个其他指标。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The blocks, &lt;em&gt;or buckets&lt;/em&gt;, represent different user segments with different levels of engagement. And every single user who has ever used the product is in one, and only one, bucket on any given day. That means the buckets in the model are MECE (mutually exclusive, collectively exhaustive) in representing the entire base of users who have ever used Duolingo. The arrows measure the movement of users between the buckets (these include CURR, NURR, RURR, and SURR, but evolved into daily retention rates rather than weekly). Combining the buckets and the arrows, the model creates an almost closed-circuit system, with new users being the only break.&lt;/p&gt;&#xA;&lt;p&gt;块（或者桶）代表不同参与度的不同用户细分市场。而且，在任何给定的一天，每个曾经使用过产品的用户都只在一个块中。这意味着模型中的块在代表曾经使用过 Duolingo 的所有用户方面是 MECE（相互排斥，完全穷尽）的。箭头代表用户在块之间的流动（这些包括 CURR、NURR、RURR 和 SURR，但已经演变成每日留存率而不是每周）。结合块和箭头，模型创建了一个几乎封闭的循环系统，新用户是唯一的突破。&lt;/p&gt;&#xA;&lt;p&gt;Conveniently, the top four buckets of the model add up to DAU. Those buckets are defined as:&lt;/p&gt;&#xA;&lt;p&gt;方便的是，模型的前四个块加起来等于 DAU。这些块被定义为：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;New users: first day of engagement ever in the app&lt;/li&gt;&#xA;&lt;li&gt;Current users: engaged today and at least one other time in the prior 6 days&lt;/li&gt;&#xA;&lt;li&gt;Reactivated users: first day of engagement after being away for 7-29 days&lt;/li&gt;&#xA;&lt;li&gt;Resurrected users: first day of engagement after being away for 30 days or longer&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;新用户：在应用中活跃的第一天&lt;/li&gt;&#xA;&lt;li&gt;当前用户：今日活跃，且过去 6 天内至少活跃过一次&lt;/li&gt;&#xA;&lt;li&gt;重新激活的用户：在离开 7-29 天后后重新活跃的第一天&lt;/li&gt;&#xA;&lt;li&gt;复活用户：在离开 30 天或更长时间后重新活跃的第一天&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The remaining three buckets represent users who were not active today and have different degrees of inactivity.&lt;/p&gt;&#xA;&lt;p&gt;剩余的三个块代表今天不活跃的用户，并且具有不同程度的不活跃。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;At-risk WAU: inactive today, but active in at least one of the prior 6 days&#xA;&lt;ul&gt;&#xA;&lt;li&gt;At-risk WAU + DAU = WAU&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;At-risk MAU: inactive in the past seven days, but active in at least one of the prior 23 days&#xA;&lt;ul&gt;&#xA;&lt;li&gt;At-risk MAU + WAU = MAU&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Dormant users: inactive in the past 31 days or longer&#xA;&lt;ul&gt;&#xA;&lt;li&gt;MAU + dormant users =  Total user base&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;高危 WAU：今天不活跃，但前 6 天中至少有一天活跃&#xA;&lt;ul&gt;&#xA;&lt;li&gt;高危 WAU + DAU = WAU&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;高危 MAU：过去 7 天不活跃，但在过去 23 天中至少有一天活跃&#xA;&lt;ul&gt;&#xA;&lt;li&gt;高危 MAU + WAU = MAU&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;休眠用户：过去 31 天或更长时间内不活动&#xA;&lt;ul&gt;&#xA;&lt;li&gt;MAU + 休眠用户 = 总用户群&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The fact that DAU, WAU, and MAU can easily be calculated from these buckets made it easy to model them over time. This is a key feature of the model. Additionally, by manipulating the rates represented by the arrows, we can model the compounding and cumulative impact of moving these rates over time; in other words, the rates are the levers product teams can pull to grow DAU.&lt;/p&gt;&#xA;&lt;p&gt;这些桶中的 DAU、WAU 和 MAU 很容易计算，这使得在时间上建模变得容易。这是模型的一个关键特性。此外，通过操纵由箭头表示的比率，我们可以模拟这些比率随时间的复合和累积影响；换句话说，比率是产品团队可以拉动以增长 DAU 的杠杆。&lt;/p&gt;&#xA;&lt;p&gt;With the model created, we started taking daily snapshots of data to create a history of how all of these user buckets and retention rates had evolved on a day-by-day basis over the past several years. With this data, we could create a forward-looking model and then perform a sensitivity analysis to predict which levers would have the biggest impact on DAU growth. We ran a simulation for each rate, where we moved a single rate 2% every quarter for three years, holding all the other rates constant.&lt;/p&gt;&#xA;&lt;p&gt;模型创建后，我们开始每天对数据进行快照，以创建一个历史记录，记录过去几年中所有这些用户块和留存率是如何逐日演变的。有了这些数据，我们能够创建一个前瞻性模型，然后进行敏感性分析，以预测哪些杠杆将对 DAU 增长产生最大的影响。我们对每个比率运行了一个模拟，其中我们将单一比率每季度移动 2%，为期三年，保持所有其他比率不变。&lt;/p&gt;&#xA;&lt;p&gt;Below are the results of our first simulation. It shows how those small 2% movements on each lever impacted forecasted MAU and DAU.&lt;/p&gt;&#xA;&lt;p&gt;以下是我们的第一次模拟结果。它显示了每个操纵杆上 2% 的小幅度移动如何影响了预测的 MAU 和 DAU。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;We immediately saw that CURR had a gigantic impact on DAU—5 times the impact of the second-best metric. In hindsight, the CURR finding made sense, because the Current User bucket has an interesting characteristic: current users who stay active return to the same bucket.&lt;/p&gt;&#xA;&lt;p&gt;我们立即看到 CURR 对 DAU 产生了巨大的影响：其影响是第二好指标的 5 倍。事后看来，CURR 的发现是有道理的，因为当前用户块有一个有趣的特性：保持活跃的当前用户会返回到同一个块中。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This produces a compounding effect, which means that CURR is much harder to move, but when it does, it will have a greater impact. Based on this analysis, we knew that CURR was the metric we had to move in order to get that strategic breakthrough we wanted. We decided to create a new team, the Retention Team, with CURR as its North Star metric.&lt;/p&gt;&#xA;&lt;p&gt;这会产生一个复合效应，这意味着 CURR 更难移动，但当它发生时，它将产生更大的影响。基于这一分析，我们知道我们必须移动 CURR 才能获得我们想要的战略突破。我们决定创建一个新的团队，即留存团队，以 CURR 作为其北极星指标。&lt;/p&gt;&#xA;&lt;p&gt;One of the biggest benefits of focusing on CURR was deciding not to work on things that seemed paramount before, especially new-user retention. This was a huge mindset shift for a company that had tremendous success spending years running the bulk of its growth experiments on new users first.&lt;/p&gt;&#xA;&lt;p&gt;专注于 CURR 的最大好处之一是决定不从事那些之前看似至关重要的项目，特别是新用户留存。对于一家多年来一直在新用户身上进行大部分增长实验并取得巨大成功的公司来说，这是一个巨大的思维转变。&lt;/p&gt;&#xA;&lt;p&gt;Another big lesson was seeing the massive gap between how a metric could impact DAU vs. MAU; for example, CURR’s impact on DAU was 6 times its impact on MAU. iWAURR (inactive WAU reactivation rate) was the second-best lever for moving DAU but a distant fourth for moving MAU, behind increasing new and resurrected users. This meant that, at some point, we would still need to figure out new growth vectors for new-user acquisition if we wanted to see substantial MAU improvements. But for the time being, our focus was only on moving DAU, so we prioritized CURR over all other growth levers. And it turned out to be the right choice.&lt;/p&gt;&#xA;&lt;p&gt;另一个重要教训是看到了一个指标对 DAU 与 MAU 的影响之间的巨大差距；例如，CURR 对 DAU 的影响是其对 MAU 影响的 6 倍。iWAURR（不活跃 WAU 再激活率）是推动 DAU 的第二大杠杆，但对于推动 MAU 来说，却是排在增加新用户和复活用户之后的第四大杠杆。这意味着，在某个时候，如果我们想要看到 MAU 的显著改善，我们仍然需要找到新的增长方向来获取新用户。但目前，我们的重点只是推动 DAU，所以我们优先考虑 CURR 超过所有其他增长杠杆。事实证明，这是一个正确的选择。&lt;/p&gt;&#xA;&lt;h2 id=&#34;leaderboards-vector&#34;&gt;Leaderboards vector&lt;/h2&gt;&#xA;&lt;h2 id=&#34;排行榜&#34;&gt;排行榜&lt;/h2&gt;&#xA;&lt;p&gt;With this clear directive, we looked at our historical model data and at our A/B tests going back a few years to see if we had inadvertently done anything that had moved CURR in the past. Surprisingly, we hadn’t. In fact, CURR had not moved in years. We had to figure out our first steps to move CURR based on first principles.&lt;/p&gt;&#xA;&lt;p&gt;有了这个明确的指示，我们查看了历史模型数据和几年前的 A/B 测试，以查看我们是否无意中做了任何事情，在过去推动了 CURR。令人惊讶的是，我们没有。事实上，CURR 已经多年没有移动了。我们必须基于第一性原理找出推动 CURR 的第一步。&lt;/p&gt;&#xA;&lt;p&gt;I still thought gamification was a good place to start when trying to improve retention. Our failure with the Gardenscapes-style moves counter hadn’t actually disproved any of the original reasons why we believed gamification still had upside for Duolingo—we had only learned that the moves counter was a clumsy attempt at it. This time, we would be more methodical and intelligent about features we added or borrowed. We made sure to apply the lessons from our prior efforts with gamification.&lt;/p&gt;&#xA;&lt;p&gt;我仍然认为游戏化是一个开始的好地方，当试图提高保留率时。我们在 Gardenscapes 风格的动作计数器上的失败并没有真正驳斥我们相信游戏化仍然对 Duolingo 有积极作用的想法，我们只是明白了动作计数器是一次笨拙的尝试。这一次，我们将更加有条不紊、更加明智地处理添加或借用的功能。我们确保借鉴之前游戏化工作的经验教训。&lt;/p&gt;&#xA;&lt;p&gt;After some consideration, we decided to bet on leaderboards. Here’s why and how. Duolingo already had a leaderboard for users to compete with their friends and family, but it wasn’t particularly effective. Based on my experience at Zynga, I felt that there was a better way. When I started working on Zynga’s FarmVille 2 game, it included a leaderboard similar to Duolingo’s existing leaderboard, where users competed with their friends. I had hypothesized based on my personal experience as a player that the closeness of the competitor’s engagement would be more important than the closeness of personal relationships. I thought this would be especially true in a mature product where many users’ friends weren’t active anymore. From our testing at Zynga, that idea turned out to be true. Based on this, I felt a leaderboard system, similar to what I had helped design at Zynga, would succeed in the context of our product.&lt;/p&gt;&#xA;&lt;p&gt;经过一番考虑，我们决定押注排行榜。以下是原因和做法。Duolingo 已经有一个排行榜，让用户与朋友和家人竞争，但它并不是特别有效。根据我在 Zynga 的经验，我觉得有更好的方法。当我开始在 Zynga 的 FarmVille 2 游戏中工作时，它包含了一个类似于 Duolingo 现有排行榜的排行榜，用户与他们的朋友竞争。基于我作为玩家的个人经验，我假设竞争对手的参与度比个人关系的亲密程度更重要。我认为这一点在许多用户的朋友不再活跃的成熟产品中尤其正确。根据我们在 Zynga 的测试，这个想法被证明是正确的。基于这一点，我认为一个类似于我在 Zynga 设计的排行榜系统，将在我们的产品环境中取得成功。&lt;/p&gt;&#xA;&lt;p&gt;FarmVille 2’s leaderboard also included a “league” system. Beyond getting to the top of a weekly leaderboard, users had the opportunity to move through a series of league levels (e.g. from the Bronze league to the Silver league to the Gold league). Leagues provided users with a greater sense of progress and reward, an integral element in game design. They also increased engagement over time, since engaged users move up to more competitive leagues week after week. We felt this feature would translate well to Duolingo’s existing product because it tapped directly into the common human motivators of competitiveness and progression.&lt;/p&gt;&#xA;&lt;p&gt;FarmVille 2 的排行榜还包含了一个「联赛」系统。除了每周排行榜的榜首，用户还有机会获得一系列的联赛等级（例如从青铜到白银再到黄金）。联赛为用户提供了更强烈的进步和奖励感，这是游戏设计中的一个重要元素。它们也随着时间的推移增加了参与度，因为参与度高的用户每周都会上升到更具有竞争力的联赛。我们认为这个功能可以很好地转换到 Duolingo 现有的产品中，因为它直接触及了人类共同的竞争和进步动力。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-9.png&#34; alt=&#34;用户会与上一周参与度相似的其他用户配对。本周结束时排名靠前的玩家将在接下来的一周晋升到更高的联赛。&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Not all aspects of the FarmVille 2 leaderboards would translate well to Duolingo, though. We had to use our judgment to adapt this gaming mechanic to Duolingo’s context. In FarmVille 2, competing in the leaderboard required completing additional kinds of tasks on top of the core gameplay. That was something that we purposefully left out. In the Duolingo context, more tasks would only add unnecessary complexity to language learning. We deliberately made our leaderboard as casual and frictionless as possible; users were automatically opted in and could progress to the top of the first league by merely engaging consistently in their regular language study. By keeping the game mechanic exciting, but making it simpler than in FarmVille 2, we felt like we had struck the right balance of adopting and adapting.&lt;/p&gt;&#xA;&lt;p&gt;并不是 FarmVille 2 排行榜的所有方面都能很好地转换到 Duolingo。我们不得不使用我们的判断力来让这种游戏机制适应 Duolingo 的环境。在 FarmVille 2 中，要在排行榜上竞争需要完成核心游戏玩法之外的其他类型的任务。这是我们故意省略的内容。在 Duolingo 的环境中，更多的任务只会给语言学习增加不必要的复杂性。我们故意使我们的排行榜尽可能休闲和无摩擦；用户会自动加入，并且只需定期参与语言学习就能进步到第一个联赛的顶端。通过保持游戏机制的趣味性，但使其比 FarmVille 2 更简单，我们觉得我们已经找到了采用和适应之间的正确平衡。&lt;/p&gt;&#xA;&lt;p&gt;The leaderboards feature had a huge and almost immediate impact on our metrics. Overall learning time increased by 17%, and the number of highly engaged learners (users who spend at least 1 hour a day for 5 days a week) tripled. At this time, we hadn’t yet figured out how to calculate statistical significance for CURR, but we saw that our traditional retention metrics (D1, D7, etc.) improved materially and with statistical significance. Going forward, the leaderboards feature became a vector for improving metrics, and teams continue to optimize the feature to this day. Also importantly, the leaderboard was the Retention Team’s first breakthrough!&lt;/p&gt;&#xA;&lt;p&gt;排行榜功能对我们的指标产生了巨大且几乎即时的影响。总体学习时间增加了 17%，高度参与学习者的数量（每天至少花费 1 小时，每周 5 天）增加了 3 倍。当时，我们还没有弄清楚如何计算 CURR 的统计显著性，但我们看到我们的传统留存指标（D1、D7 等）有了实质性的提高，并且具有统计显著性。展望未来，排行榜功能成为改善指标的一个途径，团队至今仍在优化这一功能。同样重要的是，排行榜是留存团队的首个重大突破！&lt;/p&gt;&#xA;&lt;h2 id=&#34;push-notifications-vector&#34;&gt;Push notifications vector&lt;/h2&gt;&#xA;&lt;h2 id=&#34;推送通知&#34;&gt;推送通知&lt;/h2&gt;&#xA;&lt;p&gt;The Retention Team was completely energized to find more mechanics to keep current users engaged and motivated to practice every day. One area they started to look into was push notifications. Based on substantial A/B testing in prior years, Duolingo had established that notifications can be a big vector for growth, but that impact had plateaued for us over the years. With a re-energized team full of new ideas, we felt it was the right time to revisit this vector.&lt;/p&gt;&#xA;&lt;p&gt;留存团队非常充满活力的寻找更多机制来保持现有用户的参与度，并激励他们每天练习。他们开始关注的领域之一是推送通知。根据过去几年大量的 A/B 测试，Duolingo 已经确定通知可以是一个巨大的增长因素，但这种影响多年来在我们这里已经达到了平台期。由于这支充满新想法的充满活力的团队，我们觉得是时候重新审视这个因素了。&lt;/p&gt;&#xA;&lt;p&gt;As we started diving into this, there was one principle that became paramount. It came from a cautionary tale from Groupon’s CEO. He explained to Luis von Ahn, our CEO, that for a long time, Groupon stuck to one email notification per day. But their team started wondering whether sending more emails would improve metrics. The CEO eventually gave in and allowed his team to test sending one more email to each user each day. This test resulted in a big increase to their target metrics. Encouraged, Groupon kept experimenting, sending more emails, even as many as five a day. Then, in what felt like a change from one day to the next, their email channel lost most of its effectiveness. Over time, the accumulation of Groupon’s aggressive email tests had basically destroyed their channel. One often underappreciated risk with aggressively A/B testing emails and push notifications is that it results in users opting out of the channel; and even if you kill the test, those users remain opted out forever. Do this many times, and you’ve destroyed your channel. This was the outcome to avoid. For our push notifications, we established one foundational rule: protect the channel.&lt;/p&gt;&#xA;&lt;p&gt;当我们开始深入研究这个问题时，有一个原则至关重要。这个原则来自于 Groupon CEO 的一个警示故事。他向我们的 CEO Luis von Ahn 解释说，很长一段时间，Groupon 坚持每天只发送一封电子邮件通知。单后来他们的团队开始猜想，发送更多的电子邮件是否能够改善指标。最终，CEO 让步了，允许他的团队测试每天向每个用户多发送一封电子邮件。这个测试导致他们的目标指标大幅增加。受到鼓舞，Groupon 继续进行实验，发送更多的电子邮件，甚至一天多达五封。然后，感觉就在一夜之间，他们的电子邮件渠道失去了大部分效果。随着时间的推移，Groupon 激进的电子邮件测试基本上摧毁了他们的渠道。经常被低估的一个风险是，激进地 A/B 测试电子邮件和推送通知会导致用户选择退出该渠道；即使你停止了测试，那些用户也会永远选择退出。这样做很多次，你就摧毁了你的渠道。这是我们需要避免的结果。对于我们的推送通知，我们建立了一条基本规则：保护渠道。&lt;/p&gt;&#xA;&lt;p&gt;With this constraint in mind, we decided to give the team a lot of freedom to optimize on dimensions like timing, templates, images, copy, localization, etc., but they could not increase the quantity of notifications without strong justification and CEO approval. Over time, through countless iterations, A/B testing, and a bandit algorithm, the team was able to generate dozens of small- and medium-size wins that have amounted to substantial gains in DAU year after year.&lt;/p&gt;&#xA;&lt;p&gt;考虑到这一点，我们决定给予团队在时间、模板、图片、文案、本地化等方面进行优化的极大自由度，但他们不能在不提供充分理由和 CEO 批准的情况下增加通知的数量。随着时间的推移，经过无数次的迭代、A/B 测试和算法，团队能够取得数十个小型和中型胜利，这些胜利累积起来，年复一年地为 DAU 带来了显著的增长。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-10.png&#34; alt=&#34;一个关于 Duolingo 的「推送通知」在 2019 年走红的梗&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-streak-vector&#34;&gt;The streak vector&lt;/h2&gt;&#xA;&lt;h2 id=&#34;连胜&#34;&gt;连胜&lt;/h2&gt;&#xA;&lt;p&gt;In the search for even more growth vectors, the APM on the Retention Team started exploring whether there was a strong correlation between retention and usage of particular Duolingo features. He discovered that if a user reached a 10-day streak, their chances of dropping off were reduced substantially. Clearly, a lot of this was simply correlation and selection bias, but we felt the insight was interesting enough to start investing in improving this feature again.&lt;/p&gt;&#xA;&lt;p&gt;在寻找更多的增长方向时，留存团队中的 APM 开始探索留存率和使用特定 Duolingo 功能的用户之间是否存在强相关性。他发现，如果用户达到了 10 天的学习连贯性，他们放弃学习的可能性会大大降低。显然，这很大程度上只是相关性和选择性偏差，但我们认为这个洞察足够有趣，值得重新开始投入改善这个功能。&lt;/p&gt;&#xA;&lt;p&gt;The concept of a streak is really quite simple: show users the number of consecutive days they’ve done any activity on the app. But it turns out that there is a surprisingly large number of optimization opportunities around streaks.&lt;/p&gt;&#xA;&lt;p&gt;连胜天数的概念其实非常简单：向用户展示他们在应用上连续完成活动的天数。但事实证明，围绕连胜天数的优化机会非常多。&lt;/p&gt;&#xA;&lt;p&gt;We got our first big win with the streak-saver notification—a notification that alerts users with streaks if they are about to lose their streak. This late-night notification proved that indeed there was considerable upside to doubling down on streak optimizations. After this, several improvements followed: calendar views, animations, changes to streak freezes, and streak rewards, among others. Each helped improve upon the original streak idea and generated substantial improvements to retention.&lt;/p&gt;&#xA;&lt;p&gt;我们首次大获全胜，就是连胜挽救通知（这是一种通知，如果用户即将失去他们的连胜，就会提醒有连胜的用户）发挥了作用。这种深夜通知证明确实有相当大的好处，可以加倍努力进行连胜优化。在此之后，几个改进随之而来：日历视图、动画、连胜冻结的变化和连胜奖励等。每项改进都完善了原始的连胜理念，并对留存率产生了实质性的改进。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;To date, the streak feature is one of Duolingo’s most powerful engagement mechanics. When people talk about their Duolingo experience, they often bring up their streak. I recently met one user who told me, “I have a 1,435-day streak!” and added, “with no streak freezes!” His bragging rights were well-earned, as he had been studying his chosen language daily for almost four years.&lt;/p&gt;&#xA;&lt;p&gt;截至目前，连胜功能是 Duolingo 最强大的参与机制之一。当人们谈论他们的 Duolingo 体验时，他们经常提到他们的连胜。我最近遇到了一个用户，他告诉我：「我有 1435 天的连胜！」并补充说：「没有使用连胜冻结！」。他炫耀的权利是应得的，因为他已经几乎四年每天都在学习他选择的语言。&lt;/p&gt;&#xA;&lt;p&gt;Streaks work for a number of reasons. One of those is that a streak increases user motivation over time; the longer the streak is, the greater the impetus to keep the streak going. When it comes to user retention, this is the exact behavior we want in our users. Each day that a learner comes to Duolingo, they care a bit more about coming back the next day than they did the day before, hence increasing retention and DAU. As a meta-lesson, our success with the streak mechanic further showed us that we could squeeze major wins from existing features. We could see the value in both big breakthroughs and in fast optimizations. And an A+ team often has a mix of both.&lt;/p&gt;&#xA;&lt;p&gt;连胜对用户留存有好处，因为连胜可以提高用户的积极性。连胜越长，用户保持连胜的动力就越强。这种行为正是我们希望用户表现出来的。每天学习者使用 Duolingo，他们就会比前一天更关心第二天是否继续使用，从而提高留存率和日活跃用户数。作为一个元教训，我们通过连胜机制的成功进一步认识到，我们可以从现有功能中获得重大收益。我们可以看到重大突破和快速优化的价值。一个优秀的团队通常会同时具备这两种能力。&lt;/p&gt;&#xA;&lt;h2 id=&#34;growth-beyond-curr&#34;&gt;Growth beyond CURR&lt;/h2&gt;&#xA;&lt;h2 id=&#34;增长超越当前用户留存&#34;&gt;增长超越当前用户留存&lt;/h2&gt;&#xA;&lt;p&gt;We didn’t stop at CURR; there was a very healthy paranoia that at some point CURR would hit a ceiling, so sooner or later we would have to figure out growth vectors for new user acquisition. The Retention Team stayed focused on increasing CURR, but as a company, we consistently increased our investment in growth by creating more and more Product and Marketing teams to find new vectors (for both retention and acquisition). Luckily, several of these bets worked, including expanding internationally, building social features (this is what the Acquisition eventually team pivoted to, with great success), accelerating course content creation, working with influencers, increasing our presence in schools, investing (a little bit) in paid UA, and going crazy viral on TikTok. Each of these merits its own case study.&lt;/p&gt;&#xA;&lt;p&gt;我们没有停留在 CURR 上；有一种非常健康的偏执，认为在某个点上 CURR 会达到天花板，所以我们迟早得找出新的用户增长方向。留存团队专注于提高 CURR，但作为一个公司，我们也不断增加对增长的投入，创建了越来越多的产品和营销团队来寻找新的增长点（对于留存和获取用户）。幸运的是，其中一些赌注成功了，包括国际扩张、构建社交功能（这是获取团队最终转向的，并且取得了巨大成功）、加速课程内容创作、与高影响者合作、增加我们在学校的存在感、在付费用户获取上进行投入（一点点）以及在 TikTok 上疯狂传播。每一点都值得单独进行案例研究。&lt;/p&gt;&#xA;&lt;h2 id=&#34;overall-results&#34;&gt;Overall results&lt;/h2&gt;&#xA;&lt;h2 id=&#34;整体结果&#34;&gt;整体结果&lt;/h2&gt;&#xA;&lt;p&gt;Through our efforts over four years, we were able to increase CURR by 21%, which represents a reduction in the daily churn of our best users by over 40% and, together with our other successful bets, led to an increase in our DAU of 4.5x. Last year was one of the fastest growth rates in Duolingo’s history. The quality of the user base also improved; the share of our DAU with a streak of 7 days or longer increased almost 3 times to more than half of our DAU. This means that not only does Duolingo have a much higher number of active users now, but also that those users are much more likely to keep coming back, refer their friends, and subscribe to Super Duolingo. This growth was key to Duolingo’s successful IPO.&lt;/p&gt;&#xA;&lt;p&gt;通过四年的努力，我们成功地将 CURR 提高了 21%，这表示我们最佳用户的每日流失率减少了超过 40%，再加上我们其他成功的投入，我们的 DAU 增长了 4.5 倍。去年是 Duolingo 历史上增长最快的一年。用户群体的质量也得到了提升；我们的 DAU 中有 7 天或更长时间连胜的用户份额增加了近 3 倍，超过了我们 DAU 的一半。这意味着 Duolingo 不仅现在拥有更多的活跃用户，而且这些用户更有可能继续活跃，推荐他们的朋友，并订阅 Super Duolingo。这种增长是 Duolingo 成功 IPO 的关键。&lt;/p&gt;&#xA;&lt;h2 id=&#34;parting-thoughts&#34;&gt;Parting thoughts&lt;/h2&gt;&#xA;&lt;h2 id=&#34;离别时的想法&#34;&gt;离别时的想法&lt;/h2&gt;&#xA;&lt;p&gt;I hope that this article gives you the inspiration you need to find new vectors of growth for your product. If you adopt anything from my experience at Duolingo, I hope you adapt it to your own context using your best judgment. Don’t blindly trust what Duolingo or any other company did. Certainly that didn’t work for me. Happy experimenting!&lt;/p&gt;&#xA;&lt;p&gt;我希望这篇文章能给你带来所需的灵感，帮助你为你的产品找到新的增长方向。如果你从我在 Duolingo 的经验中学到了什么，我希望你能根据你自己的情况，运用你的最佳判断力进行适应。不要盲目地相信 Duolingo 或其他任何公司所做的事情。当然，那对我并不适用。祝你实验愉快！&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>修复 macOS 终端主机名显示 192</title>
      <link>http://localhost:1313/p/macos-hostname-192/</link>
      <pubDate>Wed, 07 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/macos-hostname-192/</guid>
      <description>&lt;p&gt;通常 macOS 终端（Terminal）App 中显示的主机名（HostName）应该是当前设备设定的用户名。&lt;/p&gt;&#xA;&lt;p&gt;但是有时打开终端时会发现主机名变成了 192，这主要是由于当前使用的 DNS 服务因为某些原因变成了默认的 &lt;code&gt;192.168.1.1&lt;/code&gt; 或 &lt;code&gt;192.168.0.1&lt;/code&gt;，我通常在启动了代理服务之后会出现。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;解决方案一&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;设备：Mac mini M2&lt;/p&gt;&#xA;&lt;p&gt;macOS: Sonama 14.6&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;这种情况首先可以尝试修改 DNS 设置，打开「系统偏好设置 -&amp;gt; 网络（或 Wi-Fi） -&amp;gt; 详细信息 -&amp;gt; DNS」。&lt;/p&gt;&#xA;&lt;p&gt;如果这里的 DNS 服务器为上面提到的默认 IP 地址，那么直接删除，然后添加新的 DNS 服务器 IP 地址：&lt;code&gt;8.8.8.8&lt;/code&gt; 即可。&lt;/p&gt;&#xA;&lt;p&gt;⚠️ 注意：修改 DNS 配置后记得「应用」。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;解决方案二&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;首先确认本机是否存在已配置的 HostName，打开终端执行以下命令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scutil --get HostName &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果本机没有配置 HostName，那么执行该命令不会获得任何输出，如果存在 HostName 则会直接返回 HostName 字符串。&lt;/p&gt;&#xA;&lt;p&gt;当本机没有配置 HostName 是，终端的主机名会使用来自 DNS 或者 DHCP 服务器，所以我们也可以通过主动配置一个 HostName 解决这个问题，在终端执行以下命令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo scutil --set HostName &lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;yourHostName&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;⚠️ 注意：使用你想要设置的 HostName 替换上面命令中的 &lt;code&gt;yourHostName&lt;/code&gt; 。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>我的 Rime 输入法配置方案</title>
      <link>http://localhost:1313/p/rime-setup/</link>
      <pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/rime-setup/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://rime.im/&#34;&gt;Rime&lt;/a&gt; 是一个开源的输入法引擎，它支持多种输入方案，比如拼音、双拼、五笔等等，并且可以自定义输入方案。&lt;/p&gt;&#xA;&lt;p&gt;使用 Rime 非常简单（也可以非常复杂），最简单的方式就是从 Rime 官网下载对应平台的客户端，Rime 客户端通常会内置一些默认的输入方案，当 Rime 默认的输入方案不满足我们的需求时就可以开始自定义配置啦！&lt;/p&gt;&#xA;&lt;p&gt;我大概 5 年前就开始使用 Rime，在 Windows 平台使用 Rime 提供的官方客户端「小狼毫」，仅仅配置了 &lt;a href=&#34;https://flypy.com/&#34;&gt;小鹤双拼&lt;/a&gt; 输入方案和一些简单的皮肤样式、输入习惯等等。&lt;/p&gt;&#xA;&lt;p&gt;词库、同步等等比较高级的配置都不曾涉及，每个使用 Rime 的用户都会有自己习惯的配置，为了保证每次换机等需要重新配置 Rime 时能更方便，个人维护一套自己的 Rime 配置非常有必要。&lt;/p&gt;&#xA;&lt;p&gt;下面是我的安装、配置 Rime 的完整记录（macOS 平台）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;安装-squirrel&#34;&gt;安装 Squirrel&lt;/h2&gt;&#xA;&lt;p&gt;Rime 在 macOS 平台的客户端名为「鼠须管（Squirrel）」，我通常使用 &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; 安装，在 macOS 终端执行如下命令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask squirrel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;随后打开 macOS 系统偏好设置，进入键盘设置，添加输入法选择简体中文下的鼠须管即可。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自定义配置&#34;&gt;自定义配置&lt;/h2&gt;&#xA;&lt;p&gt;我现在的 Rime 配置使用的是 &lt;a href=&#34;https://github.com/iDvel/rime-ice&#34;&gt;雾凇拼音&lt;/a&gt; 维护的一套配置，输入方案依然是小鹤双拼。&lt;/p&gt;&#xA;&lt;p&gt;我通过 Rime 官方的配置管理工具 &lt;a href=&#34;https://github.com/rime/plum&#34;&gt;Plum&lt;/a&gt; 来快速安装雾凇拼音的配置。&lt;/p&gt;&#xA;&lt;h3 id=&#34;安装雾凇拼音配置&#34;&gt;安装雾凇拼音配置&lt;/h3&gt;&#xA;&lt;p&gt;首先将 Plum 从 GitHub clone 到本地任意文件目录下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone --depth&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;1&lt;/span&gt; https://github.com/rime/plum&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后进入本地的 Plum 文件目录下，执行命令以安装雾凇拼音配置到本地 Rime 配置。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd plum&#xA;bash rime-install iDvel/rime-ice:others/recipes/full&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其实到这里整个 Rime 的雾凇拼音配置就已经安装完成可以正常使用了。&lt;/p&gt;&#xA;&lt;p&gt;在启用 Rime 输入法的情况下，按下 &lt;code&gt;F4&lt;/code&gt; 可以进入 Rime 的方案选单，雾凇拼音配置里面也预置了很多输入方案，我通常只保留全拼 + 小鹤双拼。&lt;/p&gt;&#xA;&lt;h3 id=&#34;自定义部分配置&#34;&gt;自定义部分配置&lt;/h3&gt;&#xA;&lt;p&gt;⚠️ 注意：一旦修改了 Rime 用户配置文件，必须「重新部署」之后才会生效。&lt;/p&gt;&#xA;&lt;p&gt;在 macOS 系统下，Rime 的所有用户配置文件均保存在 &lt;code&gt;~/Library/Rime&lt;/code&gt; 目录下，刚刚使用 plum 安装雾凇拼音配置其实就是将雾凇拼音的配置下载到本地并覆盖本地 Rime 的用户配置。&lt;/p&gt;&#xA;&lt;h4 id=&#34;基础配置&#34;&gt;基础配置&lt;/h4&gt;&#xA;&lt;p&gt;打开配置文件目录可以看到很多 &lt;code&gt;.yaml&lt;/code&gt; 文件，这些就是配置文件，Rime 的核心默认配置在 &lt;code&gt;default.yaml&lt;/code&gt; 文件中，我会进行如下更改：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;方案列表（schema_list）：注释掉不用的输入方案，只保留全拼 + 小鹤双拼。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;其他的配置暂时不会修改，默认的已经挺好用了，至于其他配置是什么意思、有什么用，雾凇拼音的配置文件中都有非常详细的注释。&lt;/p&gt;&#xA;&lt;p&gt;然后是 Rime 输入法的皮肤配置，在 &lt;code&gt;squirrel.yaml&lt;/code&gt; 文件中修改，这个就非常个性化了，我也会经常调整，此处不做记录。&lt;/p&gt;&#xA;&lt;h4 id=&#34;多设备同步&#34;&gt;多设备同步&lt;/h4&gt;&#xA;&lt;p&gt;由于我需要在多台设备间同步我的用户词典和配置，所以我还会做一些同步相关的配置，在 &lt;code&gt;installation.yaml&lt;/code&gt; 文件中修改 &lt;code&gt;installation_id&lt;/code&gt; 和 &lt;code&gt;sync_dir&lt;/code&gt; 即可。完整配置如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;distribution_code_name&lt;/span&gt;: Squirrel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;distribution_name&lt;/span&gt;: &lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;鼠鬚管&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;distribution_version&lt;/span&gt;: &lt;span style=&#34;color:#fe640b&#34;&gt;1.0.2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;install_time&lt;/span&gt;: &lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;Thu Jul 18 14:47:16 2024&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#9ca0b0;font-style:italic&#34;&gt;# 本机的 ID 标志，默认是一串 UUID&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#9ca0b0;font-style:italic&#34;&gt;# 生成的文件夹是这个名字，可以改成更好识别的名称&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;installation_id&lt;/span&gt;: &lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;rok_mac_mini&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;rime_version&lt;/span&gt;: &lt;span style=&#34;color:#fe640b&#34;&gt;1.11.2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#9ca0b0;font-style:italic&#34;&gt;# 同步文件保存的目录地址，默认是当前配置目录下的 `sync/`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8839ef&#34;&gt;sync_dir&lt;/span&gt;: &lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;/Users/rokcso/Nutstore Files/rokConfig/Rime&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Rime 多设备同步需要借助第三方文件同步工具完成，比如：iCloud、Dropbox、坚果云等等，我使用的是 &lt;a href=&#34;https://www.jianguoyun.com/&#34;&gt;坚果云&lt;/a&gt;，本质上就是将 Rime 生成的同步文件存储在坚果云的同步文件目录中。&lt;/p&gt;&#xA;&lt;p&gt;比如我在坚果云上创建了一个 &lt;code&gt;rokConfig/Rime&lt;/code&gt; 这个目录，并且将其同步到我所有设备的本地，当我在设备 A、B 的 Rime 同步配置中将 &lt;code&gt;sync_dir&lt;/code&gt; 设置为设备 A、B 本地的 &lt;code&gt;rokConfig/Rime&lt;/code&gt; 时，假设设备 A 触发 Rime 同步，Rime 会更新同步文件到设备 A 本地的 &lt;code&gt;rokConfig/Rime&lt;/code&gt; 文件目录下，然后坚果云的云同步会将本次更新的内容同步到设备 B 的本地。&lt;/p&gt;&#xA;&lt;p&gt;这便实现了 Rime 多设备同步，其他第三方文件同步工具基本同理。&lt;/p&gt;&#xA;&lt;p&gt;⚠️ 注意：上述案例中，设备 A 触发了 Rime 同步，设备 A 更新的同步文件通过坚果云同步到了设备 B 的本地，此时设备 B 需要再触发一次 Rime 同步才能启用设备 A 同步过来的最新用户词典和配置。这个操作可以理解为设备 B 本地的配置发生了变化，需要重新部署一下才能生效。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>我的 macOS 初始化配置方案 &amp; 软件分享</title>
      <link>http://localhost:1313/p/macos-setup/</link>
      <pubDate>Fri, 07 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/macos-setup/</guid>
      <description>&lt;h2 id=&#34;系统偏好设置&#34;&gt;系统偏好设置&lt;/h2&gt;&#xA;&lt;h3 id=&#34;触控板&#34;&gt;触控板&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;开启「轻点来点按」&#xA;&lt;ul&gt;&#xA;&lt;li&gt;系统偏好设置 → 触控板 → 光标与点按 → 轻点来点按&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;开启「使用触控板进行拖移」&#xA;&lt;ul&gt;&#xA;&lt;li&gt;系统偏好设置 → 辅助功能 → 指针控制 → 触控板选项 → 使用触控板进行拖移&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;关闭「轻扫切换页面」&#xA;&lt;ul&gt;&#xA;&lt;li&gt;系统偏好设置 → 触控板 → 更多手势 → 轻扫切换页面&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;软件安装--配置&#34;&gt;软件安装 &amp;amp; 配置&lt;/h2&gt;&#xA;&lt;h3 id=&#34;clashx-pro&#34;&gt;ClashX Pro&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;安装包在阿里云盘&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;homebrew&#34;&gt;Homebrew&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://brew.sh/&#34;&gt;https://brew.sh/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;搜索 Homebrew 支持的包：&lt;a href=&#34;https://formulae.brew.sh/&#34;&gt;https://formulae.brew.sh/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;raycast&#34;&gt;Raycast&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://www.raycast.com/&#34;&gt;https://www.raycast.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask raycast&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Raycast 扩展程序：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Brew&lt;/li&gt;&#xA;&lt;li&gt;Color Picker&lt;/li&gt;&#xA;&lt;li&gt;Feishu Document Creator&lt;/li&gt;&#xA;&lt;li&gt;QR Code Generator&lt;/li&gt;&#xA;&lt;li&gt;Random Data Generator&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;坚果云&#34;&gt;坚果云&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://www.jianguoyun.com/&#34;&gt;https://www.jianguoyun.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask nutstore&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;keepassxc&#34;&gt;KeePassXC&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://keepassxc.org/&#34;&gt;https://keepassxc.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask keepassxc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://keepass.info/&#34;&gt;KeePass&lt;/a&gt; 的第三方 MacOS 客户端 App，iOS 使用 &lt;a href=&#34;https://keepassium.com/&#34;&gt;KeePassium&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;密码库和密钥文件存储在坚果云。&lt;/p&gt;&#xA;&lt;h3 id=&#34;betterdisplay&#34;&gt;BetterDisplay&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://github.com/waydabber/BetterDisplay#readme&#34;&gt;https://github.com/waydabber/BetterDisplay#readme&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask betterdisplay&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;typora&#34;&gt;Typora&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://typora.io/&#34;&gt;https://typora.io/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask typora&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;figma&#34;&gt;Figma&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://www.figma.com/&#34;&gt;https://www.figma.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask figma&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;arc&#34;&gt;Arc&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://arc.net/&#34;&gt;https://arc.net/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask arc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;飞书&#34;&gt;飞书&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://www.feishu.cn/&#34;&gt;https://www.feishu.cn/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask feishu&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;bruno&#34;&gt;Bruno&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://www.usebruno.com/&#34;&gt;https://www.usebruno.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask bruno&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;db-browser-for-sqlite&#34;&gt;DB Browser for SQLite&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://sqlitebrowser.org/&#34;&gt;https://sqlitebrowser.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask db-browser-for-sqlite&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;snipaste&#34;&gt;Snipaste&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://www.snipaste.com/&#34;&gt;https://www.snipaste.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask snipaste&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;keka&#34;&gt;Keka&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://www.keka.io/&#34;&gt;https://www.keka.io/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask keka&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sf-symbols&#34;&gt;SF Symbols&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://developer.apple.com/design/human-interface-guidelines/sf-symbols&#34;&gt;https://developer.apple.com/design/human-interface-guidelines/sf-symbols&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask sf-symbols&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;xcodes&#34;&gt;Xcodes&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://github.com/XcodesOrg/XcodesApp&#34;&gt;https://github.com/XcodesOrg/XcodesApp&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask xcodes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过这个来安装、管理 Xcode。&lt;/p&gt;&#xA;&lt;h3 id=&#34;netnewswire&#34;&gt;NetNewsWire&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://netnewswire.com/&#34;&gt;https://netnewswire.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask netnewswire&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;zipic&#34;&gt;Zipic&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://zipic.5km.tech/#pricing&#34;&gt;https://zipic.5km.tech/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install: 官网下载安装包&lt;/p&gt;&#xA;&lt;h3 id=&#34;iina&#34;&gt;IINA&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://github.com/iina/iina&#34;&gt;https://github.com/iina/iina&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask iina&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;visual-studio-code&#34;&gt;Visual Studio Code&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;https://code.visualstudio.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask visual-studio-code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sublime-text&#34;&gt;Sublime Text&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;https://www.sublimetext.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask sublime-text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;itsycal&#34;&gt;Itsycal&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://www.mowglii.com/itsycal/&#34;&gt;https://www.mowglii.com/itsycal/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask itsycal&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;craft&#34;&gt;Craft&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://www.craft.do/&#34;&gt;https://www.craft.do/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask craft&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;filetunnel&#34;&gt;FileTunnel&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://github.com/Helixform/GetFileTunnel&#34;&gt;https://github.com/Helixform/GetFileTunnel&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;微信&#34;&gt;微信&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://mac.weixin.qq.com/&#34;&gt;https://mac.weixin.qq.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask wechat&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;app-store&#34;&gt;App Store&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TestFlight&lt;/li&gt;&#xA;&lt;li&gt;Stored3 - 已购 Pro&lt;/li&gt;&#xA;&lt;li&gt;Bob - 已购 Pro&lt;/li&gt;&#xA;&lt;li&gt;Vidhub - 已购 Pro&lt;/li&gt;&#xA;&lt;li&gt;flomo&lt;/li&gt;&#xA;&lt;li&gt;米家&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>macOS 彻底阻止 FigmaAgent.app 被添加到登录项</title>
      <link>http://localhost:1313/p/figmaagent-auto-login/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/figmaagent-auto-login/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;我的 macOS 版本：Sonoma 14.5&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;在使用 Figma macOS 客户端时，总有一个 FigmaAgent.app 被自动添加到登录项，即使在「系统设置 - 通用 - 登录项」中手动删除该项目，再次打开 Figma 依然会自动添加，这很烦人。😡&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;打开「活动监视器」，找到 FigmaAgent，选中后点击「停止（退出）」后选择「强制退出」。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-1.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;访问「系统设置 - 通用 - 登录项」，删除 FigmaAgent.app。&lt;/li&gt;&#xA;&lt;li&gt;打开「访达」，进入 &lt;code&gt;~/Library/Application Support/Figma&lt;/code&gt; 文件夹，删除 FigmaAgent.app。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-2.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;打开「访达」，进入 &lt;code&gt;/Applications/Figma.app/Contents/Library&lt;/code&gt; 文件夹，删除 FigmaAgent.app。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;完成！✅&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>dofollow &amp; nofollow</title>
      <link>http://localhost:1313/p/dofollow-and-nofollow/</link>
      <pubDate>Mon, 27 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/dofollow-and-nofollow/</guid>
      <description>&lt;h2 id=&#34;什么是-dofollow-和-nofollow-链接&#34;&gt;什么是 dofollow 和 nofollow 链接？&lt;/h2&gt;&#xA;&lt;p&gt;dofollow 和 nofollow 是两个 HTML 属性，用于指示搜索引擎爬虫如何处理网页上面 link 的链接。&lt;/p&gt;&#xA;&lt;p&gt;dofollow 意味着搜索引擎会跟随这个链接，并且当前页面会传递一定的权重给被链接的页面，即增加被链接页面在搜索引擎中的权重，增加权重的多少根据当前页面在搜索引擎中的权重不同而不同。&lt;/p&gt;&#xA;&lt;p&gt;也就是说如果网站 A 使用 dofollow 链接了网站 B 的链接，网站 B 在搜索引擎中的权重会得到提升，提升的多少由网站 A 在搜索引擎中的权重决定，即网站 A 在搜索引擎中权重越大，网站 B 得到的权重提升也越大。&lt;/p&gt;&#xA;&lt;p&gt;nofollow 是由 Google 引入的属性，目的是帮助网站管理员减少网站的垃圾链接，当页面中的一个链接被标记为 nofollow 时，搜索引擎爬虫将不会跟随这个链接去发现新的内容、建立新的索引，同时也也不会从当前页面传递任何权重到被链接页面。&lt;strong&gt;搜索引擎的爬虫甚至不会进一步爬取 nofollow 链接。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;一般网站的广告链接、用户评论内容中的链接会使用 nofollow 属性来标记。&lt;/p&gt;&#xA;&lt;p&gt;HTML 中 &lt;!-- raw HTML omitted --&gt; 标签默认的属性是 dofollow，如果要标记为 nofollow 可以如下编写：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#8839ef&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;https://rokcso.com&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;nofollow&amp;#34;&lt;/span&gt;&amp;gt;Rokcso&amp;#39;s Landing Page&amp;lt;/&lt;span style=&#34;color:#8839ef&#34;&gt;a&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;如何正确应用-dofollow-和-nofollow-链接&#34;&gt;如何正确应用 dofollow 和 nofollow 链接？&lt;/h2&gt;&#xA;&lt;p&gt;上面提到的权重本质上就是 &lt;a href=&#34;craftdocs://open?blockId=CD09006B-0CCF-4E35-BF90-34650282AA0C&amp;amp;spaceId=e9983e66-9ce7-993a-ad36-dd817783b2b8&#34;&gt;PageRank&lt;/a&gt;（也被称为 PR 值），是搜索引擎排名的重要指标之一。PR 值只能通过 dofollow 链接传递，不能通过 nofollow 链接传递。&lt;/p&gt;&#xA;&lt;p&gt;并且 PR 值的分配是根据页面上搜索链接来平均分配的，不论这个链接是否允许 follow，比如当前页面的 PR 值为 10，页面中有 10 个链接（5 个 dofollow 和 5 个 nofollow），那么每个 dofollow 链接将分别获得 1 PR 值传递，而不是 2；该页面的 10 PR 值被平均分给了该页面中的所有 10 个链接，只是其中标记为 nofollow 的链接不会获得对应的 PR 值传递。&lt;/p&gt;&#xA;&lt;p&gt;由于搜索引擎爬虫不会爬取 nofollow 链接，所有我们可以将不希望搜索引擎爬取或者没有必要让搜索引擎爬取的页面（比如注册、登陆等等）的链接标记为 nofollow，以帮助搜索引擎爬虫更有效的抓取到更值得被索引的页面。&lt;/p&gt;&#xA;&lt;p&gt;通过付费买卖 dofollow 链接（可以买卖链接，但必须是 nofollow 链接）来传递 PR 值的行为是被搜索引擎明令禁止的，搜索引擎更希望网站通过其优质的内容来获得被链接，这有助于提升搜索引擎整体的内容质量。&lt;/p&gt;&#xA;&lt;p&gt;没人清楚搜索引擎如何识别网站是否付费买卖链接，但是至少 Google 提供了对应的 &lt;a href=&#34;https://www.google.com/webmasters/tools/paidlinks&#34;&gt;付费链接举报工具&lt;/a&gt;，被举报后 Google 将进行检查，一旦查实必定得到惩罚。&lt;/p&gt;&#xA;&lt;p&gt;通常情况下我们都认为 nofollow 链接不会影响搜索引擎排名，但是有的说法表示 nofollow 链接可能也会影响被链接网页在搜索引擎中的排名，这无从得知，搜索引擎的算法时不可能完全公开的。但是同一个页面中的 dofollow 链接会比 nofollow 链接向被链接网页传递更多的权重这基本是可以确定的。&lt;/p&gt;&#xA;&lt;p&gt;不必追求自己网站获得的所有外链都是 dofollow 链接，一定比例的 nofollow 链接是正常的（甚至比 100% 是 dofollow 更为异常）。&lt;/p&gt;&#xA;&lt;p&gt;并且 nofollow 链接也不是一无是处的，毕竟只要是链接都能增加被曝光的机会，即任何链接都有可能带来流量，而流量则可以提供产生 dofollow 链接的机会。&lt;/p&gt;&#xA;&lt;p&gt;建设外链最核心的三步转化：1）你的网站被看见、2）你的网站被喜欢、3）你的网站被分享。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;参考：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ahrefs.com/blog/zh/nofollow-links/&#34;&gt;https://ahrefs.com/blog/zh/nofollow-links/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>macOS 删除系统自带的 ABC 输入法</title>
      <link>http://localhost:1313/p/macos-remove-abc/</link>
      <pubDate>Tue, 21 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/macos-remove-abc/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;以下操作均在 macOS Sonoma 14.3 上进行，不确定其他 macOS 系统是否适用。&lt;br&gt;&#xA;但看网上文章即使是其他 macOS 系统大多也都成功了。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;原理：要删除 macOS 自带的 ABC 输入法，本质上就是要删除对应的配置。&lt;/p&gt;&#xA;&lt;p&gt;macOS 的配置文件基本都是以 &lt;code&gt;.plist&lt;/code&gt; 为后缀的文件，而输入法相关的配置都存储在 &lt;code&gt;com.apple.HIToolbox.plist&lt;/code&gt; 这个系统配置文件中，该配置文件主要负责存储与用户界面相关的配置，比如：输入设备、键盘布局、鼠标设置、触控板手势等等。&lt;/p&gt;&#xA;&lt;p&gt;💡 提示：打开/修改 &lt;code&gt;.plist&lt;/code&gt; 文件需要使用 Xcode 或者 PlistEdit Pro 软件。&lt;/p&gt;&#xA;&lt;p&gt;⚠️ 注意：通常不建议普通用户随意修改系统 &lt;code&gt;.plist&lt;/code&gt; 文件，这可能会影响系统的稳定性和安全性。&lt;/p&gt;&#xA;&lt;h2 id=&#34;关闭开启-sip&#34;&gt;关闭/开启 SIP&lt;/h2&gt;&#xA;&lt;p&gt;在修改系统配置文件之前，需要先关闭系统完整性保护（SIP），SIP 的主要目的是保护系统文件和目录，防止它们被未经授权的修改，这种保护措施甚至对 Root 用户也有效。&lt;/p&gt;&#xA;&lt;p&gt;⚠️ 注意：SIP 默认开启，如需关闭 SIP 以修改一些系统配置文件，也非常建议完成修改之后重启 SIP。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;如何确定是否已经关闭/开启 SIP？&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;打开终端，输入 &lt;code&gt;csrutil status&lt;/code&gt; 命令，回车执行该命令，终端将显示一条消息来提示 SIP 状态，比如：&lt;code&gt;System Integrity Protection status: enabled&lt;/code&gt; 。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;关闭/开启 SIP 的详细步骤：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;重启 Mac，重启过程中持续按住 &lt;code&gt;Command + R&lt;/code&gt; ，进入恢复模式&lt;/li&gt;&#xA;&lt;li&gt;进入恢复模式后，打开终端（路径：顶部菜单栏 - 实用工具 - 终端）&lt;/li&gt;&#xA;&lt;li&gt;输入 &lt;code&gt;csrutil disable&lt;/code&gt; 命令，回车执行该命令&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;完成步骤 3 后，如果一切正常，终端将显示一条消息来提示 SIP 已经禁用，并提示重启 Mac，根据提示操作即可。&lt;/p&gt;&#xA;&lt;p&gt;开启 SIP 的步骤和关闭非常类似，仅在步骤 3 时，输入 &lt;code&gt;csrutil enable&lt;/code&gt; 命令，回车执行该命令。如果一切正常，终端将显示一条消息来提示 SIP 已经启用，并提示重启 Mac，根据提示操作即可。&lt;/p&gt;&#xA;&lt;h2 id=&#34;修改配置文件以删除-abc-输入法&#34;&gt;修改配置文件以删除 ABC 输入法&lt;/h2&gt;&#xA;&lt;p&gt;输入法相关的系统配置文件 &lt;code&gt;com.apple.HIToolbox.plist&lt;/code&gt; 在 👇 这个路径下，可以打开 Finder 按下 &lt;code&gt;Commans + Shift + G&lt;/code&gt; 输入（复制粘贴）该路径，回车，然后将该文件拖入 Xcode（或者使用 Xcode 选择打开）。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~/Library/Preferences/com.apple.HIToolbox.plist&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也可以直接在终端执行以下命令（可能会要求输入密码，即 Mac 开机密码，输入的字符不可见），都可以打开该配置文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo open ~/Library/Preferences/com.apple.HIToolbox.plist&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;成功（正常）打开后的配置文件如下图，在 Root - AppleEnabledInputSources 下有一系列 Item，找到 KeyboardLayout Name = ABC 的 Item（比如下图中的 Item 2），将该 Item 完整删除（比如完整选中 Item 2 后点击删除）。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;删除完成后保存（&lt;code&gt;Command + S&lt;/code&gt;）该配置文件，随后重启 Mac 即可。&lt;/p&gt;&#xA;&lt;h2 id=&#34;添加-abc-输入法&#34;&gt;添加 ABC 输入法&lt;/h2&gt;&#xA;&lt;p&gt;如果要重新将 ABC 输入法添加回来，只需要进入「系统设置 - 键盘 - 输入法」点击 + 号，选择「英语 - ABC」点击「添加」即可。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>NuPhy Air75 V2 使用指南</title>
      <link>http://localhost:1313/p/nuphy-air75-v2-use-guide/</link>
      <pubDate>Sun, 19 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/nuphy-air75-v2-use-guide/</guid>
      <description>&lt;h2 id=&#34;使用手册&#34;&gt;使用手册&lt;/h2&gt;&#xA;&lt;p&gt;⬇️ PDF：&lt;a href=&#34;https://cdn.shopify.com/s/files/1/0268/7297/1373/files/NuPhy_Air75_V2_Quick_Guide.pdf?v=1696498123&#34;&gt;NuPhy Air75 V2 Quick Guide&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;常见问题-&#34;&gt;常见问题 😅&lt;/h2&gt;&#xA;&lt;h3 id=&#34;设备连接切换&#34;&gt;设备连接/切换&lt;/h3&gt;&#xA;&lt;p&gt;关于无限连接切换设备、蓝牙匹配、2.4G 连接等操作，使用 FN 键加**::数字键::** 1~4，而不是 FN 键加 F1～F4。&lt;/p&gt;&#xA;&lt;h3 id=&#34;键盘自动休眠模式&#34;&gt;键盘自动休眠模式&lt;/h3&gt;&#xA;&lt;p&gt;开启键盘自动休眠模式后，若键盘连续 6 分钟没有任何操作，将进入休眠模式（键盘背光关闭）。&lt;/p&gt;&#xA;&lt;p&gt;注：自动休眠时间默认 6 分钟，暂时不清楚如何自定义这个自动休眠时间。&lt;/p&gt;&#xA;&lt;p&gt;使用快捷键 &lt;code&gt;FN + ]&lt;/code&gt; 开关键盘自动休眠模式，按下 &lt;code&gt;FN + ]&lt;/code&gt; 后，如果键盘右上角 RGB 灯条闪烁 3 次红灯，意味着关闭自动休眠模式，如果闪烁 3 次绿灯，意味着开启自动休眠模式。&lt;/p&gt;&#xA;&lt;h2 id=&#34;更新固件&#34;&gt;更新固件&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://nuphy.com/pages/qmk-firmwares&#34;&gt;https://nuphy.com/pages/qmk-firmwares&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;准备工作&#34;&gt;准备工作&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;安装 QMK Toolbox&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;前往 &lt;a href=&#34;https://github.com/qmk/qmk_toolbox&#34;&gt;GitHub QMK Toolbox 仓库&lt;/a&gt; 下载对应操作系统的软件。&lt;/p&gt;&#xA;&lt;p&gt;macOS 可以使用 Homebrew 进行安装：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install qmk-toolbox&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;⚠️ 注意：QMK Toolbox 似乎还没有专门为 M 芯片（ARM 架构）的 Mac 提供适配。&lt;/p&gt;&#xA;&lt;p&gt;我的 M1 Mac 使用 Homebrew 安装的 QMK Toolbox 在后续 Flash 固件时会提示 &lt;code&gt;The operation couldn’t be completed. Bad CPU type in executable&lt;/code&gt; ，最终固件更新失败。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;而通过 QMK Toolbox Installer 安装的 QMK Toolbox 则能成功 Flash 固件，不会提示 CPU 类型异常。 可能是由于 M 芯片的 Mac 在通过 QMK Toolbox Installer 安装 Intel 程序时会要求安装 Rosetta，而 Rosetta 可以让 Intel 程序在 M 芯片上更好的运行。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;下载固件&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;前往 &lt;a href=&#34;https://nuphy.com/pages/qmk-firmwares&#34;&gt;Nuphy 固件发布页面&lt;/a&gt; 下载对应键盘型号的固件。注：固件文件后缀为 &lt;code&gt;.bin&lt;/code&gt; 。&lt;/p&gt;&#xA;&lt;h3 id=&#34;开始更新&#34;&gt;开始更新&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;打开 QMK Toolbox&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-1.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;点击「Open」选择已下载好的固件文件&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-2.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;将 Nuphy Air75 V2 切换到有线连接模式，按住 ESC 键然后再插入 USB-C 以连接键盘和电脑&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;⚠️ 注意：这一步操作的顺序非常重要，先断开键盘和电脑的连接，然后按住 ESC 键的同时插入 USB-C 来连接键盘和电脑。&lt;/p&gt;&#xA;&lt;p&gt;当 QMK Toolbox 显示如图中黄色文本（提示设备已连接）时则意味着键盘已经成功连接。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-3.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;点击「Flash」开始更新固件&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;⚠️ 注意：更新的过程中千万、一定、绝对不要断开键盘和电脑的有线连接。&lt;/p&gt;&#xA;&lt;p&gt;如果一切正常，QMK Toolbox 会开始执行一系列 Erase 和 Download，当固件更新完成，QMK Toolbox 会主动断开和键盘的连接。&lt;/p&gt;&#xA;&lt;p&gt;当 QMK Toolbox 显示如图中最后一行黄色文本（Flash complete）即意味着固件更新完成。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-4.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-5.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;配置键盘&#34;&gt;配置键盘&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://nuphy.com/pages/via-usage-guide-for-nuphy-keyboards&#34;&gt;https://nuphy.com/pages/via-usage-guide-for-nuphy-keyboards&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;NuPhy Air75 V2 需要使用 &lt;a href=&#34;https://github.com/the-via&#34;&gt;VIA&lt;/a&gt; 来配置键盘键位以及录制宏等操作，NuPhy 官方说他们已经向 VIA 提交代码以使 VIA 可以直接自动检测到 NuPhy 键盘的基础配置。但是现在（2024.09.03）还不行，得等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;准备工作-1&#34;&gt;准备工作&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;下载官方配置文件&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在 &lt;a href=&#34;https://nuphy.com/pages/json-files-for-nuphy-keyboards&#34;&gt;NuPhy 官方配置文件发布页面&lt;/a&gt; 下载对应键盘的配置文件（&lt;code&gt;.json&lt;/code&gt; 文件）。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;将官方配置文件导入 VIA&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;使用浏览器（官方推荐使用 Chrominum 内核的浏览器）访问 &lt;a href=&#34;https://usevia.app/&#34;&gt;usevia.app&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;点击页面顶部「Settings」图标，在设置页面开启「Show Design tab」选项；开启之后页面顶部会出现「Design」页面的图标。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-9.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;前往「Design」页面，将步骤 1 下载的 NuPhy 官方配置文件上传。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-10.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;上传前 👆&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-11.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;上传后 👆&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;连接键盘至电脑&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;将键盘调为有线模式（Wired）并使用 USB 线缆连接键盘和电脑。&lt;/p&gt;&#xA;&lt;p&gt;然后前往「Configure」页面，点击「Authorize device」按钮；这时浏览器会弹出对话框提示如下，在弹窗的设备列表中选中目标设备，点击「链接」。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-6.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此时页面会显示键盘详细配置信息，就可以开始自定义键位以及录制宏等操作了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-8.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;自定义配置&#34;&gt;自定义配置&lt;/h3&gt;&#xA;&lt;p&gt;在配置页面上半方选中任意按键（按键高亮闪烁即为选中），然后点击配置页面下半方的按键值即可将选中按键的键值映射为目标键值。&lt;/p&gt;&#xA;&lt;p&gt;至此键盘键位配置就已经更新了，不需要手动保存，后续即使断开键盘与电脑的有线连接，键位也是更新后的配置。&lt;/p&gt;&#xA;&lt;p&gt;如果想将自己的配置分享给别人或者使用别人分享的配置，可以点击配置页面下半方左侧边栏中的「Save + Load」，选择将自己当前的配置另存为配置文件或者导入别人分享的配置文件。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;我改了什么配置？&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;NuPhy Air75 V2 提供了一个「截图」按键，默认情况下点击该按键会调用系统原生截图工具进行截图，而我日常使用的截图工具是 &lt;a href=&#34;https://www.snipaste.com/&#34;&gt;Snipaste&lt;/a&gt;，其快捷键为 &lt;code&gt;F1&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;所以我将键值 &lt;code&gt;F1&lt;/code&gt; 映射到了键盘「截图」按键。&lt;/p&gt;&#xA;&lt;p&gt;关于自定义配置的更多高级操作不在此展开，我也不会。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>利用 URL Scheme 快速打开 Craft Daily Note</title>
      <link>http://localhost:1313/p/craft-url-scheme/</link>
      <pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/craft-url-scheme/</guid>
      <description>&lt;p&gt;在 &lt;a href=&#34;https://support.craft.do/hc/en-us/articles/360020168838-Using-URL-Scheme&#34;&gt;Craft Help Center&lt;/a&gt; 可以查看 Craft 支持的所有 URL Scheme 方案。本文只分享其中「Access to Daily Notes」相关的内容。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Access to Daily Notes&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Yesterday&lt;/strong&gt; - craftdocs://openByQuery?query=yesterday&amp;amp;spaceId=&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Today&lt;/strong&gt; - craftdocs://openByQuery?query=today&amp;amp;spaceId=&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tomorrow&lt;/strong&gt; - craftdocs://openByQuery?query=tomorrow&amp;amp;spaceId=&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;以上是 Craft 提供的支持快速打开 Craft Daily Note 的 URL Scheme，3 个 URL Scheme 的区别仅仅在于打开的 Daily Note 是昨天、今天还是明天。&lt;/p&gt;&#xA;&lt;h2 id=&#34;配置-url-scheme-参数&#34;&gt;配置 URL Scheme 参数&lt;/h2&gt;&#xA;&lt;p&gt;所有 URL Scheme 都需要提供一个 &lt;code&gt;spaceId&lt;/code&gt; 参数，这个参数可以在 Craft 中任意一篇文档的 Deeplink 中获得。关于 Craft Deeplink 的介绍可以在 &lt;a href=&#34;https://support.craft.do/hc/en-us/articles/360020043878-How-to-link-into-a-specific-place-in-Craft-with-a-Deeplink&#34;&gt;Craft Help Center&lt;/a&gt; 查看。&lt;/p&gt;&#xA;&lt;p&gt;获取 Deeplink 路径/方法：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;打卡任意一篇文档&lt;/li&gt;&#xA;&lt;li&gt;点击「Share」&lt;/li&gt;&#xA;&lt;li&gt;点击「Export as」&lt;/li&gt;&#xA;&lt;li&gt;点击「Advanced」&lt;/li&gt;&#xA;&lt;li&gt;点击「Copy Deeplink」&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;将复制到的 Deeplink 粘贴到某个文本编辑器，可以看到如下内容，其中 &lt;code&gt;spaceId=&lt;/code&gt; 后面的内容就是我们需要的 &lt;code&gt;spaceId&lt;/code&gt; 参数。&lt;/p&gt;&#xA;&lt;p&gt;⚠️ 注意：是 &lt;code&gt;spaceId=&lt;/code&gt; 之后的内容，不包括 &lt;code&gt;spaceId=&lt;/code&gt; 这几个字符。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;以打开 Today Daily Note 为例，使用上面获取到的 Deeplink 中的 spaceId 替换 Craft 提供的 URL Scheme 中的 &lt;code&gt;&amp;lt;spaceId&amp;gt;&lt;/code&gt; ，结果如下：&lt;/p&gt;&#xA;&lt;p&gt;⚠️ 注意：是将 &lt;code&gt;&amp;lt;spaceId&amp;gt;&lt;/code&gt; 完整替换掉，包括 &lt;code&gt;&amp;lt;&lt;/code&gt; 、&lt;code&gt;&amp;gt;&lt;/code&gt; 这样的字符。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-1.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这就是一段完整的、可用的 URL Scheme，现在只需要访问该 URL（就像访问 &lt;a href=&#34;https://www.rokcso.com&#34;&gt;https://www.rokcso.com&lt;/a&gt; 一样）就能直接打开 Craft Today Daily Note。比如直接在浏览器地址栏输入该 URL 然后回车。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-2.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;快速访问-url&#34;&gt;快速访问 URL&lt;/h2&gt;&#xA;&lt;p&gt;为了让访问该 URL 这个动作更便捷，我使用 Raycast 的 Quicklinks 功能，配置一个名为「Today Craft」的 Quicklink 来快捷访问该 URL，并给该 Quicklink 配置了一个别名（Alias）。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-3.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;最终效果&lt;/strong&gt;：不论在任何 App、任何窗口、任何页面中，只需唤起 Raycast 然后输入「tc」，点击回车，即可直达 Craft Today Daily Note。&lt;/p&gt;&#xA;&lt;p&gt;注：如果给 Today Craft 这个 Quicklink 配置一个快捷键，那么不论在任何 App、任何窗口、任何页面中，只需要按下该快捷键，即可直达 Craft Today Daily Note。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>使用 JavaScript 配置 Umami Track Event</title>
      <link>http://localhost:1313/p/umami-track-event/</link>
      <pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/umami-track-event/</guid>
      <description>&lt;p&gt;当前（2023-08-09）我的 umami 部署版本为 Version 1.40.0，官方已经发布版本为 Version 2.4.1。&lt;/p&gt;&#xA;&lt;p&gt;Umami Version 1.40 及以上版本支持 Tarck Event，即事件跟踪，简单的说就是可以跟踪用户在网页上面的事件操作，比如点击按钮。&lt;/p&gt;&#xA;&lt;p&gt;在 &lt;a href=&#34;https://umami.is/docs/track-events&#34;&gt;官方文档&lt;/a&gt; 中提供了两种简单配置方案，根据当前（2023-08-09）文档显示可以通过给按钮添加数据属性或者使用 JavaScript 监听按钮的点击事件然后执行 &lt;code&gt;umami.track()&lt;/code&gt; 方法上报事件数据。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;调试方法：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;按照官方文档提供的方案进行配置后，访问网页，打开 Chrome 开发者工具中的 Network，然后点击已经配置了 Track Event 的按钮，关注是否有新的名为 &lt;code&gt;collect&lt;/code&gt; 的请求被发起，如果有，则关注 Request Payload 中传入的参数是否符合预期。&lt;img src=&#34;./img01.png&#34; alt=&#34;img01&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;问题：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;两种方案在我实践之后均无法成功上报数据，使用 JavaScript 方案时 Chrome 开发者工具 Console 中报错 &lt;code&gt;umami.track is not a function&lt;/code&gt;，可能是由于我部署的 umami 版本不支持上述方案，&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;解决方案：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;在不升级我部署的 umami 版本的基础上，我最终发现可以通过 JavaScript 监听按钮的点击事件然后执行 &lt;code&gt;umami()&lt;/code&gt; 方法上报事件数据。&lt;/p&gt;&#xA;&lt;p&gt;比如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#04a5e5&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;btn-copy&amp;#34;&lt;/span&gt;).onclick &lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt; () =&amp;gt; umami(&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;clickCopyBtn&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;除了使用 JavaScript 方案外，umami Version 1.40.0 应该还支持通过给按钮添加 Class 来配置 Track Event，类的命名格式要求为：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;umami--&amp;lt;&lt;span style=&#34;color:#8839ef&#34;&gt;event&lt;/span&gt;&amp;gt;--&amp;lt;&lt;span style=&#34;color:#8839ef&#34;&gt;event-name&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;比如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#8839ef&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;btn-copy&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1e66f5&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a02b&#34;&gt;&amp;#34;umami--click--clickCopyBtn&amp;#34;&lt;/span&gt;&amp;gt;Copy&amp;lt;/&lt;span style=&#34;color:#8839ef&#34;&gt;button&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注：该方法（添加 Class）未经校验。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>语义化版本控制规范 2.0.0</title>
      <link>http://localhost:1313/p/semantic-version/</link>
      <pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/semantic-version/</guid>
      <description>&lt;p&gt;版本号格式：主版本号.次版本号.修订号&lt;/p&gt;&#xA;&lt;p&gt;版本号递增规则：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;主版本号：当有不向下兼容的功能发布时&lt;/li&gt;&#xA;&lt;li&gt;次版本号：当有可向下兼容的功能发布时&lt;/li&gt;&#xA;&lt;li&gt;修订号：当有可向下兼通的&lt;strong&gt;问题修正&lt;/strong&gt;发布时&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;注意：构建号与版本号不同，不受此规范约束。&lt;/p&gt;&#xA;&lt;h2 id=&#34;规范重点摘要&#34;&gt;规范重点摘要&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;标准的版本号必须使用 X.Y.Z 格式（对应 major.minor.patch），且 X、Y、Z 为非负整数，数字前方禁止补零（如 01 是不被允许的），禁止留白。范例：1.3.2、3.0.0 等等&lt;/li&gt;&#xA;&lt;li&gt;新版本号标记的内容发布后，禁止再使用该版本号发布任何内容，往后任何内容变更都必须新起一个版本号&lt;/li&gt;&#xA;&lt;li&gt;开发初始阶段（非稳定版），主版本号设定为零&lt;/li&gt;&#xA;&lt;li&gt;每当主版本号递增时，次版本号和修订号必须归零；每当次版本号递增时，修订号必须归零&lt;/li&gt;&#xA;&lt;li&gt;先行版本号（非稳定版）标注在正式版本号之后，使用「-」连接，先行版本号由 ASCII 字母、数字 [0-9A-Za-z] 以及分隔符英文句点「.」组成，数字前方禁止补零，禁止留白。范例：1.0.0-alpha、1.0.0-beta.1、1.0.0-0.2.1、1.0.0-x.7.a.13 等等&lt;/li&gt;&#xA;&lt;li&gt;版本编译信息标注在（正式或先行）版本号之后，使用「+」连接，版本编译信息标识符由 ASCII 字母、数字 [0-9A-Za-z] 以及分隔符英文句点「.」组成，禁止留白。范例：1.0.0+001、1.0.0-beta.1+sha.34f8h4 等等&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;版本优先级&#34;&gt;版本优先级&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;排序时仅考虑主版本号、次版本号、修订号、先行版本号进行比较，版本编译信息不影响版本优先级&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;注意：避免使用难以明确优先级的先行版本号。先行版本一般可使用 alpha &amp;lt; beta &amp;lt; rc 标识。&lt;/p&gt;&#xA;&lt;h2 id=&#34;其他提示&#34;&gt;其他提示&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;初始开发版本建议为 0.1.0&lt;/li&gt;&#xA;&lt;li&gt;当软件要被用于生产环境时就可以发布 1.0.0&lt;/li&gt;&#xA;&lt;li&gt;v2.3.1 不是一个语义化版本号，v 只是 version 的缩写，是版本号的标签&lt;/li&gt;&#xA;&lt;li&gt;检查语义化版本号正确性的正则表达式：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#4c4f69;background-color:#eff1f5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;^&lt;/span&gt;(&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?&lt;/span&gt;P&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;major&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;|&lt;/span&gt;[&lt;span style=&#34;color:#fe640b&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;9&lt;/span&gt;]&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;d&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;.(&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?&lt;/span&gt;P&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;minor&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;|&lt;/span&gt;[&lt;span style=&#34;color:#fe640b&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;9&lt;/span&gt;]&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;d&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;.(&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?&lt;/span&gt;P&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;patch&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;|&lt;/span&gt;[&lt;span style=&#34;color:#fe640b&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;9&lt;/span&gt;]&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;d&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;*&lt;/span&gt;)(&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?:-&lt;/span&gt;(&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?&lt;/span&gt;P&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;prerelease&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;(&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?:&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;|&lt;/span&gt;[&lt;span style=&#34;color:#fe640b&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;9&lt;/span&gt;]&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;d&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;*|&lt;/span&gt;&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;d&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;*&lt;/span&gt;[a&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;zA&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;Z&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;][&lt;span style=&#34;color:#fe640b&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;9&lt;/span&gt;a&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;zA&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;Z&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;]&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;*&lt;/span&gt;)(&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?:&lt;/span&gt;&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;.(&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?:&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;|&lt;/span&gt;[&lt;span style=&#34;color:#fe640b&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;9&lt;/span&gt;]&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;d&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;*|&lt;/span&gt;&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;d&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;*&lt;/span&gt;[a&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;zA&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;Z&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;][&lt;span style=&#34;color:#fe640b&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;9&lt;/span&gt;a&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;zA&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;Z&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;]&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;*&lt;/span&gt;))&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;*&lt;/span&gt;))&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?&lt;/span&gt;(&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?:&lt;/span&gt;&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;+&lt;/span&gt;(&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?&lt;/span&gt;P&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;buildmetadata&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;[&lt;span style=&#34;color:#fe640b&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;9&lt;/span&gt;a&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;zA&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;Z&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;]&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;+&lt;/span&gt;(&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?:&lt;/span&gt;&lt;span style=&#34;color:#d20f39&#34;&gt;\&lt;/span&gt;.[&lt;span style=&#34;color:#fe640b&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#fe640b&#34;&gt;9&lt;/span&gt;a&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;zA&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;Z&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;-&lt;/span&gt;]&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;+&lt;/span&gt;)&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;*&lt;/span&gt;))&lt;span style=&#34;color:#04a5e5;font-weight:bold&#34;&gt;?&lt;/span&gt;$&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Link: &lt;a href=&#34;https://regex101.com/r/Ly7O1x/3/&#34;&gt;https://regex101.com/r/Ly7O1x/3/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://semver.org/lang/zh-CN/&#34;&gt;语义化版本控制规范 2.0.0&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>🐈 Sui Sui</title>
      <link>http://localhost:1313/p/suisui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/suisui/</guid>
      <description>&lt;p&gt;Sui Sui is a cat with a mischievous and playful demeanor, yet often endearing and charming, bringing a lot of healing to us.&lt;/p&gt;&#xA;&lt;p&gt;He is already two years old, very healthy, but occasionally suffers from a slight skin condition.&lt;/p&gt;&#xA;&lt;p&gt;He is quite a big guy, weighing a whopping 5.2 kg!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image.jpg#minipic&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Now</title>
      <link>http://localhost:1313/now/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/now/</guid>
      <description>&lt;h1 id=&#34;what-im-doing-right-now&#34;&gt;What I&amp;rsquo;m doing right now&lt;/h1&gt;&#xA;&lt;p&gt;This is a snapshot of my current endeavors and focal points. Inspired by &lt;a href=&#34;https://nownownow.com/about&#34;&gt;nownownow.com&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Last updated on 2024-08-30, Hangzhou, China.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;life&#34;&gt;Life&lt;/h2&gt;&#xA;&lt;p&gt;The temperature in Hangzhou has dropped a bit compared to half a month ago, and it&amp;rsquo;s no longer as unbearable as it was.&lt;/p&gt;&#xA;&lt;p&gt;Sui Sui (my cat) has also recovered from illness.&lt;/p&gt;&#xA;&lt;p&gt;My girlfriend and I are planning to go to the seaside to watch the sunrise this weekend. Hangzhou is about 100km from the nearest seaside, so we have to set out early in the morning, of course, not by motorcycle!&lt;/p&gt;&#xA;&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;&#xA;&lt;p&gt;I spent two days launching a new website, &lt;a href=&#34;https://skillix.cc/&#34;&gt;Skillix.cc&lt;/a&gt;. Currently, this website will provide navigation and recommendation services for the columns of &lt;a href=&#34;https://xiaobot.net/&#34;&gt;Xiaobaotong&lt;/a&gt; (a knowledge payment platform). If users pay through our website, I will receive a rebate, and I will also give a rebate to the users, so that they can purchase the columns at a lower cost.&lt;/p&gt;&#xA;&lt;p&gt;Next, I plan to study RPA (Robotic Process Automation) because my current several navigation websites have too much data that needs manual maintenance, which is becoming an increasingly heavy burden for me.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Projects</title>
      <link>http://localhost:1313/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/</guid>
      <description>&lt;h1 id=&#34;projects&#34;&gt;Projects&lt;/h1&gt;&#xA;&lt;h2 id=&#34;ongoing-projects&#34;&gt;Ongoing projects&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.pansou.vip/&#34;&gt;A network disk search tool navigation station, the first manual test standard&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://skillix.cc/&#34;&gt;Xiaobaotong column recommendations and preferential services&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ohmynav.com/&#34;&gt;A website to share the useful things I found&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;A Weixin Official Accounts to share the useful things I found (#空字节)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;archived-projects&#34;&gt;Archived projects&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://urlxcode.rokcso.com/&#34;&gt;Online URL Encode/Decode Tool&lt;/a&gt; (&lt;a href=&#34;https://github.com/rokcso/NextURLxcode&#34;&gt;Open source&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.raycast.com/rokcso/feishu-document-creator&#34;&gt;Create Feishu/Lark online document quickly&lt;/a&gt; (A Raycast extension)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;dead-projects&#34;&gt;Dead projects&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://z-lib.one/&#34;&gt;Find all available Z-Library websites in one place&lt;/a&gt; (Only survived for 8 days)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
  </channel>
</rss>