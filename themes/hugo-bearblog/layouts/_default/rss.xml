{{- /* Deprecate site.Author.email in favor of site.Params.author.email */}}
<!-- 初始化 Author Email 变量 -->
{{- $authorEmail := "" }}
<!-- 检查站点 Params.author 对象 -->
{{- with site.Params.author }}
<!-- 如果存在 -->
  {{- if reflect.IsMap . }}
  <!-- 检查是否存在 email 属性 -->
    {{- with .email }}
    <!-- 如果存在，将 email 值赋值给变量 -->
      {{- $authorEmail = . }}
    {{- end }}
  {{- end }}
  <!-- 如果不存在 -->
{{- else }}
<!-- 则检查是否存在 Author.email -->
  {{- with site.Author.email }}
  <!-- 如果存在，赋值 -->
    {{- $authorEmail = . }}
    <!-- 警告提示 -->
    {{- warnf "The author key in site configuration is deprecated. Use params.author.email instead." }}
  {{- end }}
{{- end }}

<!-- 同上的流程处理 Author Name -->
{{- /* Deprecate site.Author.name in favor of site.Params.author.name */}}
{{- $authorName := "" }}
{{- with site.Params.author }}
  {{- if reflect.IsMap . }}
    {{- with .name }}
      {{- $authorName = . }}
    {{- end }}
  {{- else }}
    {{- $authorName  = . }}
  {{- end }}
{{- else }}
  {{- with site.Author.name }}
    {{- $authorName = . }}
    {{- warnf "The author key in site configuration is deprecated. Use params.author.name instead." }}
  {{- end }}
{{- end }}

<!-- 初始化一个变量用来存储上下文 -->
{{- $pctx := . }}
<!-- 如果当前页面是首页，则上下文为整个站点 -->
{{- if .IsHome }}{{ $pctx = .Site }}{{ end }}
<!-- 初始化一个空的页面切片 -->
{{- $pages := slice }}
<!-- 如果当前页面是首页或者分类页面 -->
{{- if or $.IsHome $.IsSection }}
<!-- 获取 RegularPages 赋值给页面变量 -->
{{- $pages = $pctx.RegularPages }}
{{- else }}
<!-- 否则就获取所有页面 -->
{{- $pages = $pctx.Pages }}
{{- end }}
<!-- 获取站点配置中关于 RSS 生成条数的限制 -->
{{- $limit := .Site.Config.Services.RSS.Limit }}
<!-- 如果限制大于等于 1，则应用限制 -->
{{- if ge $limit 1 }}
<!-- 获取前 限制数 个页面 -->
{{- $pages = $pages | first $limit }}
{{- end }}
<!-- 打印 XML 声明，这里打印的内容会出现在最终生成的 RSS XML 文件中 -->
{{- printf "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" | safeHTML }}
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>{{ if eq .Title .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{ . }} on {{ end }}{{ .Site.Title }}{{ end }}</title>
    <link>{{ .Permalink }}</link>
    <description>Recent content {{ if ne .Title .Site.Title }}{{ with .Title }}in {{ . }} {{ end }}{{ end }}on {{ .Site.Title }}</description>
    <generator>Hugo</generator>
    <language>{{ site.Language.LanguageCode }}</language>{{ with $authorEmail }}
    <managingEditor>{{.}}{{ with $authorName }} ({{ . }}){{ end }}</managingEditor>{{ end }}{{ with $authorEmail }}
    <webMaster>{{ . }}{{ with $authorName }} ({{ . }}){{ end }}</webMaster>{{ end }}{{ with .Site.Copyright }}
    <copyright>{{ . }}</copyright>{{ end }}{{ if not .Date.IsZero }}
    <lastBuildDate>{{ (index $pages.ByLastmod.Reverse 0).Lastmod.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</lastBuildDate>{{ end }}
    {{- with .OutputFormats.Get "RSS" }}
    {{ printf "<atom:link href=%q rel=\"self\" type=%q />" .Permalink .MediaType | safeHTML }}
    {{- end }}
    {{- range $pages }}
    <item>
      <title>{{ .Title }}</title>
      <link>{{ .Permalink }}</link>
      <pubDate>{{ .PublishDate.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</pubDate>
      {{- with $authorEmail }}<author>{{ . }}{{ with $authorName }} ({{ . }}){{ end }}</author>{{ end }}
      <guid>{{ .Permalink }}</guid>
      <description>{{ .Summary | transform.XMLEscape | safeHTML }}</description>
    </item>
    {{- end }}
  </channel>
</rss>